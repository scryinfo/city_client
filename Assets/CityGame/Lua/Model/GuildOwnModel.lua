---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2019/2/21 10:23
---

GuildOwnModel = class("GuildOwnModel", ModelBase)

function GuildOwnModel:initialize(insId)
    self.insId = insId
    self:OnCreate()
end

function GuildOwnModel:OnCreate()
    -- Network callback registration
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","modifySocietyName","gs.BytesStrings", self.n_ModifySocietyName, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","modifyIntroduction","gs.BytesStrings", self.n_ModifyIntroduction, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","modifyDeclaration","gs.BytesStrings", self.n_ModifyDeclaration, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","kickMember","gs.Ids", self.n_KickMember, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","appointerPost","gs.AppointerReq", self.n_AppointerPost, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","delJoinReq","gs.JoinReq", self.n_DelJoinReq, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","newJoinReq","gs.JoinReq", self.n_NewJoinReq, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","exitSociety","gs.ByteBool", self.n_ExitSociety, self)
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","memberChange", "gs.MemberChanges", self.n_MemberChanges, self)
end

function GuildOwnModel.Close()

end

-- 改联盟名字
function GuildOwnModel:m_ModifySocietyName(bytesStrings)
    DataManager.ModelSendNetMes("gscode.OpCode", "modifySocietyName", "gs.BytesStrings", bytesStrings)
end

-- 改名字返回
function GuildOwnModel:n_ModifySocietyName(bytesStrings, msgId)
    --异常处理
    if msgId == 0 then
        if bytesStrings.reason == "societyNameDuplicated"then
            --Event.Brocast("SmallPop","公会名字重复！",80)
            local showData = {}
            showData.titleInfo = "提示"
            showData.contentInfo = "公会名字重复！"
            showData.tipInfo = ""
            ct.OpenCtrl("BtnDialogPageCtrl", showData)
        elseif bytesStrings.reason == "highFrequency"then
            --Event.Brocast("SmallPop","每七天只能修改一次名称！",80)
            local showData = {}
            showData.titleInfo = "提示"
            showData.contentInfo = "每七天只能修改一次名称！"
            showData.tipInfo = ""
            ct.OpenCtrl("BtnDialogPageCtrl", showData)
        end
        return
    end
    Event.Brocast("c_ModifySocietyName", bytesStrings)
end

-- 改联盟介绍
function GuildOwnModel:m_ModifyIntroduction(bytesStrings)
    DataManager.ModelSendNetMes("gscode.OpCode", "modifyIntroduction", "gs.BytesStrings", bytesStrings)
end

-- 改介绍返回
function GuildOwnModel:n_ModifyIntroduction(bytesStrings)
    Event.Brocast("c_ModifyIntroduction", bytesStrings)
end

-- 改联盟宣言
function GuildOwnModel:m_ModifyDeclaration(bytesStrings)
    DataManager.ModelSendNetMes("gscode.OpCode", "modifyDeclaration", "gs.BytesStrings", bytesStrings)
end

-- 改宣言返回
function GuildOwnModel:n_ModifyDeclaration(bytesStrings)
    Event.Brocast("c_ModifyDeclaration", bytesStrings)
end

-- 踢人
function GuildOwnModel:m_KickMember(ids)
    DataManager.ModelSendNetMes("gscode.OpCode", "kickMember", "gs.Ids", ids)
end

-- 踢人返回
function GuildOwnModel:n_KickMember(ids)
    Event.Brocast("c_KickMember", ids)
end

-- 加好友（玩家Id）
function GuildOwnModel:m_AddFriends(byteStr)
    DataManager.ModelSendNetMes("gscode.OpCode", "addFriend","gs.ByteStr",byteStr)
end

-- 职位任命
function GuildOwnModel:m_AppointerPost(appointerReq)
    DataManager.ModelSendNetMes("gscode.OpCode", "appointerPost","gs.AppointerReq",appointerReq)
end

-- 职位任命返回
function GuildOwnModel:n_AppointerPost(appointerReq)
    Event.Brocast("c_AppointerPost", appointerReq)
end

-- 删除已处理的入会请求
function GuildOwnModel:n_DelJoinReq(joinReq)
    Event.Brocast("c_OwnDelJoinReq", joinReq)
end

-- 新增入会请求
function GuildOwnModel:n_NewJoinReq(joinReq)
    Event.Brocast("c_OwnNewJoinReq", joinReq)
end

-- 退出公会返回
function GuildOwnModel:n_ExitSociety(byteBool)
    Event.Brocast("c_OwnSociety", byteBool)
end

-- 成员变更
function GuildOwnModel:n_MemberChanges(memberChanges)
    Event.Brocast("c_MemberChanges", memberChanges)
end