---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cyz_scry.
--- DateTime: 2018/10/20 16:28
---
local coroutine = require("coroutine")
require('__require_first__') --Front inclusion
local AutoRequire = require "AutoRequire"

--Automatically include directories
AutoRequire.getInstance():require("Common")
AutoRequire.getInstance():require("Framework/Interface")
AutoRequire.getInstance():require("Framework/pbl")
AutoRequire.getInstance():require("Framework/UI")
AutoRequire.getInstance():require("test/testFrameWork/memory")
AutoRequire.getInstance():require("test/testFrameWork")


if CityLuaUtil.isluaLogEnable() == false then --If lua log is disabled, then disable the entire test grouping strategy
    function UnitTest.Exec_now(unitGroupId, event,...) return end
    function UnitTest.Exec(unitGroupId, funcName, func) return end
    ct.log = function(logid,s,...) return end

    AutoRequire.getInstance():addCode("function UnitTest.Exec_now(unitGroupId, event,...) return end")
    AutoRequire.getInstance():addCode("function UnitTest.Exec(unitGroupId, funcName, func) return end")
    AutoRequire.getInstance():addCode("ct.log = function(logid,s,...) return end")
else
    --unit test
    AutoRequire.getInstance():require("test/testFrameWork")
    AutoRequire.getInstance():require("test/testFrameWork/memory")
    AutoRequire.getInstance():require("test/group")
    AutoRequire.getInstance():require("test/pbl")
    require('test/__require_first__')
    AutoRequire.getInstance():require("test/performance")
    AutoRequire.getInstance():require("test/performanceOpt1")
    AutoRequire.getInstance():require("test/performanceOpt1/exec")
    AutoRequire.getInstance():require("test/modelPerformance")
    --AutoRequire.getInstance():require("test/testCoroutine")
    AutoRequire.getInstance():require("test")
    AutoRequire.getInstance():require("test/testMain")
end
AutoRequire.getInstance():require("Logic/GameBubble")
AutoRequire.getInstance():require("Logic/PieChart")
AutoRequire.getInstance():require("Logic/ToggleSort")
AutoRequire.getInstance():require("Logic")
AutoRequire.getInstance():require("View")
AutoRequire.getInstance():require("View/BuildingInfo")
AutoRequire.getInstance():require("View/BuildingInfoParts")
AutoRequire.getInstance():require("View/Chat")
AutoRequire.getInstance():require("View/Company")
AutoRequire.getInstance():require("View/Friends")
AutoRequire.getInstance():require("View/Guild")
AutoRequire.getInstance():require("View/Eva")
AutoRequire.getInstance():require("View/NoviceTutorial")
AutoRequire.getInstance():require("View/Logic")
AutoRequire.getInstance():require("Controller")
AutoRequire.getInstance():require("Model")
AutoRequire.getInstance():require("Config")
AutoRequire.getInstance():require("Items")
AutoRequire.getInstance():require("Items/LaboratoryItems")
AutoRequire.getInstance():require("Items/MapItems")
AutoRequire.getInstance():require("Items/FlightForecastItems")
AutoRequire.getInstance():require("Items/NewAddLine")
AutoRequire.getInstance():require("Items/OfflineNotificationItems")
AutoRequire.getInstance():require("Terrain")
AutoRequire.getInstance():requireLast("__require_last__")
--If a new folder is added in the above directory on the disk, the new folder needs to be added to the above "automatically included directory"

function PostRequire()
    require('__require_last__') --Post contained
    AutoRequire.getInstance():FinishedRequire()
end

--When packaging, write AutoRequire.requirePaths to Require_RunTime.lua
function Genfun()
    print("generate_RequireRT---------------------------------")
    AutoRequire.getInstance():WriteRuntimeRequire()
    PostRequire()
end
--if UnityEngine.Application.isEditor then
--    coroutine.start(Genfun)
--end

