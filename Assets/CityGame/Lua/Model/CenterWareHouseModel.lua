---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/11/2 15:22
---Central warehouse
CenterWareHouseModel = class("CenterWareHouseModel",ModelBase)
local pbl = pbl

function CenterWareHouseModel:initialize(insId)
    self.insId = insId
    self:OnCreate()
end

--Start event--
function CenterWareHouseModel:OnCreate()
    --Start event to register local UI event
    Event.AddListener("m_bagCapacity",self.m_bagCapacity,self)
    Event.AddListener("m_opCenterWareHouse",self.m_opCenterWareHouse,self)
    Event.AddListener("m_ReqTransport",self.m_ReqTransport,self);   --Shipping outsourcing
    --as network callback registration
   -- DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","moneyChange","gs.MoneyChange",self.n_GsExtendBag,self)--New model network registration
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","delItem","gs.DelItem",self.n_GsDelItem,self)--New model network registration
    --CityEngineLua.Message:registerNetMsg(pbl.enum("gscode.OpCode","moneyChange"),CenterWareHouseModel.n_GsExtendBag);
    DataManager.ModelRegisterNetMsg(nil,"gscode.OpCode","transferItem","gs.TransferItem",self.n_OnTransportInfo,self) --Shipping callback
end

function CenterWareHouseModel:m_bagCapacity(bagCapacity)
   self.bagCapacity = bagCapacity
end

function CenterWareHouseModel:m_opCenterWareHouse()
    ct.OpenCtrl("CenterWareHouseCtrl",PlayerTempModel.roleData)
end
--Warehouse expansion and delivery
function CenterWareHouseModel:m_ExtendBag()
    local msgId = pbl.enum("gscode.OpCode","extendBag")
    CityEngineLua.Bundle:newAndSendMsg(msgId,nil);
end

--Transport items
function CenterWareHouseModel:m_ReqTransport(src,dst, itemId, n,producerId,qty)
    DataManager.ModelSendNetMes("gscode.OpCode", "transferItem","gs.TransferItem",
            { src = src,dst = dst,item = {key = {id = itemId,producerId = producerId,qty = qty},n = tonumber(n)}} )
end

--Expansion callback
function CenterWareHouseModel:n_GsExtendBag(stream)

    local a = stream
    Event.Brocast("c_GsExtendBag")
end

--Delete callback
function CenterWareHouseModel:n_GsDelItem(pMsg)
    if pMsg ~= nil then
        Event.Brocast("c_DelItem",pMsg.item.id)
        Event.Brocast("c_DelBagItem",pMsg.item.id)
    end
end

--Delete product outsourcing
function CenterWareHouseModel:m_DeleteItem(dataId)
    DataManager.ModelSendNetMes("gscode.OpCode", "delItem","gs.DelItem",
            {buildingId = dataId.buildingId, item = {id = dataId.id,producerId = dataId.producerId,qty = dataId.qty}})
end

--Shipping item callback
function CenterWareHouseModel:n_OnTransportInfo(msgTransportInfo)
    local bagId = DataManager.GetBagId()

    local itemId = msgTransportInfo.item.key.id
    local producerId = msgTransportInfo.item.key.producerId
    local qty = msgTransportInfo.item.key.qty
    local n = msgTransportInfo.item.n
    if bagId == msgTransportInfo.src then
        Event.Brocast("c_transport",msgTransportInfo)

        Event.Brocast("c_DelBagInfo",itemId,n)
    else
        Event.Brocast("n_transports",msgTransportInfo)
        if msgTransportInfo.dst == bagId then
            Event.Brocast("c_AddBagInfo",itemId,producerId,qty,n)
        end
    end
end
