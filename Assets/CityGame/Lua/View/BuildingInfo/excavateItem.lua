---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/12/22 14:50
---Talent mining Item
ExcavateItem = class('ExcavateItem');
ExcavateItem.static.TOTAL_H = 775  --The height of the entire Item
ExcavateItem.static.CONTENT_H = 690  --Display height
ExcavateItem.static.TOP_H = 100  --the height of the top bar
ExcavateItem.static.Line_PATH = "View/TalentCenterItem/ExcavateLineItem"
local ExcavateLine = {}
local content

--Initialization method The data needs to accept the data sent by the server
function ExcavateItem:initialize(warehouseData, clickOpenFunc, viewRect, mainPanelLuaBehaviour, toggleData, mgrTable)
    self.viewRect = viewRect;
    self.warehouseData = warehouseData;
    self.toggleData = toggleData  --Located on the first right of toggle

    self.contentRoot = self.viewRect.transform:Find("contentRoot"):GetComponent("RectTransform");  --Content Rect
    self.openStateTran = self.viewRect.transform:Find("topRoot/open");  --Open state
    self.closeStateTran = self.viewRect.transform:Find("topRoot/close");  --Disabled
    self.openBtns = self.viewRect.transform:Find("topRoot/close/openBtn");  --Open button
    self.toDoBtns = self.viewRect.transform:Find("topRoot/open/toDoBtns");  --Jump to page

    content = self.viewRect.transform:Find("contentRoot/ScrollView/Viewport/Content");

    self:initdata()

    mainPanelLuaBehaviour:AddClick(self.openBtns.gameObject, function()
        clickOpenFunc(mgrTable, self.toggleData)
    end);
    mainPanelLuaBehaviour:AddClick(self.toDoBtns.gameObject,function()
         ct.OpenCtrl("TalentMiningCtrl")
    end);
end

--initialization
function ExcavateItem:initdata()
    for i = 1, 5 do
        self:m_addTalents(ExcavateItem.static.Line_PATH,i,nil)
    end
end

--Get the number of clicks
function ExcavateItem:getToggleIndex()
    return self.toggleData.index;
end

--turn on
function ExcavateItem:openToggleItem(targetMovePos)
    self.buildingInfoToggleState = BuildingInfoToggleState.Open;

    self.openStateTran.localScale = Vector3.one;
    self.closeStateTran.localScale = Vector3.zero;

    self.viewRect:DOAnchorPos(targetMovePos, BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic);
    self.contentRoot:DOSizeDelta(Vector2.New(self.contentRoot.sizeDelta.x, ExcavateItem.static.CONTENT_H), BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic);

    return Vector2.New(targetMovePos.x,targetMovePos.y - ExcavateItem.static.TOTAL_H);
end

--shut down
function ExcavateItem:closeToggleItem(targetMovePos)
    self.buildingInfoToggleState = BuildingInfoToggleState.Close;

    self.openStateTran.localScale = Vector3.zero;
    self.closeStateTran.localScale = Vector3.one;

    self.contentRoot:DOSizeDelta(Vector2.New(self.contentRoot.sizeDelta.x,0),BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic);
    self.viewRect:DOAnchorPos(targetMovePos, BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic);

    return Vector2.New(targetMovePos.x,targetMovePos.y - ExcavateItem.static.TOP_H);
end

--Add talent mining line
function ExcavateItem:m_addTalents(path,id,data)
    local prefab = creatGoods(path,content)
    ExcavateLine[id] = ExcavateLineItem:new(prefab,id,data)
end
--Delete talent mining line
function ExcavateItem:m_delTalents(id)
    destroy(ExcavateLine[id].prefab.gameObject)
    table.remove(ExcavateLine,id)
end
