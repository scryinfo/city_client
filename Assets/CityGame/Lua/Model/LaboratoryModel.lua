---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/27 17:10
---
LaboratoryModel = class('LaboratoryModel',ModelBase)
local pbl = pbl

function LaboratoryModel:initialize(insId)
    self.insId = insId
    self:_addListener()
end

--启动事件--
function LaboratoryModel:_addListener()
    --网络回调注册
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","detailLaboratory","gs.Laboratory",self.n_OnReceiveLaboratoryDetailInfo)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","labExclusive","gs.LabExclusive",self.n_OnReceiveLabExclusive)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","labExclusive","gs.LabAddLine",self.n_OnReceiveLabLineAdd)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","labAddLine","gs.LabAddLine",self.n_OnReceiveLabLineAdd)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","labCancelLine","gs.LabCancelLine",self.n_OnReceiveDelLine);
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","labRoll","gs.LabRollACK",self.n_OnReceiveLineChange)

    ------本地的事件注册
    --Event.AddListener("m_ReqLaboratoryDetailInfo", self.m_ReqLaboratoryDetailInfo, self)
    --Event.AddListener("m_labSetting", self.m_labSetting, self)
    --Event.AddListener("m_ReqLabAddLine", self.m_ReqLabAddLine, self)
    --Event.AddListener("m_ReqLabDeleteLine", self.m_ReqLabDeleteLine, self)
    --Event.AddListener("m_ReqLabRoll", self.m_ReqLabRoll, self)

end

---===================================================================================客户端请求===============================================================================
--获取建筑详情
function LaboratoryModel:m_ReqLaboratoryDetailInfo()
    DataManager.ModelSendNetMes("gscode.OpCode", "detailLaboratory","gs.Id",{ id = self.insId})
end
--设置研究是否他人可用
function LaboratoryModel:m_labSettings(exclusive)
    DataManager.ModelSendNetMes("gscode.OpCode", "labExclusive","gs.LabExclusive",
            { buildingId = self.insId ,exclusive = exclusive})
end
--设置研究价格
function LaboratoryModel:m_labSetting( pricePreTime , maxTimes )
    DataManager.ModelSendNetMes("gscode.OpCode", "labSetting","gs.LabSetting",
            { buildingId = self.insId ,pricePreTime = pricePreTime, maxTimes = maxTimes})
end
--添加线
function LaboratoryModel:m_ReqLabAddLine( itemId, count )
    DataManager.ModelSendNetMes("gscode.OpCode", "labAddLine","gs.LabAddLine",
            { buildingId = self.insId,goodCategory = itemId,times = count })
end
--删除线
function LaboratoryModel:m_ReqLabDeleteLine(lineId)
    local lMsg = { buildingId = self.insId, lineId = lineId }
    DataManager.ModelSendNetMes("gscode.OpCode", "labCancelLine","gs.LabCancelLine",lMsg)
end
--开箱
function LaboratoryModel:m_ReqLabRoll(lineId)
    local lMsg = { buildingId = self.insId, lineId = lineId }
    DataManager.ModelSendNetMes("gscode.OpCode", "labRoll","gs.labRoll",lMsg)
end
---===================================================================================回调===============================================================================
--研究所详情
function LaboratoryModel:n_OnReceiveLaboratoryDetailInfo(data)
    self.data=data
    DataManager.ControllerRpcNoRet(self.insId,"LaboratoryCtrl", '_receiveLaboratoryDetailInfo', data)
end
--研究所设置
function LaboratoryModel:n_OnReceiveLabExclusive(LabExclusive)

end
--添加研究发明线
function LaboratoryModel:n_OnReceiveLabLineAdd(lineData)
   prints("添加成功")
end
--删除line
function LaboratoryModel:n_OnReceiveDelLine(lineData)
    prints("删除成功")
end
--更新某条线的具体数据 --只有roll之后才会发这个
function LaboratoryModel:n_OnReceiveLineChange(lineData)
   prints("开箱回调")
end

--是否他人可用
function LaboratoryModel:n_OnReceiveLineChange(lineData)
    prints("他人可用")
end