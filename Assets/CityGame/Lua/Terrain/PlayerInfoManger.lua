---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/3/1/001 11:30
---

PlayerInfoManger={}
local  cache,playerIDs,tempInfos
local _classes,_funcs

function PlayerInfoManger.Awake()
    _classes={}    _funcs={}     tempInfos={}

    cache={}       playerIDs={}
    Event.AddListener("m_QueryPlayerInfoChat", PlayerInfoManger.m_QueryPlayerInfoChat)

end

-- 向服务器查询好友信息
function PlayerInfoManger.m_QueryPlayerInfoChat(friendsIds)
    DataManager.ModelSendNetMes("gscode.OpCode", "queryPlayerInfo","gs.Bytes",{ ids = friendsIds })
end

---==========================================================================================外部===================================================================================================

function PlayerInfoManger.ClearCache()
    for id, info in pairs(cache) do
        id=nil
        info=nil
    end
    cache={}
end

local recardNums=0
local curr=0

function PlayerInfoManger.GetInfos(playerIds,func,class)

    for i, id in ipairs(playerIds) do

        local info=cache[id]

        if info then--有缓存
            table.insert(tempInfos,info)
        else--无缓存
            recardNums=recardNums+1
            playerIDs[recardNums]=playerIds
            _funcs[recardNums]=func
            _classes[recardNums]=class
            Event.Brocast("m_QueryPlayerInfoChat",playerIds)
            tempInfos={}
            return
        end

    end

    --有缓存  直接调用

    func(class,tempInfos)


    tempInfos={}
end



---==========================================================================================回调===================================================================================================

--查询玩家信息返回
function PlayerInfoManger.n_OnReceivePlayerInfo(stream)

    if  #playerIDs<=0  then    return   end
        curr=curr+1

        for i, info in ipairs(stream.info) do
            --写入缓存
            local id=playerIDs[curr][i]
            local infoId=info.id
            prints(tostring(id==infoId))
            cache[id]=info
            table.insert(tempInfos,info)
        end

        _funcs[curr](_classes[curr],tempInfos)

        tempInfos={}
        recardNums=recardNums-1

        if recardNums == 0 then
            playerIDs={}
            _classes={}
            _funcs={}
            curr=0
        end

end
