---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/12/18 18:21
---路线面板
local class = require 'Framework/class'
require('Framework/UI/UIPage')
ChooseLineItem = class('ChooseLineItem')

--初始化方法   数据（读配置表）
function ChooseLineItem:initialize(prefab,inluabehaviour,mgr,DataInfo)
    self.prefab = prefab;
    self.buildingId = DataInfo.info.id;
    self._luabehaviour = inluabehaviour;
    self.manager = mgr;
    self.posX =  DataInfo.info.pos.x
    self.posY =  DataInfo.info.pos.y
    self._luabehaviour = inluabehaviour;
    self.manager = mgr;

    self.bg = self.prefab.transform:Find("bg").gameObject:GetComponent("Button");
    self.name = self.prefab.transform:Find("factory/name").gameObject:GetComponent("Text");
    self.size = self.prefab.transform:Find("smallbg/small").gameObject:GetComponent("Text");
    self.houseIcon = self.prefab.transform:Find("transportDetails/houseIcon"):GetComponent("Image");
    self.warehouse_Slider = self.prefab.transform:Find("icon/Warehouse_Slider"):GetComponent("Slider");
    self.number = self.prefab.transform:Find("icon/number").gameObject:GetComponent("Text");
    self.distance = self.prefab.transform:Find("transportDetails/distance/distanceText").gameObject:GetComponent("Text");
    self.money = self.prefab.transform:Find("transportDetails/money/moneyText").gameObject:GetComponent("Text");

    self.name.text = PlayerBuildingBaseData[DataInfo.info.mId].typeName
    self.size.text = PlayerBuildingBaseData[DataInfo.info.mId].sizeName
    self.warehouse_Slider.maxValue = PlayerBuildingBaseData[DataInfo.info.mId].storeCapacity;

    self.sizeName =  self.size.text..self.name.text

    local distances
    distances = math.sqrt(math.pow((BagPosInfo[1].bagX-self.posX),2)+math.pow((BagPosInfo[1].bagY-self.posY),2))
    self.distance.text = math.floor(distances).."km"
    local moneys = tonumber(CenterWareHousePanel.tipText.text) * distances * BagPosInfo[1].postageCost
    self.money.text = "E"..math.floor(moneys)..".0000"

    self.price = moneys

    local type = ct.getType(UnityEngine.Sprite)
    panelMgr:LoadPrefab_A(PlayerBuildingBaseData[DataInfo.info.mId]["imgPath"],type,nil,function(goodData,obj)
        if obj ~= nil then
            local texture = ct.InstantiatePrefab(obj)
            self.houseIcon.sprite = texture
        end
    end)

    local n = 0
    if DataInfo.store.inHand == nil then
        n = 0
    else
        for i, v in pairs(DataInfo.store.inHand) do
            n = n + v.n
        end
    end

    self.num = n

    self.warehouse_Slider.value = n

    self.spareCapacity = PlayerBuildingBaseData[DataInfo.info.mId].storeCapacity - n --剩余容量

    self.number.text = n .. "/" .. PlayerBuildingBaseData[DataInfo.info.mId].storeCapacity

    self.bg.onClick:AddListener(function()
        self:OnLinePanelBG(self);
    end)

    --self._luabehaviour:AddClick(self.bg,self.OnLinePanelBG,self)
end

function ChooseLineItem:OnLinePanelBG(go)
    Event.Brocast("c_OnLinePanelBG",go.buildingId)
    if go.spareCapacity <  tonumber(CenterWareHousePanel.tipText.text) then
        Event.Brocast("SmallPop","仓库容量不足",300)
        return
    end
    CenterWareHousePanel.nameText.text = go.sizeName
    go.manager:TransportConfirm(go.isOnClick )
    -- [[  点击使其可以运输
    go.manager:_onClick()
    go.manager:TransportConfirm()
    -- ]]
    local data = {}
    data.buildingId = go.buildingId
    data.posX = go.posX
    data.posY = go.posY
    data.name =  go.size.text .. go.name.text
    Event.Brocast("c_OnLinePanelBG",data)
    ChooseWarehouseCtrl:OnClick_returnBtn()
end