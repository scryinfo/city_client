---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cyz_scry.
--- DateTime: 2018/10/19 11:07
---
-----

local lfs = lfs
local file_exists = CityGlobal.file_exists

local AutoRequire = class("AutoRequire")
local WindowsEditor = UnityEngine.Application.isEditor

local instance = nil

function AutoRequire:getInstance()
    return instance
end

function AutoRequire:initialize()
    self.requirePaths = {} --这个用以Android打包时，导出到 AndroidRequire.lua
    self.requirePaths[#self.requirePaths+1] = "require '__require_first__'"
end

function AutoRequire:requireLast(file)
    self.requirePaths[#self.requirePaths+1] = 'require '.."'"..file.."'"
end

function AutoRequire:addCode(code)
    self.requirePaths[#self.requirePaths+1] = code
end

function AutoRequire:init(dir)
    instance.OriginalPath = dir
    log("abel_w9_autoRequire","instance.OriginalPath", instance.OriginalPath)
end

function AutoRequire:getTag()
    return self._tag
end

function AutoRequire:getRequirePath()
    return self._require_path
end

function AutoRequire:addPath(path)
    if WindowsEditor then
        --self.requirePaths[#self.requirePaths +1] = path
        self.requirePaths[#self.requirePaths +1] =  "require('"..path.."')"
    end
end

function AutoRequire:WriteRuntimeRequire()
    CityGlobal.file_saveTable(CityLuaUtil.getAssetsPath()..'/Lua/Require_RunTime.lua',self.requirePaths)
    self.requirePaths = {}
end

function AutoRequire:FinishedRequire()
    self.requirePaths = nil
end

function AutoRequire:require(path, data)
    local loadpath = self.OriginalPath..'/'..path
    log("abel_w9_autoRequire","AutoRequire:require: loadpath = ".. loadpath)
    assert(lfs.symlinkattributes(loadpath), "Error AutoRequire path not find "..loadpath)
    self._tag = data
    self._require_path = path

    local initfile = loadpath..'/'.."__require_first__.lua"
    if file_exists(initfile) then
        local loadf = path..'/'.."__require_first__"
        require(loadf)
        self:addPath(loadf)
    end

    for file in lfs.dir(loadpath) do
        if file ~= "." and file ~= ".." and file ~= "__require_first__.lua" and file ~= "__require_last__.lua" then
            local f = loadpath ..'/'..file
            local attr = lfs.attributes(f)
            if attr ~= nil then
                local filename = string.gsub(file, ".lua$", "")
                if attr.mode == "file" and file ~= filename then
                    local loadf = path..'/'..filename
                    require(loadf)
                    self:addPath(loadf)
                end
            end
        end
    end

    local initfile = loadpath..'/'.."__require_last__.lua"
    if file_exists(initfile) then
        local loadf = path..'/'.."__require_last__"
        require(loadf)
        self:addPath(loadf)
    end

    self._tag = nil
    self._require_path = nil
end

if instance == nil then
    instance = AutoRequire:new()
    instance:init(CityLuaUtil.getAssetsPath()..'/Lua')
    package.path = package.path .. ';'..CityLuaUtil.getAssetsPath()..'/Lua'
end

return AutoRequire