---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/10/25 11:31
---仓库商品管理

require "View/BuildingInfo/WareHouseGoodsItem"
local class = require 'Framework/class'
WareHouseGoodsMgr = class('WareHouseGoodsMgr')
local index = 1
local indexAddress = 1   --自己的建筑id
local lastBox = nil
local OnClick = false  --是否点击路线面板
local AddressItems = {}

WareHouseGoodsMgr.static.Goods_PATH = "Assets/CityGame/Resources/View/GoodsItem/CenterWareHouseItem.prefab"
WareHouseGoodsMgr.static.TspGoods_PATH = "Assets/CityGame/Resources/View/GoodsItem/TransportGoodsItem.prefab"
WareHouseGoodsMgr.static.AddressList_PATH = "Assets/CityGame/Resources/View/GoodsItem/FriendsLineItem.prefab";
WareHouseGoodsMgr.static.Line_PATH = "Assets/CityGame/Resources/View/GoodsItem/ChooseLineItem.prefab";

function WareHouseGoodsMgr:initialize()

end

--创建商品
function WareHouseGoodsMgr:_creatItemGoods(insluabehaviour,isSelect)
    self.behaviour = insluabehaviour
    --测试数据
    self.ModelDataList={}
    --配置表数据模拟
    local configTable = {}
    local inHand = DataManager.GetBagInfo()
    if inHand == nil then
        return
    end
    for i, v in pairs(inHand) do
        local materialKey,goodsKey = 21,22
        local uiTab = {}
        if math.floor(v.key.id / 100000) == materialKey then
            --uiTab.name = Material[v.key.id].name
            uiTab.name = GetLanguage(v.key.id)
        elseif math.floor(v.key.id / 100000) == goodsKey then
            --uiTab.name = Good[v.key.id].name
            uiTab.name = GetLanguage(v.key.id)
        end
        uiTab.number = v.n
        uiTab.itemId = v.key.id
        uiTab.producerId = v.key.producerId
        uiTab.qty = v.key.qty
        configTable[i] = uiTab
        --预制的信息
        local prefabData={}
        prefabData.state = 'idel'
        prefabData.uiData = configTable[i]
        self.ModelDataList[i] = prefabData

        local function callback(prefab)
            self.WareHouseLuaItem = WareHouseGoodsItem:new(self.ModelDataList[i].uiData,prefab,self.behaviour, self, i)
        end
        createPrefab(WareHouseGoodsMgr.static.Goods_PATH,CenterWareHousePanel.content,callback)

        if not self.items then
            self.items = {}
        end
        self.items[i] = self.WareHouseLuaItem
        WareHouseGoodsMgr.items[i] = self.WareHouseLuaItem
        --self.items  存的是Lua实例
        self.items[i]:setActiva(isSelect)
    end
end

--创建运输商品
function WareHouseGoodsMgr:_creatTransportGoods(goodsData)

    local function callback(prefab)
        self.TransportLuaItem = TransportGoodsItem:new(goodsData,prefab,self.behaviour,self,goodsData.id,goodsData.itemId)
    end
    createPrefab(WareHouseGoodsMgr.static.TspGoods_PATH,CenterWareHousePanel.tspContent,callback)

    if not self.allTspItem then
        self.allTspItem = {}
    end
    self.allTspItem[goodsData.id] = self.TransportLuaItem;
    if self.allTspItem == nil then
        return
    end
    for i, v in pairs(self.allTspItem) do
       v.inputText.onValueChanged:AddListener(function ()

           if v.inputText.text =="" then
               return
           end
           v.scrollbar.value =  v.inputText.text

           local n = 0
           for i, v in pairs(self.allTspItem) do
               n = n + tonumber(v.inputText.text)
           end
            CenterWareHousePanel.tipText.text = n
            WareHouseGoodsMgr:TransportConfirm()
        end);
    end
    UpdateBeat:Add(self._update, self);
end

--创建通讯录
function WareHouseGoodsMgr:_creatAddressList(data)
    self.lastBox =nil;
    for i, v in ipairs(data) do

        local function callback(prefab)
            self.AddressListLuaItem = AddressListItem:new(v,prefab,self)
        end
        createPrefab(WareHouseGoodsMgr.static.AddressList_PATH,ChooseWarehousePanel.leftcontent,callback)

        if not self.AddressItems then
            self.AddressItems = {}
        end
        self.AddressItems[i] = self.AddressListLuaItem
        AddressItems[i] = self.AddressListLuaItem
    end

end

--创建路线面板
function WareHouseGoodsMgr:_creatLinePanel(buysBuildings,data,buildingId)
    local bagId = DataManager.GetBagId()
    if bagId ~= buildingId then
        local dataInfo = {}
        dataInfo.info = {}
        dataInfo.info.id = bagId
        dataInfo.info.pos = {}
        dataInfo.info.pos.x = BagPosInfo[1].bagX
        dataInfo.info.pos.y = BagPosInfo[1].bagY
        dataInfo.info.mId = nil

        local function callback(prefab)
            self.LinePaneltLuaItem = ChooseLineItem:new(prefab,self,dataInfo,data)
        end
        createPrefab(WareHouseGoodsMgr.static.Line_PATH,ChooseWarehousePanel.rightContent,callback)


        if not self.ipaItems then
            self.ipaItems = {}
        end
        self.ipaItems[index] = self.LinePaneltLuaItem
        index = index + 1
    end

    if buysBuildings ==nil then
        return
    end
    for i, v in pairs(buysBuildings) do
        for k, z in pairs(v) do
            if z.store ~= nil then
                if z.info.id ~= buildingId then

                    local function callback(prefab)
                        self.LinePaneltLuaItems = ChooseLineItem:new(prefab,self,z,data)
                    end
                    createPrefab(WareHouseGoodsMgr.static.Line_PATH,ChooseWarehousePanel.rightContent,callback)


                    if not self.ipaItems then
                        self.ipaItems = {}
                    end
                    self.ipaItems[index] = self.LinePaneltLuaItems
                    index = index + 1
                end
            end
        end
    end

end

--创建好友路线面板
function WareHouseGoodsMgr:_creatFriendsLinePanel(buysBuildings,data)
    if buysBuildings == nil then
        return
    end
    for i, v in pairs(buysBuildings) do
        if v.store ~= nil then

            local function callback(prefab)
                self.LineFriendsLuaItem = ChooseLineItem:new(prefab,self,v,data)
            end
            createPrefab(WareHouseGoodsMgr.static.Line_PATH,ChooseWarehousePanel.rightContent,callback)

            if not self.ipaItems then
                self.ipaItems = {}
            end
            self.ipaItems[index] = self.LineFriendsLuaItem
        end
    end
    index = index +1
end

--删除商品
function WareHouseGoodsMgr:_deleteGoods(id)
    --清空之前的旧数据
    destroy(self.items[id].prefab.gameObject);
    table.remove(self.ModelDataList, id)
    table.remove(self.items, id)
    local i = 1
    for k,v in pairs(self.items)  do
        self.items[i]:RefreshID(i)
        i = i + 1
    end
end

--删除运输商品
function WareHouseGoodsMgr:_deleteTspGoods(id)
    if UpdateBeat then
        UpdateBeat:Remove(self._update, self);
    end
    self.items[id].select_while:SetActive(true);
    destroy(self.allTspItem[id].prefab);
   self.allTspItem[id] = nil;
    WareHouseGoodsMgr:TransportConfirm()
end

function WareHouseGoodsMgr:_setActiva(isSelect)
    if self.items == nil then
       return
    end
    for i = 1, #self.items do
        self.items[i]:setActiva(isSelect)
    end
end

--生成预制
function WareHouseGoodsMgr:_creatGoods(path,parent)
    local prefab = UnityEngine.Resources.Load(path);
    local go = UnityEngine.GameObject.Instantiate(prefab);
    local rect = go.transform:GetComponent("RectTransform");
    go.transform:SetParent(parent.transform);
    rect.transform.localScale = Vector3.one;
    return go
end

function WareHouseGoodsMgr:_update()
    for i, v in pairs(self.allTspItem) do
        if self.allTspItem[i].inputText.text =="" then
            return
        end
        self.allTspItem[i].inputText.text =  self.allTspItem[i].scrollbar.value;
    end
end

--通讯录选框
function WareHouseGoodsMgr:SelectBox(go)
    if lastBox ~= nil then
        lastBox.box:SetActive(false);
        lastBox.onClick = true
    end
    go.box:SetActive(true);
    lastBox = go;
end

--获取所点击的实例
function WareHouseGoodsMgr:GetItem()
    return  lastBox
end

--清空路线数据
function WareHouseGoodsMgr:_deleteLinePanel()
    if self.ipaItems ~= nil then
        for i, v in pairs(self.ipaItems) do
            destroy(v.prefab.gameObject)
        end
        self.ipaItems = {}
    end
end

--清空通讯录与路线数据
function WareHouseGoodsMgr:_clear()
    if AddressItems ~= nil then
        for i, v in pairs(AddressItems) do
            destroy(v.prefab.gameObject)
        end
        AddressItems = {}
    end
    WareHouseGoodsMgr:_deleteLinePanel()
    lastBox = nil
end

--清空运输数据
function WareHouseGoodsMgr:ClearAll()
    if self.allTspItem == nil then
        return
    end
    for i, v in pairs(self.allTspItem) do
        destroy(self.allTspItem[i].prefab.gameObject)
    end
    self.allTspItem = {};
end

--清空仓库item
function WareHouseGoodsMgr:ClearAllItem()
    if self.items == nil then
        return
    end
    for i, v in pairs(self.items) do
        destroy(v.prefab.gameObject)
    end
    self.items = nil
end

--显示所有商品BG,使其都能点击
function WareHouseGoodsMgr:EnabledAll()
    if self.items == nil then
        return
    end
    for i = 1, #self.items do
        self.items[i]:Enabled();
    end
end

--显示运输按钮使其可以点击
function WareHouseGoodsMgr:TransportConfirm()
    --[[    local isTransport = false
        if self.allTspItem == nil then
            return
        end
        for i, v in pairs(self.allTspItem) do
            if v.inputText.text == "0" then
                isTransport = false
            else
                isTransport = true
            end
        end]]
    local n = 0
    if self.allTspItem ~= nil then
        for i, v in pairs(self.allTspItem) do
            n = n + 1
        end
    end
    if CenterWareHousePanel.transportConfirm ~= nil then
        if n>0 and OnClick then
            CenterWareHousePanel.transportConfirm:SetActive(false);
        else
            CenterWareHousePanel.transportConfirm:SetActive(true)
        end
    end

    --if CenterWareHousePanel.tspContent ~= nil then
    --    if CenterWareHousePanel.tspContent.childCount>= 1 and OnClick then
    --        CenterWareHousePanel.transportConfirm:SetActive(false);
    --    end
    --end
    --if WarehousePanel.transportContent ~= nil then
    --    if WarehousePanel.transportContent.childCount >= 1 and OnClick then
    --        WarehousePanel.transportUncheckBtn.localScale = Vector3.zero
    --        WarehousePanel.transportConfirmBtn.localScale = Vector3.one
    --    end
    --end
end
--改变点击状态
function WareHouseGoodsMgr:_onClick()
    OnClick = true
end