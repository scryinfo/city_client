---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/11/13 15:06
---通知管理界面
require "View/BuildingInfo/WareHouseGoodsItem"
local class = require 'Framework/class'
NoticeMgr = class('NoticeMgr')
NoticeMgr.static.Notice_PATH = "View/GoodsItem/MessageItem";

function NoticeMgr:initialize()

end

--创建郵件
function NoticeMgr:_createNotice(insluabehaviour,MailsData)
    self.behaviour = insluabehaviour
    --测试数据
    self.ModelDataList={}
    --配置表数据模拟
    local configTable = {}
    if MailsData == nil then
        return
    end
    for i, v in pairs(MailsData) do
        local uiTab = {}
        uiTab.header = Notice[v.type].header
        uiTab.content = Notice[v.type].content
        --uiTab.content = content
        uiTab.redirect = Notice[v.type].redirect
        uiTab.state = v.read
        uiTab.uuidParas = v.uuidParas
        uiTab.intParasArr = v.intParasArr
        uiTab.from = GetLanguage(13010002)
        configTable[i] = uiTab
        --预制的信息`
        local prefabData={}
        prefabData.uiData = configTable[i]
        prefabData._prefab = self:_createNoticePab(NoticeMgr.static.Notice_PATH,GameNoticePanel.leftContent)
        self.ModelDataList[i] = prefabData

        local NoticeLuaItem = NoticeItem:new(self.ModelDataList[i].uiData,self.ModelDataList[i]._prefab,self.behaviour, self,v.id,v.type)
        if not self.notice then
            self.notice = {}
        end
        self.notice[v.id] = NoticeLuaItem
        NoticeMgr.notice[v.id] = self.notice[v.id]
        --self.items  存的是Lua实例
    end
end

--清空邮件
function NoticeMgr:_dleNotice()
    for i, v in pairs(self.notice) do
        destroy(v.prefab.gameObject)
    end
    self.notice = {}
end

--生成预制
function NoticeMgr:_createNoticePab(path,parent)
    local prefab = UnityEngine.Resources.Load(path);
    local go = UnityEngine.GameObject.Instantiate(prefab);
    local rect = go.transform:GetComponent("RectTransform");
    go.transform:SetParent(parent.transform);
    rect.transform.localScale = Vector3.one;
    return go
end