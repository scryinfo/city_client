---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/9/30 16:30
---设置签约的界面
BuildingSignSetDialogPageCtrl = class('BuildingSignSetDialogPageCtrl',UIPanel)
UIPanel:ResgisterOpen(BuildingSignSetDialogPageCtrl)
--
function BuildingSignSetDialogPageCtrl:initialize()
    UIPanel.initialize(self, UIType.PopUp, UIMode.DoNothing, UICollider.Normal)
end
--
function BuildingSignSetDialogPageCtrl:bundleName()
    return "Assets/CityGame/Resources/View/BuildingSignSetDialogPagePanel.prefab"
end
--
function BuildingSignSetDialogPageCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)
end
--
function BuildingSignSetDialogPageCtrl:Awake(go)
    self:_getComponent(go.transform)
    self.luaBehaviour = go:GetComponent('LuaBehaviour')
    self.luaBehaviour:AddClick(self.closeBtn.gameObject, function ()
        self:_onClickClose()
    end , self)
    self.luaBehaviour:AddClick(self.selfUseBtn.gameObject, function ()
        self:_onClickSelfUse()
    end , self)
    self.luaBehaviour:AddClick(self.otherUseBtn.gameObject, function ()
        self:_onClickOtherUse()
    end , self)
    self.luaBehaviour:AddClick(self.switchOpenBtn.gameObject, function ()
        self:_onClickOpenSwitch()
    end , self)
    self.luaBehaviour:AddClick(self.switchCloseBtn.gameObject, function ()
        self:_onClickCloseSwitch()
    end , self)
    self.luaBehaviour:AddClick(self.confirmBtn.gameObject, function ()
        self:_onClickConfirm()
    end , self)
end
--
function BuildingSignSetDialogPageCtrl:Active()
    UIPanel.Active(self)
    self:_language()
end
--
function BuildingSignSetDialogPageCtrl:Refresh()
    self:_initData()
end

---寻找组件
function BuildingSignSetDialogPageCtrl:_getComponent(transform)
    self.closeBtn = transform:Find("root/closeBtn")
    self.titleText01 = transform:Find("root/titleText"):GetComponent("Text")
    self.selfUseBtn = transform:Find("root/toggle/selfUse/clickBtn")
    self.selfUseShowImgTran = transform:Find("root/toggle/selfUse/showImg")
    self.selfUseText02 = transform:Find("root/toggle/selfUse/Text"):GetComponent("Text")
    self.otherUseBtn = transform:Find("root/toggle/otherUse/clickBtn")
    self.otherUseShowImgTran = transform:Find("root/toggle/otherUse/showImg")
    self.otherUseText03 = transform:Find("root/toggle/otherUse/Text"):GetComponent("Text")

    self.selfUsePage = transform:Find("root/toggle/self")
    self.selfUsePageText04 = transform:Find("root/toggle/self/Text"):GetComponent("Text")
    self.otherUsePage = transform:Find("root/toggle/other")
    self.priceInput = transform:Find("root/toggle/other/priceInput"):GetComponent("InputField")
    self.priceInputCloseTran = transform:Find("root/toggle/other/priceCloseImg")
    self.priceInputText05 = transform:Find("root/toggle/other/priceInput/Placeholder"):GetComponent("Text")
    self.timeInput = transform:Find("root/toggle/other/timeInput"):GetComponent("InputField")
    self.timeInputCloseTran = transform:Find("root/toggle/other/timeCloseImg")
    self.timeInputText06 = transform:Find("root/toggle/other/timeInput/Placeholder"):GetComponent("Text")
    self.suggestPriceText = transform:Find("root/toggle/other/suggestPrice/priceText"):GetComponent("Text")
    self.suggestPriceText07 = transform:Find("root/toggle/other/suggestPrice/Text"):GetComponent("Text")
    self.switchOpenBtn = transform:Find("root/toggle/other/switch/open")
    self.switchCloseBtn = transform:Find("root/toggle/other/switch/close")
    self.switchText08 = transform:Find("root/toggle/other/switch/Text"):GetComponent("Text")
    self.confirmBtn = transform:Find("root/confirmBtn")
end
--
function BuildingSignSetDialogPageCtrl:_language()
    self.titleText01.text = "SET"
    self.selfUseText02.text = "Self-use"
    self.otherUseText03.text = "Contract setting"
    self.selfUsePageText04.text = "Self use will not be able to sign others"
    self.priceInputText05.text = "Price"
    self.timeInputText06.text = "Time"
    self.suggestPriceText07.text = "The reference price:"
end
--打开该界面只有两种情况，一种是没设置过签约，另一种是设置过但是没人签点进来修改
function BuildingSignSetDialogPageCtrl:_initData()
    self:toggleUseState(false)
    if self.m_data.contractInfo.isOpen == true then
        --设置过
        self.priceInput.value = self.m_data.contractInfo.price
        self.timeInput.value = self.m_data.contractInfo.hours
        self:toggleSwitchState(true)
    else
        --没设置过
        self.priceInput.text = ""
        self.timeInput.text = ""
        self:toggleSwitchState(true)
    end
end
--
function BuildingSignSetDialogPageCtrl:toggleUseState(selfUse)
    self.selfUse = selfUse
    if selfUse == true then
        self.selfUseBtn.localScale = Vector3.zero
        self.selfUseShowImgTran.localScale = Vector3.one
        self.otherUseBtn.localScale = Vector3.one
        self.otherUseShowImgTran.localScale = Vector3.zero
        self.selfUseText02.color = getColorByVector3(Vector3.New(255,255,255))
        self.otherUseText03.color = getColorByVector3(Vector3.New(222,227,253))

        self.selfUsePage.localScale = Vector3.one
        self.otherUsePage.localScale = Vector3.zero
    else
        self.otherUseBtn.localScale = Vector3.zero
        self.otherUseShowImgTran.localScale = Vector3.one
        self.selfUseBtn.localScale = Vector3.one
        self.selfUseShowImgTran.localScale = Vector3.zero
        self.otherUseText03.color = getColorByVector3(Vector3.New(255,255,255))
        self.selfUseText02.color = getColorByVector3(Vector3.New(222,227,253))

        self.selfUsePage.localScale = Vector3.zero
        self.otherUsePage.localScale = Vector3.one
    end
end
--
function BuildingSignSetDialogPageCtrl:toggleSwitchState(open)
    self.otherUseOpenSwitch = open
    if open == true then
        self.switchOpenBtn.localScale = Vector3.one
        self.switchCloseBtn.localScale = Vector3.zero
        self.priceInputCloseTran.localScale = Vector3.zero
        self.timeInputCloseTran.localScale = Vector3.zero
    else
        self.switchCloseBtn.localScale = Vector3.one
        self.switchOpenBtn.localScale = Vector3.zero
        self.priceInputCloseTran.localScale = Vector3.one
        self.timeInputCloseTran.localScale = Vector3.one
        self.priceInput.text = ""
        self.timeInput.text = ""
    end
end
--
function BuildingSignSetDialogPageCtrl:_onClickClose()
    PlayMusEff(1002)
    UIPanel.ClosePage()
end
--
function BuildingSignSetDialogPageCtrl:_onClickSelfUse()
    PlayMusEff(1002)
    self:toggleUseState(true)
end
--
function BuildingSignSetDialogPageCtrl:_onClickOtherUse()
    PlayMusEff(1002)
    self:toggleUseState(false)
end
--
function BuildingSignSetDialogPageCtrl:_onClickOpenSwitch()
    PlayMusEff(1002)
    self:toggleSwitchState(false)
end
--
function BuildingSignSetDialogPageCtrl:_onClickCloseSwitch()
    PlayMusEff(1002)
    self:toggleSwitchState(true)
end
--
function BuildingSignSetDialogPageCtrl:_onClickConfirm()
    PlayMusEff(1002)
    local priceValue = self.priceInput.text
    local timeValue = self.timeInput.text
    if self.otherUseOpenSwitch == true and self.selfUse == false then
        if priceValue == "" or timeValue == "" then
            Event.Brocast("SmallPop", "请确认价格和时间是否填写完成", 300)
            return
        end
        if GetServerPriceNumber(priceValue) == self.m_data.contractInfo.price or GetServerPriceNumber(timeValue) == self.m_data.contractInfo.hours then
            Event.Brocast("SmallPop", "信息未修改", 300)
            return
        end
        self:m_ReqSettingContract(self.m_data.info.id, GetServerPriceNumber(priceValue), GetServerPriceNumber(timeValue))
        UIPanel.ClosePage()
        return
    end

    if self.selfUse == false and self.otherUseOpenSwitch == false and self.m_data.contractInfo.isOpen == true then
        self:m_ReqCloseContract(self.m_data.info.id)
        UIPanel.ClosePage()
        return
    end

    if self.selfUse == true then
        self:m_ReqContract(self.m_data.info.id)
        UIPanel.ClosePage()
        return
    end
end
-------------------------------------------------------------------------------------
--关闭签约
function BuildingSignSetDialogPageCtrl:m_ReqCloseContract(buildingId)
    local msgId = pbl.enum("gscode.OpCode","closeContract")
    local pMsg = assert(pbl.encode("gs.Id", {id = buildingId}))
    CityEngineLua.Bundle:newAndSendMsg(msgId,pMsg)
end
--开启/调整签约
function BuildingSignSetDialogPageCtrl:m_ReqSettingContract(buildingId, price, hours)
    local msgId = pbl.enum("gscode.OpCode","settingContract")
    local pMsg = assert(pbl.encode("gs.ContractSetting", {id = buildingId, price = price, hours = hours}))
    CityEngineLua.Bundle:newAndSendMsg(msgId,pMsg)
end
--发起签约
function BuildingSignSetDialogPageCtrl:m_ReqContract(buildingId)
    local msgId = pbl.enum("gscode.OpCode","signContract")
    local pMsg = assert(pbl.encode("gs.SignContract", {id = buildingId}))
    CityEngineLua.Bundle:newAndSendMsg(msgId,pMsg)
end
