---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljw.
--- DateTime: 2019/5/7 18:40
---


RentTimeItem = class('RentTimeItem')
--Initialization method
function RentTimeItem:initialize(dataInfo, viewRect,id,class)
    self.dataInfo = dataInfo
    self.viewRect = viewRect
    self.id = id
    self.class = class
    local viewTrans = self.viewRect

    --self.head = viewTrans:Find("icon"):GetComponent("Image")
    self.renternum = viewTrans:Find("numberbg/numberText"):GetComponent("Text")       --Tenant ID
    self.rentertime = viewTrans:Find("timeText"):GetComponent("Text")                 --Tenant remaining time
    self.iconBtn = viewTrans:Find("detailsBtn")                                        --Tenant button

    self.renternum.text = self.id
    --total time
    local rentetime = self.dataInfo.hourToRent * 3600 * 1000
    --Time spent
    local servertime = TimeSynchronized.GetTheCurrentServerTime() - dataInfo.beginTs
    --the remaining time
    self.remaintime = (math.floor(rentetime - servertime)) / 1000
    self.rentertime.text = self:getStringTime()
    UpdateBeat:Add(self.Update,self)
end

function RentTimeItem:Update()
    if self.remaintime <= 0 or self.remaintime == nil then
        --self.class._refech(self.id)
        Event.Brocast("c_refech",self.id)
        self.id = self.id - 1
        self.renternum.text = self.id
        UpdateBeat:Remove(self.Update,self)
        return
    end
    self.remaintime = self.remaintime - UnityEngine.Time.unscaledDeltaTime
    local timeTable = getTimeBySec(self.remaintime)
    local timeStr = timeTable.hour..":"..timeTable.minute..":"..timeTable.second
    self.rentertime.text = timeStr
end

function RentTimeItem:getStringTime()
    local timeTable = getTimeBySec(self.remaintime)
    local timeStr = timeTable.hour..":"..timeTable.minute..":"..timeTable.second
    return timeStr
end
