---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cyz_scry.
--- DateTime: 2018/10/18 16:03
---
UnitTest.TestBlockStart()---------------------------------------------------------

local classTest = class('classTest')
function classTest:initialize()
    self._data = {}
    for i = 1, 100000 do
        self._data[#self._data] = i
    end
end

UnitTest.Exec("abel_w9_memory_usage", "test_w9_memory_usage",  function ()
    UnitTest.MemoryConsumptionTest("abel_w9_memory_usage","test_w9_memory_usage",function()
        local memory_usage = {}
        for i = 1, 10000 do
            memory_usage[#memory_usage +1] = classTest:new()
        end
    end)
end)

UnitTest.Exec("abel_w9_mem_Load_Instantiate", "test_w9_mem_Load_Instantiate",  function ()
    local loadtb ={}
    local Instantiatetb = {}
    local testCount = 1000
    local path = 'View/TopbarPanel'
    local prefab = UnityEngine.Resources.Load(path);
    UnitTest.MemoryConsumptionTest("abel_w9_mem_Load_Instantiate","test_w9_mem_Load",function()
        for i = 1, testCount do
            loadtb[#loadtb+1] = UnityEngine.Resources.Load(path);
        end
    end)
    loadtb = nil
    UnitTest.MemoryConsumptionTest("abel_w9_mem_Load_Instantiate","test_w9_memory_Instantiate",function()
        for i = 1, testCount do
            Instantiatetb[#Instantiatetb+1] = UnityEngine.GameObject.Instantiate(prefab);
        end
    end)
    --[[
    Test Results:
     1. UnityEngine.Resources.Load As long as there is a loaded resource in memory, the Load method will not repeatedly load the resource, but return the instance in memory
     2. UnityEngine.GameObject.Instantiate instantiates the prefab resource and copies a copy of the data from the original prefab resource to memory
     3. Unity itself should have a memory pool mechanism for prefab resources, load separate resources, and the memory has not changed (no more than the pre-allocated memory)
    ]]--
end)

UnitTest.TestBlockEnd()-----------------------------------------------------------
