---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/10/26/026 17:44
---



require "Common/define"
require('Framework/UI/UIPage')

local isShowList;
local listTrue = Vector3.New(0,0,180)
local listFalse = Vector3.New(0,0,0)

local class = require 'Framework/class'
ManageAdvertisementPosCtrl = class('ManageAdvertisementPosCtrl',UIPage)

UIPage:ResgisterOpen(ManageAdvertisementPosCtrl) --注册打开的方法

--构建函数
function ManageAdvertisementPosCtrl:initialize()
    UIPage.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None);
end

function ManageAdvertisementPosCtrl:bundleName()
    return "ManageAdvertisementPosPanel";
end

function ManageAdvertisementPosCtrl:OnCreate(obj)
    UIPage.OnCreate(self,obj);
    isShowList = false;
end
local materialBehaviours
function ManageAdvertisementPosCtrl:Awake(go)
    self.gameObject = go;
    local materialBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    materialBehaviours=materialBehaviour
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.backBtn.gameObject,self.OnClick_backBtn,self);
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.infoBtn.gameObject,self.OnClick_infoBtn,self);
    materialBehaviour:AddClick( ManageAdvertisementPosPanel.confirmBtn.gameObject,self.OnClick_confirm,self)
    --排序
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.arrowBtn.gameObject,self.OnClick_OnSorting,self);
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.nameBtn.gameObject,self.OnClick_OnName,self);
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.quantityBtn.gameObject,self.OnClick_OnNumber,self);

    materialBehaviour:AddClick(ManageAdvertisementPosPanel.goodsBtn1.gameObject,self.OnClick_OnGoods,self);
    materialBehaviour:AddClick(ManageAdvertisementPosPanel.buildingBtn.gameObject,self.OnClick_OnBuild,self);
    -- self:OnClick_OnGoods();

    -----创建广告管理
    local creatData={count=1,buildingType=BuildingType.MunicipalManage,lMsg=MunicipalModel.lMsg}
    self.ItemCreatDeleteMgr=MunicipalModel.manger
    self.ItemCreatDeleteMgr:creat(materialBehaviours,creatData)
    if MunicipalModel.owenerId==MunicipalModel.buildingOwnerId then--自已进入
        self.ItemCreatDeleteMgr.addItemInSList[0].numText.transform.parent.localScale=Vector3.zero
        self.ItemCreatDeleteMgr.addItemInSList[0].timeText.transform.parent.localScale=Vector3.zero
    else--他人进入
        self.ItemCreatDeleteMgr.addItemList[0]:SetActive(false)
    end


end


--返回
function ManageAdvertisementPosCtrl:OnClick_backBtn(ins)


    if MunicipalModel.owenerId==MunicipalModel.buildingOwnerId then--自已进入
        for i, v in pairs(ins.ItemCreatDeleteMgr.addedItemList) do
            destroy(v)
        end
        for i, v in pairs(ins.ItemCreatDeleteMgr.selectItemList) do
            v:GetComponent("Image").raycastTarget=true;
        end
        if ins.ItemCreatDeleteMgr.serverMapAdvertisementINSList then
            ---服务器数据还原
            for i, v in pairs(ins.ItemCreatDeleteMgr.serverMapAdvertisementINSList) do
                v.prefab:SetActive(true)
                v.numtext.text=v.selfcount
            end
        end
        ins.ItemCreatDeleteMgr.AdvertisementDataList={}
    else
        for i, v in pairs(ins.ItemCreatDeleteMgr.addedItemList) do
            destroy(v)
        end
        for i, v in pairs(ins.ItemCreatDeleteMgr.selectItemList) do
            v:GetComponent("Image").raycastTarget=true;
        end
        ins.ItemCreatDeleteMgr.AdvertisementDataList={}
    end

    ManageAdvertisementPosPanel.greyBtn.gameObject:SetActive(true);
    UIPage.ClosePage();
end

--打开信息界面
function ManageAdvertisementPosCtrl:OnClick_infoBtn()

end
--刷新数据
function ManageAdvertisementPosCtrl:Refresh()



    if MunicipalModel.owenerId==MunicipalModel.buildingOwnerId then--自已进入
        if self.ItemCreatDeleteMgr.addItemList[1] then
            self.ItemCreatDeleteMgr.addItemList[1]:SetActive(true)
        end

    else--他人进入
        if self.ItemCreatDeleteMgr.addItemList[0] then
            self.ItemCreatDeleteMgr.addItemList[0]:SetActive(false)
        end
        self:c_ScreenOut(self.m_data.myBuySlots)
    end

end


function ManageAdvertisementPosCtrl:c_ScreenOut(slotList)
    self.slotList={}
    local tempList={}
    for i, slot in pairs(slotList) do
        if not tempList[slot.days] then
            tempList[slot.days]={}
            table.insert(tempList[slot.days],slot)
        else
            table.insert(tempList[slot.days],slot)
        end
    end
    for i, v in pairs(tempList) do
       table.insert(self.slotList,v)
    end

   ---刷新数据
    if #self.ItemCreatDeleteMgr.addItemInSList-1>#self.slotList then--实例数量大于数据数量
       for i = 1, #self.ItemCreatDeleteMgr.addItemInSList-1 do
          local ins=self.ItemCreatDeleteMgr.addItemInSList[i]
           if self.slotList[i] then
               ins.numText.text=#self.slotList[i]--刷新数量
               --刷新时间
               ins.angleRoot.localScale=Vector3.zero--关闭四角
               ins.selfAcount=#self.slotList[i]
               ins.updateAcount=#self.slotList[i]
               ins.slots=self.slotList[i]
           else
               ins.prefab:SetActive(false)
           end

       end
    else--实例数量小于数据数量
       for i = 1, #self.slotList do
          local ins=self.ItemCreatDeleteMgr.addItemInSList[i]
           if ins then
               ins.numText.text=#self.slotList[i]--刷新数量
               --刷新时间
               ins.angleRoot.localScale=Vector3.zero--关闭四角
               ins.selfAcount=#self.slotList[i]
               ins.updateAcount=#self.slotList[i]
               ins.slots=self.slotList[i]

           else
               self.ItemCreatDeleteMgr:_creataddItem({})
               self.ItemCreatDeleteMgr.addItemInSList[i].numText.text=#self.slotList[i]--刷新数量
               --刷新时间
               self.ItemCreatDeleteMgr.addItemInSList[i].angleRoot.localScale=Vector3.zero--关闭四角
               self.ItemCreatDeleteMgr.addItemInSList[i].angleRoot.localScale=Vector3.zero--关闭四角
               self.ItemCreatDeleteMgr.addItemInSList[i].selfAcount=#self.slotList[i]
               self.ItemCreatDeleteMgr.addItemInSList[i].updateAcount=#self.slotList[i]
               self.ItemCreatDeleteMgr.addItemInSList[i].slots=self.slotList[i]
           end
       end
    end
    ---默认开启一个四角
    local tempIns=self.ItemCreatDeleteMgr.addItemInSList[1]
    if tempIns then
        tempIns.angleRoot.localScale=Vector3.one
        self.ItemCreatDeleteMgr.current=tempIns
    end
end


--根据名字排序
function ManageAdvertisementPosCtrl:OnClick_OnName()
    ManageAdvertisementPosPanel.nowText.text = "By brand";
    ManageAdvertisementPosCtrl:OnClick_OpenList(not isShowList);
end
--根据数量排序
function ManageAdvertisementPosCtrl:OnClick_OnNumber()
    ManageAdvertisementPosPanel.nowText.text = "By quantity";
    ManageAdvertisementPosCtrl:OnClick_OpenList(not isShowList);
end

--展开排序列表
function ManageAdvertisementPosCtrl:OnClick_OnSorting(ins)
    ManageAdvertisementPosCtrl:OnClick_OpenList(not isShowList);
end
--排序列表动画
function ManageAdvertisementPosCtrl:OnClick_OpenList(isShow)
    if isShow then
        --WarehousePanel.list:SetActive(true);
        ManageAdvertisementPosPanel.list:DOScale(Vector3.New(1,1,1),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        ManageAdvertisementPosPanel.arrowBtn:DORotate(listTrue,0.1):SetEase(DG.Tweening.Ease.OutCubic);
    else
        --WarehousePanel.list:SetActive(false);
        ManageAdvertisementPosPanel.list:DOScale(Vector3.New(0,0,0),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        ManageAdvertisementPosPanel.arrowBtn:DORotate(listFalse,0.1):SetEase(DG.Tweening.Ease.OutCubic);
    end
    isShowList = isShow;
end


--设置显隐
function ManageAdvertisementPosCtrl:OnClick_OnGoods()
    ManageAdvertisementPosPanel.goodsScroll.gameObject:SetActive(true);
    ManageAdvertisementPosPanel.buildingScroll.gameObject:SetActive(false);

    self:SetActive(false);
    ManageAdvertisementPosPanel.goodsBtn.gameObject:SetActive(true);
    ManageAdvertisementPosPanel.buildingBtn.gameObject:SetActive(true);
    ManageAdvertisementPosPanel.buildingBtn1.gameObject:SetActive(false);
end

function ManageAdvertisementPosCtrl:OnClick_OnBuild()
    ManageAdvertisementPosPanel.buildingScroll.gameObject:SetActive(true);
    ManageAdvertisementPosPanel.goodsScroll.gameObject:SetActive(false);

    self:SetActive(false);
    ManageAdvertisementPosPanel.buildingBtn1.gameObject:SetActive(true);
    ManageAdvertisementPosPanel.goodsBtn.gameObject:SetActive(false);
    ManageAdvertisementPosPanel.goodsBtn1.gameObject:SetActive(true);
end

function ManageAdvertisementPosCtrl:OnClick_confirm(ins)
    local data={}
    data=ins
    if MunicipalModel.owenerId==MunicipalModel.buildingOwnerId then --自已进入
        data.callback=ins.Mastercallback
    else
        data.callback=ins.OtherCallback
    end
    ct.OpenCtrl("ConfirmPopCtrl",data)
end

function ManageAdvertisementPosCtrl:Mastercallback()
    UIPage:ClosePage()
    ct.OpenCtrl("AdvertisementPosCtrl")
    for i, v in pairs(self.ItemCreatDeleteMgr.addedItemList) do
        destroy(v);
    end
    for i, v in pairs(self.ItemCreatDeleteMgr.selectItemList) do
        v:GetComponent("Image").raycastTarget=true;
    end

    ---创建打的广告
    for i, v in pairs(self.ItemCreatDeleteMgr.AdvertisementDataList) do
        self.ItemCreatDeleteMgr:_creatAdvertisementItem(v)
        ---发送打广告请求
        for k = 1, v.count do
            Event.Brocast("m_adPutAdToSlot",nil,2151002,v.type,MunicipalModel.lMsg.info.id)
        end
        --------------------------------------------
        for u, p in pairs(self.ItemCreatDeleteMgr.adList) do
            if u==v.metaId then
                return
            end
        end
        local data={metaId=v.metaId,count=v.count}
        self.ItemCreatDeleteMgr:_creatserverMapAdvertisementItem(data)
    end

    self.ItemCreatDeleteMgr.AdvertisementDataList={}

    ---服务器数据跟新
    if self.ItemCreatDeleteMgr.serverMapAdvertisementINSList then
        for i, v in pairs(self.ItemCreatDeleteMgr.serverMapAdvertisementINSList) do
            if  tonumber(v.selfcount) < tonumber(v.updatecount) then---添加广告
            for i = 1, (v.updatecount-v.selfcount) do
                Event.Brocast("m_adPutAdToSlot",nil,2151002,0,MunicipalModel.lMsg.info.id)
                self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text=self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text+1
                v.selfcount=self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text

            end

            else---删广告
                for k = 1, (v.selfcount-v.updatecount)  do
               Event.Brocast("m_DelAdFromSlot",MunicipalModel.lMsg.info.id,self.ItemCreatDeleteMgr.adList[v.metaId][1].id)
                table.remove(self.ItemCreatDeleteMgr.adList[v.metaId],1)
                    self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text=self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text-1
                    v.selfcount=self.ItemCreatDeleteMgr.AdvertisementINSList[v.metaId].countText.text
                if tonumber(v.selfcount) ==0 then
                    destroy(self.ItemCreatDeleteMgr.AdvertisementItemList[v.metaId])
                    self.ItemCreatDeleteMgr.adList[v.metaId]=nil
                end
                end
            end
        end
    end

    ManageAdvertisementPosPanel.greyBtn.gameObject:SetActive(true);
end

function ManageAdvertisementPosCtrl:OtherCallback()

    for i, data in pairs(self.ItemCreatDeleteMgr.AdvertisementDataList) do

        for i = 1, data.count do
            Event.Brocast("m_adPutAdToSlot",data.slots[1].s.id,data.metaId,data.type,MunicipalModel.lMsg.info.id)
            table.remove(data.slots,1)
        end
    end

end




















