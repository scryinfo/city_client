---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/11/13 14:31
---通知
GameNoticeCtrl = class('GameNoticeCtrl',UIPage)
UIPage:ResgisterOpen(GameNoticeCtrl) --注册打开的方法
local gameObject;
local GameNoticeBehaviour
local bg = nil
local isShowHint =false
local id = nil

function  GameNoticeCtrl:bundleName()
    return "GameNoticePanel"
end

function GameNoticeCtrl:initialize()
    --UIPage.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None)--可以回退，UI打开后，隐藏其它面板
    UIPage.initialize(self,UIType.Normal,UIMode.NeedBack,UICollider.None)--可以回退，UI打开后，不隐藏其它的UI
end

--启动事件--
function GameNoticeCtrl:OnCreate(obj)
    UIPage.OnCreate(self,obj)
    gameObject = obj;
    self:_initData();
    self. NoticeMgr = NoticeMgr:new()

    GameNoticeBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    GameNoticeBehaviour:AddClick(GameNoticePanel.bgBtn,self.OnBgBtn,self)
    GameNoticeBehaviour:AddClick(GameNoticePanel.xBtn,self.OnXBtn,self);
    GameNoticeBehaviour:AddClick(GameNoticePanel.jumpBtn,self.OnJumpBtn,self);
    GameNoticeBehaviour:AddClick(GameNoticePanel.hint,self.OnHint,self);

    NoticeMgr:_createNotice(GameNoticeBehaviour)

    Event.AddListener("c_onBg",self.c_onBg,self)

end

--初始化
function GameNoticeCtrl:_initData()
    GameNoticePanel.jumpBtn:SetActive(false)
    GameNoticePanel.hedaer.text = ""
    GameNoticePanel.time.text = ""
    GameNoticePanel.rightContent.text = "请选择左边的邮件"
end

--点击空白背景返回
function GameNoticeCtrl:OnBgBtn()
    UIPage.ClosePage();
end

--点击通知
function GameNoticeCtrl:c_onBg(go)
    if bg ~= nil then
        bg:SetActive(false)
    end
    go.newBg:SetActive(true)
    destroy(go.hint)
    bg =  go.newBg
    if Notice[go.id].redirect == "" then
        GameNoticePanel.jumpBtn:SetActive(false)
    else
        GameNoticePanel.jumpBtn:SetActive(true)
    end
    GameNoticePanel.hedaer.text = go.itemHedaer.text
    GameNoticePanel.time.text = go.itemTime.text
    GameNoticePanel.rightContent.text = Notice[go.id].content
    id = go.id
end

--删除通知
function GameNoticeCtrl:OnXBtn(go)
    if id == nil then
       return
    end
    destroy(NoticeMgr.notice[id].prefab.gameObject)
    table.remove(NoticeMgr.notice,id)
    local i = 1
    for k,v in ipairs(NoticeMgr.notice)  do
        NoticeMgr.notice[i]:RefreshID(i)
        i = i + 1
    end
    id = nil
    bg = nil
    go:_initData();
    if #NoticeMgr.notice == 0 then
        UIPage.ClosePage();
        ct.OpenCtrl("NoMessageCtrl")
    end
end

--跳转场景
function GameNoticeCtrl:OnJumpBtn(go)
    ct.OpenCtrl(Notice[id].redirect)
end

--剩余时间
function GameNoticeCtrl:OnHint()
    GameNoticeCtrl:_setActiva(not isShowHint)
end

--控制显隐
function GameNoticeCtrl:_setActiva(isShow)
    GameNoticePanel.hintItem:SetActive(isShow)
    isShowHint = isShow
end