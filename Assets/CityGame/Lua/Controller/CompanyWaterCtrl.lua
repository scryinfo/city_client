---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2019/7/20 15:16
---Company flow ctrl
CompanyWaterCtrl = class('CompanyWaterCtrl',UIPanel)
UIPanel:ResgisterOpen(CompanyWaterCtrl)
CompanyWaterCtrl.static.PATH = "Assets/CityGame/Resources/View/GoodsItem/CompanyBuildingItem.prefab";

local companyWaterBehaviour;
local incomePayInfo

function  CompanyWaterCtrl:bundleName()
    return "Assets/CityGame/Resources/View/CompanyWaterPanel.prefab"
end

function CompanyWaterCtrl:initialize()
    UIPanel.initialize(self,UIType.PopUp,UIMode.NeedBack,UICollider.None)
end

function CompanyWaterCtrl:Awake()
    self.insId = OpenModelInsID.CompanyWaterCtrl
    self.income = true
    companyWaterBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    companyWaterBehaviour:AddClick(CompanyWaterPanel.backBtn,self.c_OnBack,self);
    companyWaterBehaviour:AddClick(CompanyWaterPanel.incomeBg,self.c_OnIncomeBg,self);
    companyWaterBehaviour:AddClick(CompanyWaterPanel.expendBg,self.c_OnExpendBg,self);
    companyWaterBehaviour:AddClick(CompanyWaterPanel.off.gameObject,self.c_OnOff,self);

    CompanyWaterPanel.income.text = GetLanguage(18050011)   --income
    CompanyWaterPanel.expend.text = GetLanguage(18050012)   --expenditure

    --Player id
    self.playerId = DataManager.GetMyOwnerID()

    self.buildingItem = {}
    for i, v in ipairs(CompanyWaterConfig) do
        local function callback(prefab)
            self.buildingItem[i] = CompanyBuildingItem:new(companyWaterBehaviour,prefab,v)
            if i == 1 then
                self.buildingItem[1]:OnBg(self.buildingItem[1])
            end
        end
        createPrefab(CompanyWaterCtrl.static.PATH,CompanyWaterPanel.buildingContent, callback)
    end

    --Sliding interoperability
    self.companyWater = UnityEngine.UI.LoopScrollDataSource.New()  --Quotes
    self.companyWater.mProvideData = CompanyWaterCtrl.static.CompanyWaterProvideData
    self.companyWater.mClearData = CompanyWaterCtrl.static.CompanyWaterClearData

end

function CompanyWaterCtrl:Active()
    UIPanel.Active(self)
    Event.AddListener("c_companyBuildingWater",self.c_companyBuildingWater,self)
    Event.AddListener("c_companyWater",self.c_companyWater,self)

    if self.income then
        CompanyWaterPanel.income.text = GetLanguage(18050011)   --income
        CompanyWaterPanel.expend.text = GetLanguage(18050012)   --expenditure
    else
        CompanyWaterPanel.income.text = GetLanguage(18050011)   --expenditure
        CompanyWaterPanel.expend.text = GetLanguage(18050012)   --income
    end
    CompanyWaterPanel.emptyText.text = GetLanguage(18050015)

end

function CompanyWaterCtrl:Refresh()
    DataManager.OpenDetailModel(CompanyWaterModel, self.insId)
    if self.bType then
        DataManager.DetailModelRpcNoRet(self.insId, 'm_queryPlayerIncomePay',self.playerId,self.bType,self.income)
    end
end

function CompanyWaterCtrl:Hide()
    UIPanel.Hide(self)
    Event.RemoveListener("c_companyBuildingWater",self.c_companyBuildingWater,self)
    Event.RemoveListener("c_companyWater",self.c_companyWater,self)
    self:OpenClose(false)
end

function CompanyWaterCtrl:Close()
    UIPanel.Close(self)
    if self.buildingItem then
        for i, v in pairs(self.buildingItem) do
            destroy(v.prefab.gameObject)
        end
        self.buildingItem = {}
    end
    self.bType = nil
    self:OpenClose(false)
end

--return
function CompanyWaterCtrl:c_OnBack(go)
    PlayMusEff(1002)
    go:Hide()
    UIPanel.ClosePage()
end

function CompanyWaterCtrl:c_OnIncomeBg(go)
    PlayMusEff(1002)
    go:OpenClose(true)
end

function CompanyWaterCtrl:OpenClose(open)
    if open then
        CompanyWaterPanel.expendBg.transform.localScale = Vector3.one
        CompanyWaterPanel.off.localScale = Vector3.one
        CompanyWaterPanel.open.localScale = Vector3.zero
        CompanyWaterPanel.close.localScale = Vector3.one
    else
        CompanyWaterPanel.expendBg.transform.localScale = Vector3.zero
        CompanyWaterPanel.off.localScale = Vector3.zero
        CompanyWaterPanel.open.localScale = Vector3.one
        CompanyWaterPanel.close.localScale = Vector3.zero
    end
end

function CompanyWaterCtrl:c_OnOff(go)
    go:OpenClose(false)
end

function CompanyWaterCtrl:c_OnExpendBg(go)
    PlayMusEff(1002)
    go.income = not go.income
    if go.income then
        CompanyWaterPanel.income.text = GetLanguage(18050011)   --income
        CompanyWaterPanel.expend.text = GetLanguage(18050012)   --expenditure
    else
        CompanyWaterPanel.income.text = GetLanguage(18050011)   --expenditure
        CompanyWaterPanel.expend.text = GetLanguage(18050012)   --income
    end
    go:OpenClose(false)
    DataManager.DetailModelRpcNoRet(go.insId, 'm_queryPlayerIncomePay',go.playerId, go.bType,go.income)
end

--Sliding interoperability
CompanyWaterCtrl.static.CompanyWaterProvideData = function(transform, idx)
    idx = idx + 1
    local item = CompanyWaterItem:new(transform,incomePayInfo.incomePay[idx],incomePayInfo.isIncome)
end

CompanyWaterCtrl.static.CompanyWaterClearData = function()

end

function CompanyWaterCtrl:c_companyBuildingWater(type)
    self.bType = type
    DataManager.DetailModelRpcNoRet(self.insId, 'm_queryPlayerIncomePay',self.playerId,type,self.income)
end

function CompanyWaterCtrl:c_companyWater(info)
    if info.incomePay then
        CompanyWaterPanel.empty.localScale = Vector3.zero
        incomePayInfo = info
        table.sort(incomePayInfo.incomePay, function (m, n) return m.time > n.time end )
        CompanyWaterPanel.scroll:ActiveLoopScroll(self.companyWater,#info.incomePay)
    else
        CompanyWaterPanel.empty.localScale = Vector3.one
        incomePayInfo = nil
        CompanyWaterPanel.scroll:ActiveLoopScroll(self.companyWater,0)
    end
end