---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/16 15:48
---
LabScientificLineCtrl = class('LabScientificLineCtrl',UIPanel)
UIPanel:ResgisterOpen(LabScientificLineCtrl)

LabScientificLineCtrl.static.EmptyBtnPath = "View/Items/LaboratoryItems/EmptyBtn"  --Button prefabrication
LabScientificLineCtrl.static.LabResearchItemPath = "View/Items/LaboratoryItems/LabResearchItem"  --research
LabScientificLineCtrl.static.LabInventionItemPath = "View/Items/LaboratoryItems/LabInventionItem"  --invention
LabScientificLineCtrl.static.LabRemainStaffColor = "#4a7ff6"  --Employee color

function LabScientificLineCtrl:initialize()
    UIPanel.initialize(self, UIType.Normal, UIMode.HideOther, UICollider.None)
end

function LabScientificLineCtrl:bundleName()
    return "Assets/CityGame/Resources/View/LabScientificLinePanel.prefab"
end

function LabScientificLineCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)
end

function LabScientificLineCtrl:Awake(go)
    self.gameObject = go
    self.luaBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    self.luaBehaviour:AddClick(LabScientificLinePanel.backBtn.gameObject, function()
        UIPanel.ClosePage()
    end)
    self.luaBehaviour:AddClick(LabScientificLinePanel.researchBtn.gameObject, function()
        self:_researchLineOpen()
    end)
    self.luaBehaviour:AddClick(LabScientificLinePanel.inventionBtn.gameObject, function()
        self:_inventionLineOpen()
    end)

    --Sliding multiplexing section
    self.researchSource = UnityEngine.UI.LoopScrollDataSource.New()  
    self.researchSource.mProvideData = LabScientificLineCtrl.static.researchProvideData
    self.researchSource.mClearData = LabScientificLineCtrl.static.researchClearData
    self.inventionSource = UnityEngine.UI.LoopScrollDataSource.New()  
    self.inventionSource.mProvideData = LabScientificLineCtrl.static.inventionProvideData
    self.inventionSource.mClearData = LabScientificLineCtrl.static.inventionClearData
end

function LabScientificLineCtrl:Refresh()
    Event.AddListener("c_OpenChangeStaffTip", self._openTip, self)  --Open Change Employee Hover
    self:_initPanelData()
end

function LabScientificLineCtrl:Hide()
    Event.RemoveListener("c_OpenChangeStaffTip", self._openTip, self)  --Open Change Employee Hover
end

function LabScientificLineCtrl:_initPanelData()
    LabScientificLineCtrl.static.researchItems = {}
    LabScientificLineCtrl.static.inventionItems = {}
    if self.m_data then
        self.buildingId = self.m_data.insId
        LabScientificLineCtrl.static.buildingId = self.buildingId
    end
    LabScientificLinePanel.changeStaffCountBtn.transform.localScale = Vector3.zero

    DataManager.DetailModelRpc(self.buildingId, 'm_GetScientificData', function (researchLines, inventionLines, maxWorkerNum, remainWorker, type)
        self.remainWorker = remainWorker
        self.maxWorkerNum = maxWorkerNum
        self.researchDatas = researchLines
        self.inventionDatas = inventionLines
        LabScientificLinePanel.staffCountText.text = string.format("<color=%s>%d</color>/%d", LabScientificLineCtrl.static.LabRemainStaffColor, remainWorker, maxWorkerNum)
        if type == nil then
            type = LabScientificLineCtrl.static.type or 0
        end
        if type == 0 then
            self:_researchLineOpen()
        else
            self:_inventionLineOpen()
        end
    end)
end
---Button cut
function LabScientificLineCtrl:_researchLineOpen()
    LabScientificLinePanel._researchToggleState(true)
    LabScientificLinePanel._inventionToggleState(false)
    LabScientificLineCtrl.static.type = 0

    self:onReceiveLabResearchData(self.researchDatas)
end
function LabScientificLineCtrl:_inventionLineOpen()
    LabScientificLinePanel._researchToggleState(false)
    LabScientificLinePanel._inventionToggleState(true)
    LabScientificLineCtrl.static.type = 1

    self:onReceiveLabInventionData(self.inventionDatas)
end
--Number of employees in the update interface
function LabScientificLineCtrl:_updateWorker(remainWorker, maxWorkerNum)
    LabScientificLinePanel.staffCountText.text = string.format("<color=%s>%d</color>/%d", LabScientificLineCtrl.static.LabRemainStaffColor, remainWorker, maxWorkerNum)
end

---Sliding multiplexing
--research
LabScientificLineCtrl.static.researchProvideData = function(transform, idx)
    if idx == 0 then
        LabScientificLineCtrl.researchEmptyBtn = LabScrollEmptyBtn:new(transform, function ()
            --ct.OpenCtrl("LabResearchCtrl", {buildingId = LabScientificLineCtrl.static.buildingId, itemId = 2201003})
            ct.OpenCtrl("AddLineChooseItemCtrl", {type = 0})
        end)
        return
    end
    idx = idx + 1
    local item = LabResearchLineItem:new(LabScientificLineCtrl.researchInfoData[idx], transform)
    LabScientificLineCtrl.static.researchItems[idx] = item
end
LabScientificLineCtrl.static.researchClearData = function(transform)
end
--invention
LabScientificLineCtrl.static.inventionProvideData = function(transform, idx)
    if idx == 0 then
        LabScientificLineCtrl.inventionEmptyBtn = LabScrollEmptyBtn:new(transform, function ()
            --ct.OpenCtrl("LabInventionCtrl", {buildingId = LabScientificLineCtrl.static.buildingId, itemId = 2151003})
            ct.OpenCtrl("AddLineChooseItemCtrl", {type = 1})
        end)
        return
    end
    idx = idx + 1
    local item = LabInventionLineItem:new(LabScientificLineCtrl.inventionInfoData[idx], transform)
    LabScientificLineCtrl.static.inventionItems[idx] = item
end
LabScientificLineCtrl.static.inventionClearData = function(transform)
end
---Refresh data
--research
function LabScientificLineCtrl:onReceiveLabResearchData(datas)
    self.researchDatas = datas
    local researchInfoData = ct.deepCopy(datas)
    local researchPrefabList = {}
    for i, item in pairs(researchInfoData) do
        researchPrefabList[i] = LabScientificLineCtrl.static.LabResearchItemPath
    end
    --Reserve the first data for the button
    table.insert(researchInfoData, 1, {})
    table.insert(researchPrefabList, 1, LabScientificLineCtrl.static.EmptyBtnPath)

    LabScientificLineCtrl.researchInfoData = researchInfoData
    LabScientificLinePanel.researchScroll:ActiveDiffItemLoop(self.researchSource, researchPrefabList)

    --Handle special cases, if it is a temporary line, open to adjust the status of employees
    if #researchInfoData >= 2 and not researchInfoData[2].id then
        LabScientificLinePanel.inventTipItem:_hideSelf()
        DataManager.DetailModelRpc(LabScientificLineCtrl.static.buildingId, 'm_GetWorkerCount', function (remainWorker)
            LabScientificLinePanel.researchTipItem:newLineState(researchInfoData[2], remainWorker)
        end)
    else
        LabScientificLinePanel.inventTipItem:_hideSelf()
        LabScientificLinePanel.researchTipItem:_hideSelf()
    end
end
--invention
function LabScientificLineCtrl:onReceiveLabInventionData(datas)
    self.inventionDatas = datas
    local inventionInfoData = ct.deepCopy(datas)
    local inventionPrefabList = {}
    for i, item in pairs(inventionInfoData) do
        inventionPrefabList[i] = LabScientificLineCtrl.static.LabInventionItemPath
    end
    --Reserve the first data for the button
    table.insert(inventionInfoData, 1, {})
    table.insert(inventionPrefabList, 1, LabScientificLineCtrl.static.EmptyBtnPath)

    LabScientificLineCtrl.inventionInfoData = inventionInfoData
    LabScientificLinePanel.inventionScroll:ActiveDiffItemLoop(self.inventionSource, inventionPrefabList)

    --Handle special cases, if it is a temporary line, open to adjust the status of employees
    if #inventionInfoData >= 2 and not inventionInfoData[2].id then
        LabScientificLinePanel.researchTipItem:_hideSelf()
        DataManager.DetailModelRpc(LabScientificLineCtrl.static.buildingId, 'm_GetWorkerCount', function (remainWorker)
            LabScientificLinePanel.inventTipItem:newLineState(inventionInfoData[2], remainWorker)
        end)
    else
        LabScientificLinePanel.inventTipItem:_hideSelf()
        LabScientificLinePanel.researchTipItem:_hideSelf()
    end
end

---Prompt box part
--Open the bullet box
function LabScientificLineCtrl:_openTip(lineData, itemRect)
    if lineData.type == 0 then
        LabScientificLinePanel.inventTipItem:_hideSelf()
        DataManager.DetailModelRpc(LabScientificLineCtrl.static.buildingId, 'm_GetWorkerCount', function (remainWorker)
            LabScientificLinePanel.researchTipItem:changeStaffCountState(lineData, remainWorker, itemRect)
        end)
    else
        LabScientificLinePanel.researchTipItem:_hideSelf()
        DataManager.DetailModelRpc(LabScientificLineCtrl.static.buildingId, 'm_GetWorkerCount', function (remainWorker)
            LabScientificLinePanel.inventTipItem:changeStaffCountState(lineData, remainWorker, itemRect)
        end)
    end
end