---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2019/7/24 16:33
---

ResearchSaleCtrl = class("ResearchSaleCtrl", UIPanel)
ResearchSaleCtrl:ResgisterOpen(ResearchSaleCtrl)

function ResearchSaleCtrl:initialize()
    UIPanel.initialize(self, UIType.PopUp, UIMode.DoNothing, UICollider.None)
end

function ResearchSaleCtrl:bundleName()
    return "Assets/CityGame/Resources/View/ResearchSalePanel.prefab"
end

function ResearchSaleCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)
end

function ResearchSaleCtrl:Awake(go)
    local luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")

    luaBehaviour:AddClick(ResearchSalePanel.backBtn, self.OnBack, self)
    luaBehaviour:AddClick(ResearchSalePanel.sureBtn, self.OnSure, self)
    luaBehaviour:AddClick(ResearchSalePanel.closeBtn, self.OnStopSale, self)
    luaBehaviour:AddClick(ResearchSalePanel.changeBtn, self.OnChange, self)
    luaBehaviour:AddClick(ResearchSalePanel.autoBtn.gameObject, self.OnAuto, self)
    luaBehaviour:AddClick(ResearchSalePanel.competitivenessBtn.gameObject, self.OnCompetitiveness, self)
    luaBehaviour:AddClick(ResearchSalePanel.closeTipsBtn.gameObject, self.OnCloseTips, self)

    ResearchSalePanel.autoToggle.onValueChanged:AddListener(function (isOn)
        self:_autoToggleValueChange(isOn)
    end)

    ResearchSalePanel.quantityInputField.onEndEdit:AddListener(function (inputValue)
        if inputValue == nil or inputValue == "" then
            ResearchSalePanel.quantityInputField.text = 1
            ResearchSalePanel.quantitySlider.value = 1
            return
        end
        local num = tonumber(inputValue)
        if num <= 0 then
            ResearchSalePanel.quantityInputField.text = 1
            ResearchSalePanel.quantitySlider.value = 1
            return
        end
        ResearchSalePanel.quantitySlider.value = num
    end)

    ResearchSalePanel.priceInputField.onEndEdit:AddListener(function (inputValue)
        if inputValue == nil or inputValue == "" then
            ResearchSalePanel.priceInputField.text = 0.0001
            return
        end
        local num = tonumber(inputValue)
        if num <= 0 then
            ResearchSalePanel.priceInputField.text = 0.0001
            return
        end
    end)

    ResearchSalePanel.quantitySlider.onValueChanged:AddListener(function (value)
        ResearchSalePanel.quantityInputField.text = tostring(value)
    end)

    self:_awakeSliderInput()  --初始化
end

function ResearchSaleCtrl:Active()
    UIPanel.Active(self)
    Event.AddListener("c_OnqueryLaboratoryRecommendPrice",self.c_OnqueryLaboratoryRecommendPrice,self)
end

function ResearchSaleCtrl:Refresh()
    DataManager.DetailModelRpcNoRet(self.m_data.buildingId, 'm_queryLaboratoryRecommendPrice')
    self:_updateData()
end

function ResearchSaleCtrl:Hide()
    UIPanel.Hide(self)
    Event.RemoveListener("c_OnqueryLaboratoryRecommendPrice",self.c_OnqueryLaboratoryRecommendPrice,self)
end

-- 初始化基本数据
function ResearchSaleCtrl:_updateData()

    -- 根据useType判断是否需要显示下架
    if self.m_data.data.index == 1 then

    else

    end
    if self.m_data.data.index == 1 then
        ResearchSalePanel.nameText.text = ResearchConfig[self.m_data.data.itemKey.id].name
        --ResearchSalePanel.priceInputField.text = 0.0001
        ResearchSalePanel.closeBtnTF.localScale = Vector3.zero
        ResearchSalePanel.sureBtnTF.localScale = Vector3.one
        ResearchSalePanel.changeBtnTF.localScale = Vector3.zero
        ResearchSalePanel.autoToggle.isOn = false
        self.mySaleTypeId = self.m_data.data.itemKey.id
        self:_autoToggleValueChange(false)
    elseif self.m_data.data.index == 3 then
        ResearchSalePanel.nameText.text = ResearchConfig[self.m_data.data.k.id].name
        --ResearchSalePanel.priceInputField.text = GetClientPriceString(self.m_data.data.price)
        ResearchSalePanel.closeBtnTF.localScale = Vector3.one
        ResearchSalePanel.sureBtnTF.localScale = Vector3.zero
        ResearchSalePanel.changeBtnTF.localScale = Vector3.one
        ResearchSalePanel.autoToggle.isOn = self.m_data.data.autoReplenish
        self.mySaleTypeId = self.m_data.data.k.id
        self:_autoToggleValueChange(self.m_data.data.autoReplenish)
    end

    ResearchSalePanel.closeTipsBtn.localScale = Vector3.zero
    ResearchSalePanel.recommendText.text = "Recommend:50"
    ResearchSalePanel.quantitySlider.maxValue = self.m_data.data.storeNum + self.m_data.data.lockedNum
    ResearchSalePanel.quantitySlider.value = self.m_data.data.lockedNum
    ResearchSalePanel.tipsImage.localScale = Vector3.zero
    ResearchSalePanel.nullImage.localScale = Vector3.zero
    ResearchSalePanel.warehouseText.text = "X " .. self.m_data.data.storeNum
    ResearchSalePanel.shelfText.text = "X " .. self.m_data.data.lockedNum
    ResearchSalePanel.quantityInputField.text = self.m_data.data.lockedNum
    ResearchSalePanel.nullText.text = self.m_data.data.storeNum + self.m_data.data.lockedNum
end

--滑动条input联动
function ResearchSaleCtrl:_awakeSliderInput()
    ResearchSalePanel.priceInputField.onValueChanged:AddListener(function (str)
        if str == "" or self.guidePrice == nil then
            return
        end
        local finalStr = ct.getCorrectPrice(str)
        if finalStr ~= str then
            ResearchSalePanel.priceInputField.text = finalStr  --限制用户小数输入
            return
        end
        local temp = ct.CalculationLaboratoryCompetitivePower(self.guidePrice, tonumber(str) * 10000, self.mySaleTypeId)  --计算竞争力
        if temp >= functions.maxCompetitive then
            ResearchSalePanel.competitivenessText.text = ">"..temp
        elseif temp <= functions.minCompetitive then
            ResearchSalePanel.competitivenessText.text = "<"..temp
        else
            ResearchSalePanel.competitivenessText.text = string.format("%0.1f", temp)
        end
        ResearchSaleCtrl.sliderCanChange = false  --当input输入时，禁用slider
        ResearchSalePanel.priceSlider.value = temp
    end)
    --
    EventTriggerMgr.Get(ResearchSalePanel.priceSlider.gameObject).onSelect = function()
        ResearchSaleCtrl.sliderCanChange = true
    end
    EventTriggerMgr.Get(ResearchSalePanel.priceSlider.gameObject).onUpdateSelected = function()  --当slider被选中，则可以改变input的值
        ResearchSaleCtrl.sliderCanChange = true
    end
    ResearchSalePanel.priceSlider.onValueChanged:AddListener(function (value)
        if self.guidePrice == nil or ResearchSaleCtrl.sliderCanChange ~= true then
            return
        end
        local price = ct.CalculationLaboratoryPrice(self.guidePrice, value, self.mySaleTypeId)
        ResearchSalePanel.priceInputField.text = GetClientPriceString(price)
    end)
end
-------------------------------------按钮点击事件-------------------------------------
function ResearchSaleCtrl:OnBack(go)
    PlayMusEff(1002)
    UIPanel.ClosePage()
end

function ResearchSaleCtrl:OnSure(go)
    PlayMusEff(1002)
    -- 向服务器发送上架消息
    local temp = {
        buildingId = go.m_data.buildingId,
        item = {
            key = {id = go.mySaleTypeId},
            n = tonumber(ResearchSalePanel.quantityInputField.text)
        },
        price = GetServerPriceNumber(ResearchSalePanel.priceInputField.text),
        autoRepOn = ResearchSalePanel.autoToggle.isOn
    }
    DataManager.DetailModelRpcNoRet(go.m_data.buildingId, 'm_ReqScienceShelfAdd', temp)
    UIPanel.ClosePage()
end

function ResearchSaleCtrl:OnStopSale(go)
    PlayMusEff(1002)
    local data={ReminderType = ReminderType.Common,ReminderSelectType = ReminderSelectType.Select,
                content = "Make sure to take down the data packages?",func = function()
            -- 向服务器发送下架消息
            local temp = {
                buildingId = go.m_data.buildingId,
                item = {
                    key = {id = go.m_data.data.k.id},
                    n = 1
                }
            }
            DataManager.DetailModelRpcNoRet(go.m_data.buildingId, 'm_ReqScienceShelfDel', temp)
            UIPanel.ClosePage()
        end  }
    ct.OpenCtrl('NewReminderCtrl',data)
end

function ResearchSaleCtrl:OnChange(go)
    PlayMusEff(1002)
    -- 向服务器发送修改消息
    local temp = {
    buildingId = go.m_data.buildingId,
    item = {
    key = {id = go.m_data.data.k.id},
    n = tonumber(ResearchSalePanel.quantityInputField.text)
    },
    price = GetServerPriceNumber(ResearchSalePanel.priceInputField.text),
    autoRepOn = ResearchSalePanel.autoToggle.isOn
    }
    DataManager.DetailModelRpcNoRet(go.m_data.buildingId, 'm_ReqScienceShelfSet', temp)
    UIPanel.ClosePage()
end

function ResearchSaleCtrl:OnAuto(go)
    ResearchSalePanel.closeTipsBtn.localScale = Vector3.one
    ResearchSalePanel.tipsImage.localScale = Vector3.one
    ResearchSalePanel.tipsImage:SetParent(ResearchSalePanel.autoBtn)
    ResearchSalePanel.tipsImage.localPosition = Vector3.New(0, 0, 0)
    ResearchSalePanel.tipsText.text = "自动上架提示！"
end

function ResearchSaleCtrl:OnCompetitiveness(go)
    ResearchSalePanel.closeTipsBtn.localScale = Vector3.one
    ResearchSalePanel.tipsImage.localScale = Vector3.one
    ResearchSalePanel.tipsImage:SetParent(ResearchSalePanel.competitivenessBtn)
    ResearchSalePanel.tipsImage.localPosition = Vector3.New(0, 0, 0)
    ResearchSalePanel.tipsText.text = "竞争力提示！"
end

function ResearchSaleCtrl:OnCloseTips(go)
    ResearchSalePanel.closeTipsBtn.localScale = Vector3.zero
    ResearchSalePanel.tipsImage.localScale = Vector3.zero
end

function ResearchSaleCtrl:_autoToggleValueChange(isOn)
    PlayMusEff(1002)

    ResearchSalePanel.autoBtnImage.localPosition = isOn and Vector3.New(44, 0, 0) or Vector3.New(-44, 0, 0)
    ResearchSalePanel.nullImage.localScale = isOn and Vector3.one or Vector3.zero
    if isOn then
        ResearchSalePanel.quantityInputField.text = "1"
        ResearchSalePanel.nullText.text = self.m_data.data.lockedNum + self.m_data.data.storeNum
    else
        ResearchSalePanel.quantityInputField.text = self.m_data.data.lockedNum + self.m_data.data.storeNum
    end
end

function ResearchSaleCtrl:c_OnqueryLaboratoryRecommendPrice(info)
    if info then
        for key,value in pairs(info.msg) do
            if value.typeId == self.mySaleTypeId then
                self.guidePrice = value.guidePrice
                break
            end
        end
        if self.m_data.data.index == 1 then
            local tempPrice = ct.CalculationLaboratorySuggestPrice(self.guidePrice / 10000, self.mySaleTypeId)
            ResearchSalePanel.priceInputField.text = GetClientPriceString(tempPrice)
        else
            ResearchSalePanel.priceInputField.text = GetClientPriceString(self.m_data.data.price)
        end
    end
end