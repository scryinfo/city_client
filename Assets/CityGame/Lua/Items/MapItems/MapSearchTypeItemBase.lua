---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2019/2/27 18:13
---Minimap search type
MapSearchTypeItemBase = class('MapSearchTypeItemBase')

--Initialization method
function MapSearchTypeItemBase:initialize(data, selectFunc, viewRect)
    self.viewRect = viewRect
    self.data = data
    self.selectFunc = selectFunc

    self.choose = self.viewRect.transform:Find("choose")
    self.chooseIconImg = self.viewRect.transform:Find("choose/icon"):GetComponent("Image")
    self.chooseShowNameText = self.viewRect.transform:Find("choose/showNameText"):GetComponent("Text")
    self.disChoose = self.viewRect.transform:Find("disChoose")
    self.disChooseIconImg = self.viewRect.transform:Find("disChoose/icon"):GetComponent("Image")
    self.greyTypeNameText = self.viewRect.transform:Find("disChoose/greyTypeNameText"):GetComponent("Text")
    self.pageState = self.viewRect.transform:Find("openState")
    self.pageOpenImg = self.viewRect.transform:Find("openState/openImg")

    self.clickBtn = self.viewRect.transform:Find("clickBtn"):GetComponent("Button")
    self.loadBtnTran = self.viewRect.transform:Find("loadBtn")
    self.clickBtn.onClick:AddListener(function ()
        PlayMusEff(1002)
        self:_clickFunc()
    end)
    self.isOpenState = false  --Whether it is open  -- only used for typeItem with expanded page

    --Load picture
    LoadSprite(data.selectIconPath, self.chooseIconImg, true)
    LoadSprite(data.disSelectIconPath, self.disChooseIconImg, true)

    --Event.AddListener("c_SearchEndLoading", self._endLoading, self)  --End loading
    Event.AddListener("c_ChooseTypeDetail", self.chooseTypeDetail, self)  --Select to search for something
    self:resetState()
end

--

--Reset state
function MapSearchTypeItemBase:resetState()
    self.isSelect = false  --Select yourself
    self.isOpenState = false  --Open the expansion page, only for items with page
    self.choose.localScale = Vector3.zero
    self.disChoose.localScale = Vector3.one
    self.pageOpenImg.localScale = Vector3.zero
    self.loadBtnTran.transform.localScale = Vector3.zero
    self:_childInitFunc()
    self:_language()
end
--multi-language
function MapSearchTypeItemBase:_language()
    self.chooseShowNameText.text = GetLanguage(self.data.languageId)
    self.greyTypeNameText.text = GetLanguage(self.data.languageId)
end
--loading
function MapSearchTypeItemBase:_endLoading()
    self.loadBtnTran.transform.localScale = Vector3.zero
end
--
function MapSearchTypeItemBase:toggleLoadingState(isShow)
    if isShow == true then
        self.loadBtnTran.transform.localScale = Vector3.zero
    else
        self.loadBtnTran.transform.localScale = Vector3.one
    end
end

function MapSearchTypeItemBase:getIsSelect()
    return self.isSelect
end

function MapSearchTypeItemBase:getTypeId()
    return self.data.typeId
end

---Methods that need to be overridden by subclasses
function MapSearchTypeItemBase:chooseTypeDetail() end

function MapSearchTypeItemBase:_clickFunc() end  --Click event

function MapSearchTypeItemBase:_childInitFunc() end

