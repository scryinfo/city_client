//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PieChartGraphWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("PieChartGraph");
		L.RegFunction("CratePieChartFunc", CratePieChartFunc);
		L.RegFunction("DestoryPieChart", DestoryPieChart);
		L.RegFunction("GetColor", GetColor);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CratePieChartFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			PieNeedData[] arg1 = ToLua.CheckObjectArray<PieNeedData>(L, 2);
			UnityEngine.RectTransform arg2 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 3, typeof(UnityEngine.RectTransform));
			PieChartGraph.CratePieChartFunc(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestoryPieChart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PieChartGraph.DestoryPieChart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetColor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Color o = PieChartGraph.GetColor(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Color o = PieChartGraph.GetColor(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PieChartGraph.GetColor");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

