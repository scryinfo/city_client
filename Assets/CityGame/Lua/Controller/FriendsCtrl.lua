---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2018/11/28 11:52
---

FriendsCtrl = class('FriendsCtrl', UIPanel)
UIPanel:ResgisterOpen(FriendsCtrl)

function FriendsCtrl:initialize()
    ct.log("tina_w7_friends", "FriendsCtrl:initialize")
    UIPanel.initialize(self, UIType.Normal, UIMode.HideOther, UICollider.None)
end

function FriendsCtrl:bundleName()
    ct.log("tina_w7_friends", "FriendsCtrl:bundleName")
    return "Assets/CityGame/Resources/View/FriendsPanel.prefab"
end

function FriendsCtrl:Awake(go)
    FriendsCtrl.static.friendsItemTab = {}
    ct.log("tina_w7_friends", "FriendsCtrl:Awake")
    self.friendsSource = UnityEngine.UI.LoopScrollDataSource.New() 
    self.friendsSource.mProvideData = FriendsCtrl.static.FriendsProvideData
    self.friendsSource.mClearData = FriendsCtrl.static.FriendsClearData
end

function FriendsCtrl:OnCreate(go)
    ct.log("tina_w7_friends", "FriendsCtrl:OnCreate")
    --Call the base class method to process the instance data
    UIPanel.OnCreate(self, go)

    --Add UI event click listener
    FriendsCtrl.luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")
    FriendsCtrl.luaBehaviour:AddClick(FriendsPanel.backBtn, function ()
        PlayMusEff(1002)
        UIPanel.ClosePage()
    end)

    FriendsCtrl.luaBehaviour:AddClick(FriendsPanel.friendsManageBtn, self.OnFriendsManage, self)
    FriendsCtrl.luaBehaviour:AddClick(FriendsPanel.blacklistBtn, self.OnBlacklist, self)
    FriendsCtrl.luaBehaviour:AddClick(FriendsPanel.addFriendsBtn, self.OnAddFriends, self)
    FriendsCtrl.luaBehaviour:AddClick(FriendsPanel.applicationlistBtn, self.OnApplicationlist, self)

    -- Lua code mounted C# slide taking components LoopVerticalScrollRect, ActiveLoopScrollRect, now in prefabricated, can be modified to add code later
    --UnityEngine.GameObject.AddComponent(FriendsPanel.friendsView, LuaHelper.GetType("UnityEngine.UI.LoopVerticalScrollRect"))
    --UnityEngine.GameObject.AddComponent(FriendsPanel.friendsView, LuaHelper.GetType("ActiveLoopScrollRect"))
    --UnityEngine.GameObject.AddComponent(FriendsPanel.groupView, LuaHelper.GetType("UnityEngine.UI.LoopVerticalScrollRect"))
    --UnityEngine.GameObject.AddComponent(FriendsPanel.groupView, LuaHelper.GetType("ActiveLoopScrollRect"))
end

FriendsCtrl.static.FriendsProvideData = function(transform, idx)
    idx = idx + 1
    local transformId = transform:GetInstanceID()
    if FriendsCtrl.static.friendsItemTab[transformId] then
        FriendsCtrl.static.friendsItemTab[transformId]:CloseAvatar()
    end
    FriendsCtrl.static.friendsItemTab[transformId] = FriendsItem:new(idx, 1, FriendsCtrl.luaBehaviour, transform, FriendsCtrl.friendInfo[idx])
end

FriendsCtrl.static.FriendsClearData = function(transform)
end

-- Register to listen to events
function FriendsCtrl:Active()
    UIPanel.Active(self)
    self:_addListener()
    FriendsPanel.titleText.text = GetLanguage(13010001)
    FriendsPanel.NoContentText.text = GetLanguage(13010002)
end

--Refresh
function FriendsCtrl:Refresh()
    self:initInsData()
    --self:_addListener()
    self:_refreshData()
end

function FriendsCtrl:initInsData()
    DataManager.OpenDetailModel(FriendsModel, OpenModelInsID.FriendsCtrl)
end

function FriendsCtrl:_addListener()
    -- Listen to the model layer network callback
    --Event.AddListener("c_OnReceivePlayerInfo", self.c_OnReceivePlayerInfo, self)
    Event.AddListener("c_OnReceiveAddFriendSucess", self.c_OnReceiveAddFriendSucess, self)
    Event.AddListener("c_OnReceiveAddFriendReq", self.c_OnReceiveAddFriendReq, self)
    Event.AddListener("c_OnReceiveDeleteFriend", self.c_OnReceiveDeleteFriend, self)

    --self:_refreshData()
end

function FriendsCtrl:Hide()
    self:_removeListener()
    UIPanel.Hide(self)
end

function FriendsCtrl:_removeListener()
    -- Listen to the model layer network callback
    --Event.RemoveListener("c_OnReceivePlayerInfo", self.c_OnReceivePlayerInfo, self)
    Event.RemoveListener("c_OnReceiveAddFriendSucess", self.c_OnReceiveAddFriendSucess, self)
    Event.RemoveListener("c_OnReceiveAddFriendReq", self.c_OnReceiveAddFriendReq, self)
    Event.RemoveListener("c_OnReceiveDeleteFriend", self.c_OnReceiveDeleteFriend, self)
end

-- Get interface data
function FriendsCtrl:_refreshData()
    FriendsCtrl.friendInfo = {}
    local friendsBasicData = DataManager.GetMyFriends()
    local friendsId = {}
    for id, v in pairs(friendsBasicData) do
        if v ~= nil then
            table.insert(friendsId, id)
        end
    end
    if friendsId[1] then
        --Event.Brocast("m_QueryPlayerInfo", friendsId)
        FriendsPanel.friendsNumberText.text = #friendsId
        PlayerInfoManger.GetInfos(friendsId, self.c_OnReceivePlayerInfo, self)
        FriendsPanel.friendsNoContentRoot:SetActive(false)
        --FriendsPanel.groupNumberText.text = "5"
    else
        FriendsPanel.friendsNumberText.text = "0"
        FriendsPanel.friendsNoContentRoot:SetActive(true)
        --FriendsPanel.groupNumberText.text = "0"
        self:_showFriends()
    end

    self:_refreshState()
end

--Show friend information
function FriendsCtrl:_showFriends()
    FriendsPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendsCtrl.friendInfo)
end

-- Refresh the state of the interface
function FriendsCtrl:_refreshState()
    self:_showFriendsApplyNotice()
    --if not FriendsCtrl.type or FriendsCtrl.type == 1 then
    --    FriendsCtrl.type = 1
    --    FriendsPanel.friendsToggle.isOn = true
    --    self:_friendsToggleValueChange(true)
    --elseif FriendsCtrl.type == 2 then
    --    FriendsPanel.groupToggle.isOn = true
    --    self:_groupToggleValueChange(true)
    --end
    --
    --FriendsPanel.groupView:ActiveLoopScroll(self.groupSource, #FriendsCtrl.data[2])
end

-- Receive friend application
function FriendsCtrl:c_OnReceiveAddFriendReq()
    self:_showFriendsApplyNotice()
end

function FriendsCtrl:c_OnReceiveDeleteFriend(friendsId)
    -- delete data
    for i, v in ipairs(FriendsCtrl.friendInfo) do
        if v.id == friendsId.fId then
            table.remove(FriendsCtrl.friendInfo, i)
            break
        end
    end

    -- Refresh the interface
    if #FriendsCtrl.friendInfo <= 0 then
        FriendsPanel.friendsNoContentRoot:SetActive(true)
    end
    FriendsPanel.friendsNumberText.text = tostring(tonumber(#FriendsCtrl.friendInfo))
    self:_showFriends()
end

-- Application List Red Dot Control
function FriendsCtrl:_showFriendsApplyNotice()
    local friendsApply = DataManager.GetMyFriendsApply()
    FriendsPanel.applicationlistNotice:SetActive(#friendsApply > 0)
    FriendsPanel.applicationlistNoticeText.text = #friendsApply > 0 and tostring(#friendsApply) or "0"
end

-- Control friend paging
--function FriendsCtrl:_friendsToggleValueChange(isOn)
--    --FriendsCtrl.type = 1
--    FriendsPanel.friendsRoot:SetActive(isOn)
--    FriendsPanel.groupRoot:SetActive(not isOn)
--    FriendsPanel.friendsOpen:SetActive(isOn)
--    FriendsPanel.friendsClose:SetActive(not isOn)
--    FriendsPanel.groupOpen:SetActive(not isOn)
--    FriendsPanel.groupClose:SetActive(isOn)
--end

-- Control group paging
--function FriendsCtrl:_groupToggleValueChange(isOn)
--    --FriendsCtrl.type = 2
--    FriendsPanel.friendsRoot:SetActive(not isOn)
--    FriendsPanel.groupRoot:SetActive(isOn)
--    FriendsPanel.friendsOpen:SetActive(not isOn)
--    FriendsPanel.friendsClose:SetActive(isOn)
--    FriendsPanel.groupOpen:SetActive(isOn)
--    FriendsPanel.groupClose:SetActive(not isOn)
--end

-- Manage friends
function FriendsCtrl:OnFriendsManage(go)
    PlayMusEff(1002)
    go:_removeListener()
    local data =
    {
        type = 2,
        --friendsMgr = go.friendsMgr
    }
    ct.OpenCtrl("FriendslistCtrl", data)
end

--Open blacklist
function FriendsCtrl:OnBlacklist(go)
    PlayMusEff(1002)
    go:_removeListener()
    local data =
    {
        type = 3,
        --friendsMgr = go.friendsMgr
    }
    ct.OpenCtrl("FriendslistCtrl", data)
end

--add friend
function FriendsCtrl:OnAddFriends(go)
    PlayMusEff(1002)
    go:_removeListener()
    local data =
    {
        type = 4,
        --friendsMgr = go.friendsMgr
    }
    ct.OpenCtrl("FriendslistCtrl", data)
end

--Open the application list
function FriendsCtrl:OnApplicationlist(go)
    PlayMusEff(1002)
    go:_removeListener()
    local data =
    {
        type = 5,
        --friendsMgr = go.friendsMgr
    }
    ct.OpenCtrl("FriendslistCtrl", data)
end

--Manage Group
function FriendsCtrl:OnGroupManage(go)
    go:_removeListener()
    FriendsCtrl.type = 2
    local data =
    {
        type = 2,
        --friendsMgr = go.friendsMgr
    }
    ct.OpenCtrl("FriendsGrouplistCtrl", data)
end

--Start a group chat
function FriendsCtrl:OnStartGaroup(go)
    go:_removeListener()
    ct.log("tina_w8_friends", "发起群聊")
end

-- Network callback
function FriendsCtrl:c_OnReceivePlayerInfo(friendsData)
    for _, v in ipairs(friendsData) do
        table.insert(FriendsCtrl.friendInfo, v)
    end
    self:_showFriends()
end

function FriendsCtrl:c_OnReceiveAddFriendSucess(friend)
    if FriendsPanel.friendsNoContentRoot.activeSelf then
        FriendsPanel.friendsNoContentRoot:SetActive(false)
    end
    table.insert(FriendsCtrl.friendInfo, friend)
    FriendsPanel.friendsNumberText.text = tostring(tonumber(#FriendsCtrl.friendInfo))
    self:_showFriends()
end