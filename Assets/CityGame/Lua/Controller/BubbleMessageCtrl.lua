
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2019/1/16 21:12
---
BubbleMessageCtrl = class('BubbleMessageCtrl',UIPanel)
UIPanel:ResgisterOpen(BubbleMessageCtrl) --How to open

local path="Assets/CityGame/Resources/Atlas/UIBubble/"
local pool={}
local panel ,LuaBehaviour,this,isShow

BubbleMessageCtrl.configPath={
  [1]=  {
            path = path.."bubb-mua.png",
            nameID = 29010003,
  },
  [2]=  {
            path = path.."bubb-rejoice.png",
            nameID = 29010004,
  },
  [3]=  {
            path = path.."bubb-angry.png",
            nameID = 29010005,
  },
  [4]=  {
            path = path.."bubb-rawdeal.png",
            nameID = 29010006,
  },
  [5]=  {
            path = path.."bubb-commodity.png",
            nameID = 29010007,
  },
}

local m_EmojiIconSpriteList = {}

--Add EmojiIcon's sprite list
local function AddEmojiIcon(name,sprite)
    if m_EmojiIconSpriteList == nil or type(m_EmojiIconSpriteList) ~= 'table' then
        m_EmojiIconSpriteList = {}
    end
    if name ~= nil and sprite ~= nil then
        m_EmojiIconSpriteList[name] = sprite
    end
end

local function JudgeHasEmojiIcon(name)
    if m_EmojiIconSpriteList == nil or m_EmojiIconSpriteList[name] == nil  then
        return false
    else
        return true
    end
end

local function GetEmojiIcon(name)
    if m_EmojiIconSpriteList == nil or m_EmojiIconSpriteList[name] == nil  then
        return nil
    else
        return m_EmojiIconSpriteList[name]
    end
end

local SpriteType = nil
local function LoadEmojiIcon(name,iIcon)
    if SpriteType == nil then
        SpriteType = ct.getType(UnityEngine.Sprite)
    end
    panelMgr:LoadPrefab_A(name, SpriteType, iIcon, function(Icon, obj )
        if Icon == nil then
            return
        end
        if obj ~= nil  then
            local texture = ct.InstantiatePrefab(obj)
            AddEmojiIcon(name,texture)
            if Icon then
                Icon.sprite = texture
            end
        end
    end)
end

--Set up Sprite of ICon
function BubbleMessageCtrl.SetEmojiIconSpite(name , tempImage)
    if JudgeHasEmojiIcon() == true then
        tempImage.sprite = GetEmojiIcon(name)
    else
        LoadEmojiIcon(name , tempImage)
    end
end



---==========================================================================================Private function============================================================================================
--Temporary object pool is the practice
local  function InsAndObjectPool(config,class,prefabPath,parent,this)
    if not pool[class] then
        pool[class]={}
    end
    --Object pool to create objects
    local tempList={}
    for i, value in ipairs(config) do
        local ins =pool[class][1]
        if ins then  --There are examples
            value.id = i
            ins:updateData(value)
            ins.prefab:SetActive(true)
            table.insert(tempList,ins)
            table.remove(pool[class],1)
        else--No instance
            local prefab=creatGoods(prefabPath,parent)
            value.id = i
            local ins=class:new(prefab,LuaBehaviour,value,this)
            table.insert(tempList,ins)
        end
    end
    --Hidden instances are hidden
    if #pool[class]>0 then
        for key, ins in ipairs(pool[class]) do
            ins.prefab:SetActive(false)
            table.insert(tempList,ins)
            pool[class][key]=nil
        end
    end
    --All instances return object pool
    for i, ins in ipairs(tempList) do
        table.insert(pool[class],ins)
    end
end

---==========================================================================================Frame function============================================================================================
function  BubbleMessageCtrl:bundleName()
    return "Assets/CityGame/Resources/View/BubbleMessagePanel.prefab"
end

function BubbleMessageCtrl:initialize()
    UIPanel.initialize(self,UIType.PopUp,UIMode.DoNothing,UICollider.None)--You can go back and hide other panels after the UI opens
end

function BubbleMessageCtrl:Refresh()
    BubbleMessagePanel.InitLanguage()
    panel.inputFrame.text = ""
    DataManager.OpenDetailModel(BubbleMessageModel,OpenModelInsID.BubbleMessageCtrl)
    InsAndObjectPool(BubbleMessageCtrl.configPath,SmallBubbleItem,"View/BubbleItems/samllBubble",panel.scrollParent,self)
    if self.m_data.pos ~= nil then
        self.baseData =  DataManager.GetBaseBuildDataByID(TerrainManager.GridIndexTurnBlockID(self.m_data.pos))
    end
    if self.baseData ~= nil and self.baseData.Data ~= nil and self.baseData.Data.bubble ~= nil and  self.baseData.Data.bubble == true then
        panel.hideBtn.transform.localScale = Vector3.one
    else
        panel.hideBtn.transform.localScale = Vector3.zero
    end
end

function  BubbleMessageCtrl:Awake(go)
    self.gameObject = go
    this=self
    panel = BubbleMessagePanel
    LuaBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    LuaBehaviour:AddClick(panel.closeBtn.gameObject,self.c_OnClick_backBtn,self);
    LuaBehaviour:AddClick(panel.confirmBtn.gameObject,self.c_OnClick_confirm,self);
    LuaBehaviour:AddClick(panel.hideBtn.gameObject,self.c_OnClick_hide,self);
    panel.inputFrame.onValueChanged:AddListener(function ()
        --Empty input
        if string.gsub(panel.inputFrame.text, "^%s*(.-)%s*$", "%1") == "" then
            self:ChangeSureBtn(false)
        else
            self:ChangeSureBtn(true)
        end
    end)
    --ct.LimitInputLength(panel.inputFrame , 30)
end

---==========================================================================================Business code===================================================================================================

function BubbleMessageCtrl:begin()

end

function BubbleMessageCtrl:ChangeSureBtn(isShow)
    if isShow ~= nil and isShow == true then
        panel.cantconfirmBtn.localScale = Vector3.zero
    else
        panel.cantconfirmBtn.localScale = Vector3.one
    end
end

---==========================================================================================Click function===================================================================================================
--return
function BubbleMessageCtrl:c_OnClick_backBtn(ins)
    UIPanel.ClosePage()
end

--determine
function BubbleMessageCtrl:c_OnClick_confirm(ins)
    local des = panel.inputFrame.text
    if panel.inputFrame.text == "" then
        des=" "
    end
    Event.Brocast("m_setBuildingInfo",ins.m_data.id,des,ins.bubbleId,true)
    Event.Brocast("c_BuildingTopChangeData", {des = des, emoticon = ins.bubbleId})
    UIPanel.ClosePage()
end

--hide
function BubbleMessageCtrl:c_OnClick_hide(ins)
    local des = " "
    Event.Brocast("m_setBuildingInfo",ins.m_data.id,des,ins.bubbleId,false)
    Event.Brocast("c_BuildingTopChangeData", {des = des, emoticon = ins.bubbleId})
    UIPanel.ClosePage()
end



