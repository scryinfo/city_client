---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cyz_scry.
--- DateTime: 2018/9/19 13:02
--[[
一、分组原则的作用
    1、 测试用例分组，避免无关测试用例占用运行时间
    2、 日志/log也采用相同分组策略，避免无关日志干扰开发
二、使用方法
UnitTest = require ('test/testFrameWork/UnitTest')
示例:
1、 激活分组
    active_TestGroup("abel_w4") --分组激活开关，激活之后，所有使用该分组id的测试和日志都能正常运行
2、 在具体的单元测试定义中注册分组， 如果单元测试的分组没有被激活，那么该单元测试是不会执行到的
    UnitTest("abel_w5", "test_pb11111",  function ()
        log("abel_w5","[test_pb11111]  测试完毕")
    end)
3、 在非单元测试的代码中使用测试分组
    在普通的代码中使用测试分组只有一种情况，那就是日志分组，避免无关日志的干扰
三、 说明：
	1、 测试用例的定义实际调用的是这个方法：
		local UnitTest = function(unitGroupId,funcName,f)
		参数中的 unitGroupId 就是测试分组的Id
	2、 方法参数说明
		1、 unitGroupId 测试组Id
			1、 命名格式： 英文名_工作周_额外信息，  比如： allen_w6_temp
			2、 作用： 测试分组的唯一ID，一个分组ID可以被多个测试用例共享，该ID的分组通过 active_TestGroup 激活之后，
				所用共享该ID的测试用例都会被执行
		2、 funcName 测试用例的方法名字
		3、 func 测试用例的方法实现
]]--
local function UnitTest(unitGroupId, funcName, func)
    local plgid = get_TestGroupId(unitGroupId)
    if plgid == nil  then
        return {}
    end
    addToTestGropu(funcName,unitGroupId)
    _G[funcName] = func
end

return UnitTest