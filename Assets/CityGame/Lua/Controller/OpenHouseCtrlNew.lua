---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/10/4 9:53
---住宅开业
OpenHouseCtrlNew = class('OpenHouseCtrlNew',UIPanel)
UIPanel:ResgisterOpen(OpenHouseCtrlNew)

function OpenHouseCtrlNew:initialize()
    UIPanel.initialize(self, UIType.PopUp, UIMode.DoNothing, UICollider.Normal)
end

function OpenHouseCtrlNew:bundleName()
    return "Assets/CityGame/Resources/View/OpenHousePanel.prefab"
end

function OpenHouseCtrlNew:OnCreate(obj )
    UIPanel.OnCreate(self, obj)
end

function OpenHouseCtrlNew:Awake(go)
    self.gameObject = go
    self:_getComponent(go)

    self.luaBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    self.luaBehaviour:AddClick(self.closeBtn, self._onClickCloseBtn, self)
    self.luaBehaviour:AddClick(self.okBtn, self._onClickConfirm, self)
end

function OpenHouseCtrlNew:Refresh()
    DataManager.ModelRegisterNetMsg(nil, "gscode.OpCode", "queryIndustryWages", "gs.QueryIndustryWages", self._getStandardWage, self)

    self:_language()
    self:_initData()
end
--
function OpenHouseCtrlNew:Hide()
    UIPanel.Hide(self)
    DataManager.ModelNoneInsIdRemoveNetMsg("gscode.OpCode", "queryIndustryWages", self)
end
--
function OpenHouseCtrlNew:_getComponent(go)
    local transform = go.transform
    self.closeBtn = transform:Find("root/closeBtn").gameObject
    self.okBtn = transform:Find("root/okBtn").gameObject
    self.standardWageText = transform:Find("root/salary/wage/standardWageText"):GetComponent("Text")
    self.staffNumText = transform:Find("root/salary/staffNum/staffNumText"):GetComponent("Text")
    self.totalText = transform:Find("root/salary/total/totalText"):GetComponent("Text")
    self.rentInput = transform:Find("root/rent/rentInput"):GetComponent("InputField")

    self.titleText01 = transform:Find("root/titleText01"):GetComponent("Text")
    self.standardWageText02 = transform:Find("root/salary/wage/Text"):GetComponent("Text")
    self.standardWageText03 = transform:Find("root/salary/wage/Text02"):GetComponent("Text")
    self.staffNumText04 = transform:Find("root/salary/staffNum/Text"):GetComponent("Text")
    self.totalText05 = transform:Find("root/salary/total/Text"):GetComponent("Text")
    self.rentInputText06 = transform:Find("root/rent/rentInput/Placeholder"):GetComponent("Text")
    self.rentText07 = transform:Find("root/rent/priceBg/Text"):GetComponent("Text")
end
--
function BuildingSetSalaryCtrlNew:_language()
    self.titleText01.text = "SETTING"
    self.standardWageText02.text = "Employee single standard salary:"
    self.standardWageText03.text = "/d"
    self.staffNumText04.text = "number of staff:"
    self.totalText05.text = "-DAILY WAGE-"
    self.rentInputText06.text = "Please Enter"
    self.rentText07.text = "The house can only be opened after the daily rent is set"
end
--
function OpenHouseCtrlNew:_initData()
    self.rentInput.text = ""
    if self.m_data == nil then
        return
    end

    local staffNum = PlayerBuildingBaseData[self.m_data.info.mId].maxWorkerNum
    self.staffNum = staffNum
    self.staffNumText.text = staffNum
    local standardWage = DataManager.GetBuildingStandardWage(self.m_data.info.mId)
    if standardWage == nil then
        DataManager.m_ReqStandardWage(self.m_data.info.mId)
    else
        self.standardWageText.text = string.format("E%s", GetClientPriceString(standardWage))
        local value = self.m_data.info.salary * staffNum * standardWage / 100
        self.totalText.text = "E"..GetClientPriceString(value)
    end
end
--
function OpenHouseCtrlNew:_getStandardWage(data)
    if data.industryWages ~= nil then
        DataManager.SetBuildingStandardWage(data.type, data.industryWages)
        self.standardWageText.text = string.format("E%s", GetClientPriceString(data.industryWages))
        local value = self.m_data.info.salary * self.staffNum * data.industryWages / 100
        self.totalText.text = "E"..GetClientPriceString(value)
    end
end
--
function OpenHouseCtrlNew:_onClickConfirm(ins)
    if ins.rentInput.text == "" then
        return
    end

    if ins.m_data.callBackFunc ~= nil then
        ins.m_data.callBackFunc(100, tonumber(ins.rentInput.text))
    end
    UIPanel.ClosePage()
end
--
function OpenHouseCtrlNew:_onClickCloseBtn(ins)
    UIPanel.ClosePage()
end