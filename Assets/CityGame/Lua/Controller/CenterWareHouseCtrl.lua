---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2018/10/25 11:11
---Central warehouse
--Sort type
CenterWareHouseSortItemType = {
    Name = 1,      --name
    Quantity = 2,  --Quantity
    Level = 3,     --level
    Score = 4      --score
}
local isShowList;
local switchIsShow;
local isSelect;
local itemId = {}
local centerWareHousetBehaviour
local listTrue = Vector3.New(0,0,180)
local listFalse = Vector3.New(0,0,0)

local class = require 'Framework/class'
CenterWareHouseCtrl = class('CenterWareHouseCtrl',UIPanel)
UIPanel:ResgisterOpen(CenterWareHouseCtrl) --How to open the registration

function  CenterWareHouseCtrl:bundleName()
    return "Assets/CityGame/Resources/View/CenterWareHousePanel.prefab"
end

function CenterWareHouseCtrl:initialize()
    UIPanel.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None)--You can go back and hide other panels after the UI opens
    --UIPanel.initialize(self,UIType.Normal,UIMode.NeedBack,UICollider.None)--Can go back, after the UI is opened, other UI is not hidden
end

function CenterWareHouseCtrl:OnCreate(obj)
    UIPanel.OnCreate(self,obj)

end

function CenterWareHouseCtrl:Awake()
    centerWareHousetBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    isShowList = false;
    switchIsShow = false;

    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.backBtn,self.c_OnBackBtn,self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.transportBtn,self.c_TransportBtn,self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.transportCloseBtn,self.c_transportCloseBtn,self)
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.transportConfirmBtn,self.c_transportConfirmBtn,self)
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.transportopenBtn,self.c_transportopenBtn,self)

    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.arrowBtn.gameObject,self.OnClick_OnSorting, self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.nameBtn,self.OnClick_OnName, self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.quantityBtn,self.OnClick_OnNumber, self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.levelBtn,self.OnClick_OnlevelBtn, self);
    centerWareHousetBehaviour:AddClick(CenterWareHousePanel.scoreBtn,self.OnClick_OnscoreBtn, self);

    CenterWareHousePanel.tipText.text = 0
    isSelect = true;
    self. WareHouseGoodsMgr = WareHouseGoodsMgr:new()
    self.insId = OpenModelInsID.CenterWareHouseCtrl
    self.totalCapacity = DataManager.GetBagCapacity();--Total storage capacity
end

function CenterWareHouseCtrl:Active()
    UIPanel.Active(self)
    Event.AddListener("c_GsExtendBag",self.c_GsExtendBag,self);
    Event.AddListener("c_OnDelete",self.c_OnDelete,self);
    Event.AddListener("c_OnBGItem",self.c_OnBGItem,self);
    Event.AddListener("c_OnTransportBG",self.c_OnTransportBG,self);
    Event.AddListener("c_OnxBtn",self.c_OnxBtn,self);
    Event.AddListener("c_transport",self.c_transport,self);
    Event.AddListener("c_DelItem",self.c_DelItem,self);

    CenterWareHousePanel.tip.text = GetLanguage(21020001)
    CenterWareHousePanel.warehouseNameText.text = GetLanguage(21020002)

    LoadSprite(GetSprite("CenterWareHouse"), CenterWareHousePanel.centrel, false)
end

function CenterWareHouseCtrl:Hide()
    UIPanel.Hide(self)
    Event.RemoveListener("c_GsExtendBag",self.c_GsExtendBag,self);
    Event.RemoveListener("c_OnDelete",self.c_OnDelete,self);
    Event.RemoveListener("c_OnBGItem",self.c_OnBGItem,self);
    Event.RemoveListener("c_OnTransportBG",self.c_OnTransportBG,self);
    Event.RemoveListener("c_OnxBtn",self.c_OnxBtn,self);
    Event.RemoveListener("c_transport",self.c_transport,self);
    Event.RemoveListener("c_DelItem",self.c_DelItem,self);

end

--initialization
function CenterWareHouseCtrl:_initData()
    local numTab = {}
    numTab["num1"] = self.number
    numTab["num2"] = self.totalCapacity
    numTab["col1"] = "cyan"
    numTab["col2"] = "white"
    CenterWareHousePanel.number:GetComponent("Text").text = getColorString(numTab);
    CenterWareHousePanel.slider:GetComponent("Slider").maxValue = self.totalCapacity;
    CenterWareHousePanel.slider:GetComponent("Slider").value = self.number;
end

--Click to delete item
function CenterWareHouseCtrl:c_OnDelete(go)
    local buildingId = DataManager.GetBagId()
    local data = {}
    data.titleInfo = GetLanguage(35030001)
    data.contentInfo = GetLanguage(35030004)
    data.tipInfo = GetLanguage(35030002)
    data.btnCallBack = function ()
        local dataId = {}
        dataId.buildingId = buildingId
        dataId.id = go.itemId
        dataId.producerId = go.producerId
        dataId.qty = go.qty
        DataManager.DetailModelRpcNoRet(self.insId , 'm_DeleteItem',dataId)
       -- go.manager:_deleteGoods(go.id)
    end
    ct.OpenCtrl('ErrorBtnDialogPageCtrl',data)
end

--Delete item callback
function CenterWareHouseCtrl:c_DelItem(itemId)
    local n = 0
    local id
    for i, v in pairs(WareHouseGoodsMgr.items) do
        if v.itemId == itemId then
            id = v.id
        else
            n = n + v.n
        end
    end
    --Delete item
    WareHouseGoodsMgr:_deleteGoods(id)
    self.number = n
    local numTab = {}
    numTab["num1"] = self.number
    numTab["num2"] = self.totalCapacity
    numTab["col1"] = "cyan"
    numTab["col2"] = "white"
    CenterWareHousePanel.number:GetComponent("Text").text = getColorString(numTab);
    Event.Brocast("SmallPop",GetLanguage(35030003),300)
end

--Click BG
function CenterWareHouseCtrl:c_OnBGItem()
    local data = {}
    data.madeBy = "来自Rodger公司"
    data.playerName = " rodger"
    ct.OpenCtrl('MessageTooltipCtrl',data)
end

--Click BG after transportation
function CenterWareHouseCtrl:c_OnTransportBG(go)
    if itemId[go.id] == nil then
        itemId[go.id] = go.id
        local goodsDataInfo = {};
        goodsDataInfo.name =  go.goodsDataInfo.name;
        goodsDataInfo.number = go.goodsDataInfo.number;
        goodsDataInfo.id = go.id;
        goodsDataInfo.itemId = go.itemId
        goodsDataInfo.producerId = go.producerId
        goodsDataInfo.qty = go.qty
        go.manager:_creatTransportGoods(goodsDataInfo);
        go.select_while:SetActive(false);
    else
        go.manager:_deleteTspGoods(go.id);
        itemId[go.id] = nil
    end
end

--Click to delete the transport item
function CenterWareHouseCtrl:c_OnxBtn(go)
    go.manager:_deleteTspGoods(go.id);
    itemId[go.id] = nil
    local n = 0
    for i, v in pairs(self. WareHouseGoodsMgr.allTspItem) do
        n = n + tonumber(v.inputText.text)
    end
    CenterWareHousePanel.tipText.text = n
end

--Back button
function CenterWareHouseCtrl:c_OnBackBtn()
    PlayMusEff(1002)
    --Clear content
    if not isSelect then
        CenterWareHouseCtrl:c_transportCloseBtn()
    end
    WareHouseGoodsMgr:ClearAllItem()
    CenterWareHousePanel.nameText.text = ""
    UIPanel.ClosePage();
end

function CenterWareHouseCtrl:Refresh()

    self.number = 0;--Number of goods
    local inHand = DataManager.GetBagInfo()
    if inHand ~= nil then
        for i, v in pairs(inHand) do
            self.number =  self.number + tonumber(v.n)
        end
    end
    self.money = 1000;--Amount required for expansion
    if WareHouseGoodsMgr.items == nil then
        WareHouseGoodsMgr:_creatItemGoods(centerWareHousetBehaviour,isSelect);
    end
    self:_initData();
    self:initInsData()
    --CenterWareHousePanel.tipText.text = 0
end

function CenterWareHouseCtrl:initInsData()
    DataManager.OpenDetailModel(CenterWareHouseModel,self.insId )
end

--Expansion button
function CenterWareHouseCtrl:c_OnAddBtn(go)
    PlayMusEff(1002)
    local money = DataManager.GetMoney()
    if money<go.money then
        Event.Brocast("SmallPop","扩容金额不足",300)
    else
        DataManager.DetailModelRpcNoRet(go.insId , 'm_ExtendBag')
    end
end

function CenterWareHouseCtrl:c_GsExtendBag()
    self.totalCapacity = self.totalCapacity+100
    self.money = self.money*2;
    self:_initData();
end

--Transport button
function CenterWareHouseCtrl:c_TransportBtn(go)
    PlayMusEff(1002)
    isSelect = false;
    WareHouseGoodsMgr:_setActiva(isSelect)
    CenterWareHouseCtrl:OnClick_transportBtn(not switchIsShow);
end

--Select warehouse button
function CenterWareHouseCtrl:c_transportopenBtn()
    PlayMusEff(1002)
    local data = {}
    data.pos = {}
    data.pos.x = BagPosInfo[1].bagX
    data.pos.y =BagPosInfo[1].bagY
    data.nameText = CenterWareHousePanel.nameText
    data.buildingId = DataManager.GetBagId()
    ct.OpenCtrl('ChooseWarehouseCtrl',data);
end

--Start shipping button
function CenterWareHouseCtrl:c_transportConfirmBtn(go)
    PlayMusEff(1002)
    local data = {}
    data.currentLocationName = GetLanguage(21010001)--starting address
    data.targetLocationName =ChooseWarehouseCtrl:GetName()--target address
    local pos ={}
    pos.x = BagPosInfo[1].bagX
    pos.y = BagPosInfo[1].bagY
    data.distance = ChooseWarehouseCtrl:GetDistance(pos)--distance
    local n = 0
    for i, v in pairs(WareHouseGoodsMgr.allTspItem) do
        n = n + v.inputText.text
    end
    data.number = n--Quantity
    data.price = ChooseWarehouseCtrl:GetPrice() --Transport unit price
    data.freight = GetClientPriceString(n*data.price)--Freight
    data.total =  GetClientPriceString(n*data.price)--Total freight
    data.capacity = ChooseWarehouseCtrl:GetCapacity()   --Selected warehouse capacity
    if data.capacity < tonumber(CenterWareHousePanel.tipText.text) then
        Event.Brocast("SmallPop",GetLanguage(26040012),300)
        return
    end
    data.btnClick = function()
        local money = DataManager.GetMoney()
        if money < n*data.price then
            Event.Brocast("SmallPop",GetLanguage(4301006),300)
            return
        end
        for i, v in pairs(WareHouseGoodsMgr.allTspItem) do
            if v.inputText.text == "0" then
                Event.Brocast("SmallPop",GetLanguage(27020004),300)
                return
            end
        end
        for i, v in pairs(WareHouseGoodsMgr.allTspItem) do
                local bagId = DataManager.GetBagId()
                Event.Brocast("c_Transport", bagId,v.itemId,v.inputText.text,v.goodsDataInfo.producerId,v.goodsDataInfo.qty)
        end
        CenterWareHouseCtrl:clearAllData()
    end
    ct.OpenCtrl('TransportBoxCtrl',data)
end

--Start shipping callback
function CenterWareHouseCtrl:c_transport(msg)
    local table = self.WareHouseGoodsMgr.items
    self.number = self.number - msg.item.n;
    self:_initData()
    for i,v in pairs(table) do
        if v.itemId == msg.item.key.id then
            if v.goodsDataInfo.number == msg.item.n then
                WareHouseGoodsMgr:_deleteGoods(i)
            else
                v.numberText.text = v.goodsDataInfo.number - msg.item.n;
                v.goodsDataInfo.number = v.numberText.text;
            end
        end
    end
    --local data = {}
    --data.titleInfo = "prompt"
    --data.contentInfo = "Goods start shipping"
    --data.tipInfo = "You can view the details on the transportation line"
    --ct.OpenCtrl('BtnDialogPageCtrl',data)
    CenterWareHousePanel.transportConfirm:SetActive(true);
    Event.Brocast("SmallPop",GetLanguage(21040003),300)
end

--Close shipping button
function CenterWareHouseCtrl:c_transportCloseBtn()
    PlayMusEff(1002)
    --CenterWareHousePanel.addItem:SetActive(true);
    isSelect = true;
    WareHouseGoodsMgr:_setActiva(isSelect)
    CenterWareHouseCtrl:OnClick_transportBtn(not switchIsShow);
    CenterWareHouseCtrl:clearAllData()
end

function CenterWareHouseCtrl.OnClick_OnSorting(go)
    PlayMusEff(1002)
    CenterWareHouseCtrl.OnClick_OpenList(not isShowList);
end

--Sort by name
function CenterWareHouseCtrl.OnClick_OnName(go)
    PlayMusEff(1002)
    CenterWareHousePanel.nowText.text = "By name";
    CenterWareHouseCtrl.OnClick_OpenList(not isShowList);
    local type = CenterWareHouseSortItemType.Name
    CenterWareHouseCtrl:_getSortItems(type)
end
--Sort by quantity
function CenterWareHouseCtrl.OnClick_OnNumber(go)
    PlayMusEff(1002)
    CenterWareHousePanel.nowText.text = "By quantity";
    CenterWareHouseCtrl.OnClick_OpenList(not isShowList);
    CenterWareHouseCtrl:_getSortItems(CenterWareHouseSortItemType.Quantity)
end
--Sort by level
function CenterWareHouseCtrl.OnClick_OnlevelBtn(go)
    PlayMusEff(1002)
    CenterWareHousePanel.nowText.text = "By level";
    CenterWareHouseCtrl.OnClick_OpenList(not isShowList);
end
--Sort by score
function CenterWareHouseCtrl.OnClick_OnscoreBtn(go)
    PlayMusEff(1002)
    CenterWareHousePanel.nowText.text = "By score";
    CenterWareHouseCtrl.OnClick_OpenList(not isShowList);
end
function CenterWareHouseCtrl.OnClick_OpenList(isShow)
    if isShow then
        --ShelfPanel.list:SetActive(true);
        CenterWareHousePanel.list:DOScale(Vector3.New(1,1,1),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        CenterWareHousePanel.arrowBtn:DORotate(listTrue,0.1):SetEase(DG.Tweening.Ease.OutCubic);
    else
        --ShelfPanel.list:SetActive(false);
        CenterWareHousePanel.list:DOScale(Vector3.New(0,0,0),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        CenterWareHousePanel.arrowBtn:DORotate(listFalse,0.1):SetEase(DG.Tweening.Ease.OutCubic);
    end
    isShowList = isShow;
end

--Open the transport panel
function CenterWareHouseCtrl:OnClick_transportBtn(isShow)
    if isShow then
        CenterWareHousePanel.bg:DOScale(Vector3.New(1,1,1),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        CenterWareHousePanel.transport:SetActive(true);
        CenterWareHousePanel.content.offsetMax = Vector2.New(-770,0);
    else

        CenterWareHousePanel.bg:DOScale(Vector3.New(0,1,1),0.1):SetEase(DG.Tweening.Ease.OutCubic);
        CenterWareHousePanel.transport:SetActive(false);
        CenterWareHousePanel.content.offsetMax = Vector2.New(0,0);
    end
    switchIsShow = isShow;
end

--Sort
function CenterWareHouseCtrl:_getSortItems(type)
    if WareHouseGoodsMgr.items == nil then
        return
    end
    if type == CenterWareHouseSortItemType.Name then
        table.sort(WareHouseGoodsMgr.items, function (m, n) return m.name < n.name end )
        for i, v in ipairs(WareHouseGoodsMgr.items) do
            v.prefab.gameObject.transform:SetParent(CenterWareHousePanel.scrollView.transform);
            v.prefab.gameObject.transform:SetParent(CenterWareHousePanel.content.transform);
            v.id = i
            WareHouseGoodsItem:RefreshData(v.goodsDataInfo,i)
        end
    end
    if type == CenterWareHouseSortItemType.Quantity then
        table.sort(WareHouseGoodsMgr.items, function (m, n) return m.n < n.n end )
        for i, v in ipairs(WareHouseGoodsMgr.items) do
            v.prefab.gameObject.transform:SetParent(CenterWareHousePanel.scrollView.transform);
            v.prefab.gameObject.transform:SetParent(CenterWareHousePanel.content.transform);
            v.id = i
            WareHouseGoodsItem:RefreshData(v.goodsDataInfo,i)
        end
    end

end

--Clear the contents of the transport box
function CenterWareHouseCtrl:clearAllData()
    CenterWareHousePanel.tipText.text = 0
    WareHouseGoodsMgr:ClearAll()
    itemId = {}
    WareHouseGoodsMgr:EnabledAll()
    CenterWareHousePanel.transportConfirm:SetActive(true);
end