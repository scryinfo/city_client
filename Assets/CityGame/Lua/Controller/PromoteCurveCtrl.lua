---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2019/4/10 16:08
---推广公司曲线图
PromoteCurveCtrl = class('PromoteCurveCtrl',UIPanel)
UIPanel:ResgisterOpen(PromoteCurveCtrl)

local curveBehaviour

function PromoteCurveCtrl:bundleName()
    return "Assets/CityGame/Resources/View/PromoteCurvePanel.prefab"
end

function PromoteCurveCtrl:initialize()
    --UIPanel.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None)--可以回退，UI打开后，隐藏其它面板
    UIPanel.initialize(self,UIType.PopUp,UIMode.NeedBack,UICollider.None)--可以回退，UI打开后，不隐藏其它的UI
end
function PromoteCurveCtrl:Awake()
    curveBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    curveBehaviour:AddClick(PromoteCurvePanel.back,self.OnBack,self);
    self:initData()
end

function PromoteCurveCtrl:Active()
    UIPanel.Active(self)
end

function PromoteCurveCtrl:Refresh()
    --DataManager.DetailModelRpcNoRet(self.m_data.insId, 'm_PromoAbilityHistory',self.m_data.insId)
end

function PromoteCurveCtrl:Hide()
    UIPanel.Hide(self)

end

function PromoteCurveCtrl:OnCreate(obj)
    UIPanel.OnCreate(self,obj)
end

function PromoteCurveCtrl:initData()

end

--返回
function PromoteCurveCtrl:OnBack()
    UIPanel.ClosePage()
end

function PromoteCurveCtrl:m_PromoteHistoryCurve(data)
    local currentTime = TimeSynchronized.GetTheCurrentTime()    --服务器当前时间(秒)
    local ts = getFormatUnixTime(currentTime)
    local second = tonumber(ts.second)
    local minute = tonumber(ts.minute)
    if second ~= 0 then
        currentTime = currentTime -second
    end
    if minute ~= 0 then
        currentTime = currentTime - minute * 60
    end
    local oneDay = currentTime - 24*3600
    local updataTime = oneDay
    local time = {}
    local boundaryLine = {}
    local line = {}
    for i = 1, 24 do
        if tonumber(getFormatUnixTime(updataTime).hour) == 0 then
            time[1] = getFormatUnixTime(updataTime).minute .. "/" .. getFormatUnixTime(updataTime).day
            table.insert(boundaryLine,(updataTime - oneDay + 3600) / 3600 * 120)
        end
        line[i] = {}
        line[i].value = 0
        line[i].ts = updataTime
        if data then
            for i, v in pairs(data) do
                if line[i].ts == v.ts then
                    line[i].value = v.value
                end
            end 
        end
        line[i].ts = (updataTime - oneDay + 3600) / 3600 * 120
    end
    table.insert(time,1,"0")
    table.insert(boundaryLine,1,0)
    table.insert(line,1,Vector2.New(0,0))
    local max = 0
    for i, v in ipairs(line) do
        if v.y > max then
            max = v.y
        end
    end
    local scale = SetYScale(max,5,PromoteCurvePanel.yScale)
    local lineVet = {}
    for i, v in ipairs(line) do
        if scale == 0 then
            lineVet[i] = v
        else
            lineVet[i] = Vector2.New(v.x,v.y / scale * 67)
        end
    end
    self.slide:SetXScaleValue(time,120)
    self.graph:BoundaryLine(boundaryLine)

    self.graph:DrawLine(lineVet,Color.New(41 / 255, 61 / 255, 108 / 255, 255 / 255))
    self.slide:SetCoordinate(lineVet,line,Color.New(41 / 255, 61 / 255, 108 / 255, 255 / 255))
end

