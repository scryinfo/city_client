---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2019/2/16 16:31
---

GuildListCtrl = class("GuildListCtrl", UIPanel)
UIPanel:ResgisterOpen(GuildListCtrl)

function GuildListCtrl:initialize()
    UIPanel.initialize(self, UIType.Normal, UIMode.HideOther, UICollider.None)
end

function GuildListCtrl:bundleName()
    return "Assets/CityGame/Resources/View/GuildListPanel.prefab"
end

function GuildListCtrl:OnCreate(go)
    ct.log("tina_w30_guild", "GuildListCtrl:OnCreate")
    UIPanel.OnCreate(self, go)

    GuildListCtrl.luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")
    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.backBtn, function ()
        PlayMusEff(1002)
        UIPanel.ClosePage()
    end)

    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.memberNumberBtn, self.OnMemberNumber, self)
    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.createBtn, self.OnClickCreate, self)
    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.createBackBtn, self.OnClickCreateBack, self)
    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.sureBtn, self.OnSure, self)
    GuildListCtrl.luaBehaviour:AddClick(GuildListPanel.timeBtn, self.OnTime, self)

    --GuildListPanel.listToggle.onValueChanged:AddListener(function (isOn)
    --    ct.log("tina_w30_guild", "值改变了" .. tostring(isOn))
    --end)

end

function GuildListCtrl:Awake(go)
    GuildListCtrl.static.guildTab = {}
    ct.log("tina_w30_guild", "GuildListCtrl:Awake")
    self.guildSource = UnityEngine.UI.LoopScrollDataSource.New()
    self.guildSource.mProvideData = GuildListCtrl.static.GuildProvideData
    self.guildSource.mClearData = GuildListCtrl.static.GuildClearData
end

function GuildListCtrl:Active()
    ct.log("tina_w30_guild", "GuildListCtrl:Active")
    UIPanel.Active(self)
    self:_addListener()
    GuildListPanel.createRoot.localScale =Vector3.zero

    -- Multilingual adaptation
    GuildListPanel.titleText.text = GetLanguage(12010001)
    GuildListPanel.guildNameTitleText.text = GetLanguage(12010004)
    GuildListPanel.jobTitleText.text = GetLanguage(12010005)
    GuildListPanel.introductionTitleText.text = GetLanguage(12010008)
    GuildListPanel.memberNumberBtnText.text = GetLanguage(12010006)
    GuildListPanel.timeBtnText.text = GetLanguage(12010007)
    GuildListPanel.createBtnText.text = GetLanguage(12010003)
    GuildListPanel.createTitleText.text = GetLanguage(12050001)
    GuildListPanel.nameInputFieldText.text = GetLanguage(12050002)
    GuildListPanel.describeInputFieldText.text = GetLanguage(12010008)
    GuildListPanel.nullImageText.text = GetLanguage(12010015)
end

-- Listen to the model layer network callback
function GuildListCtrl:_addListener()
    Event.AddListener("c_OnSocietyList", self.c_OnSocietyList, self)
    Event.AddListener("c_OnSocietyInfo", self.c_OnSocietyInfo, self)
    Event.AddListener("c_JoinHandle", self.c_JoinHandle, self)
    Event.AddListener("c_OnJoinSociety", self.c_OnJoinSociety, self)
end

--Cancel the model layer network callback
function GuildListCtrl:_removeListener()
    Event.RemoveListener("c_OnSocietyList", self.c_OnSocietyList, self)
    Event.RemoveListener("c_OnSocietyInfo", self.c_OnSocietyInfo, self)
    Event.RemoveListener("c_JoinHandle", self.c_JoinHandle, self)
    Event.RemoveListener("c_OnJoinSociety", self.c_OnJoinSociety, self)
end

function GuildListCtrl:Refresh()
    ct.log("tina_w30_guild", "GuildListCtrl:Refresh")
    self:initInsData()
    self:_showView()
end

-- Open model
function GuildListCtrl:initInsData()
    DataManager.OpenDetailModel(GuildListModel, OpenModelInsID.GuildListCtrl)
    DataManager.DetailModelRpcNoRet(OpenModelInsID.GuildListCtrl, 'm_GetSocietyList')
end

function GuildListCtrl:Hide()
    GuildListCtrl.societyList = nil
    GuildListPanel.guildListScroll:ActiveLoopScroll(self.guildSource, 0, "View/Guild/GuildItem")
    GuildListCtrl.rankId = nil
    self:_removeListener()
    UIPanel.Hide(self)
end

-- According to whether you have a guild, determine whether the entered guild list interface needs to display the button to create a guild
function GuildListCtrl:_showView()
    local societyId = DataManager.GetGuildID()
    if societyId then
        GuildListPanel.createBtn:SetActive(false)
        GuildListPanel.guildListView.offsetMin = Vector2.New(0,0)
    else
        GuildListPanel.createBtn:SetActive(true)
        GuildListPanel.guildListView.offsetMin = Vector2.New(0,100)
    end
end

-- Sort by the number of guilds
function GuildListCtrl:OnMemberNumber(go)
    PlayMusEff(1002)
    if GuildListCtrl.rankId == 1 then
        GuildListCtrl.rankId = 2
        GuildListPanel.memberNumberBtnOpen.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnClose.localScale =Vector3.one
        GuildListPanel.memberNumberBtnDefault1.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnDefault2.localScale =Vector3.zero

        GuildListPanel.timeBtnOpen.localScale =Vector3.zero
        GuildListPanel.timeBtnClose.localScale =Vector3.zero
        GuildListPanel.timeBtnDefault1.localScale =Vector3.one
        GuildListPanel.timeBtnDefault2.localScale =Vector3.one
    else
        GuildListCtrl.rankId = 1
        GuildListPanel.memberNumberBtnOpen.localScale =Vector3.one
        GuildListPanel.memberNumberBtnClose.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnDefault1.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnDefault2.localScale =Vector3.zero

        GuildListPanel.timeBtnOpen.localScale =Vector3.zero
        GuildListPanel.timeBtnClose.localScale =Vector3.zero
        GuildListPanel.timeBtnDefault1.localScale =Vector3.one
        GuildListPanel.timeBtnDefault2.localScale =Vector3.one
    end
    go:_sort(GuildListCtrl.rankId)
end

-- Sort by the time the guild was established
function GuildListCtrl:OnTime(go)
    PlayMusEff(1002)
    if GuildListCtrl.rankId == 3 then
        GuildListCtrl.rankId = 4
        GuildListPanel.memberNumberBtnOpen.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnClose.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnDefault1.localScale =Vector3.one
        GuildListPanel.memberNumberBtnDefault2.localScale =Vector3.one

        GuildListPanel.timeBtnOpen.localScale =Vector3.zero
        GuildListPanel.timeBtnClose.localScale =Vector3.one
        GuildListPanel.timeBtnDefault1.localScale =Vector3.zero
        GuildListPanel.timeBtnDefault2.localScale =Vector3.zero
    else
        GuildListCtrl.rankId = 3
        GuildListPanel.memberNumberBtnOpen.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnClose.localScale =Vector3.zero
        GuildListPanel.memberNumberBtnDefault1.localScale =Vector3.one
        GuildListPanel.memberNumberBtnDefault2.localScale =Vector3.one

        GuildListPanel.timeBtnOpen.localScale =Vector3.one
        GuildListPanel.timeBtnClose.localScale =Vector3.zero
        GuildListPanel.timeBtnDefault1.localScale =Vector3.zero
        GuildListPanel.timeBtnDefault2.localScale =Vector3.zero
    end
    go:_sort(GuildListCtrl.rankId)
end

-- Sort data
function GuildListCtrl:_sort(rankId)
    if GuildListCtrl.societyList == nil then
        return
    end

    if rankId == 1 then
        table.sort(GuildListCtrl.societyList, function (m, n) return m.allCount < n.allCount end)
    elseif rankId == 2 then
        table.sort(GuildListCtrl.societyList, function (m, n) return m.allCount > n.allCount end)
    elseif rankId == 3 then
        table.sort(GuildListCtrl.societyList, function (m, n) return m.createTs < n.createTs end)
    elseif rankId == 4 then
        table.sort(GuildListCtrl.societyList, function (m, n) return m.createTs > n.createTs end)
    end
    GuildListPanel.guildListScroll:ActiveLoopScroll(self.guildSource, #GuildListCtrl.societyList, "View/Guild/GuildItem")
    GuildListPanel.guildListScroll:RefillCells()
end

-- Display the create guild interface
function GuildListCtrl:OnClickCreate(go)
    GuildListPanel.createRoot.localScale =Vector3.one
end

-- Return to the guild list interface and close the create guild interface
function GuildListCtrl:OnClickCreateBack(go)
    GuildListPanel.createRoot.localScale =Vector3.zero
    GuildListPanel.guildNameInput.text = ""
    GuildListPanel.describeInput.text = ""
end

-- Click the Create Guild button
function GuildListCtrl:OnSure(go)
    local guildNameInputText = GuildListPanel.guildNameInput.text
    local describeInputText = GuildListPanel.describeInput.text
    if string.len(guildNameInputText) == 0 or guildNameInputText == "" then
        Event.Brocast("SmallPop", GetLanguage(12060022),80)
        return
    elseif string.len(describeInputText) == 0 or describeInputText == "" then
        Event.Brocast("SmallPop", GetLanguage(12060024),80)
        return
    --elseif string.len(guildNameInputText) > 21 then
    --    Event.Brocast("SmallPop",GetLanguage(12060023),80)
    --    return
    --elseif string.len(describeInputText) > 30 then
    --    Event.Brocast("SmallPop",GetLanguage(12060025),80)
    --    return
    end

    GuildListPanel.createRoot.localScale =Vector3.zero
    GuildListPanel.guildNameInput.text = ""
    GuildListPanel.describeInput.text = ""

    --Open box
    local showData = {}
    showData.titleInfo = GetLanguage(12050005)
    showData.contentInfo = GetLanguage(12050006)
    showData.tipInfo = ""
    showData.btnCallBack = function()
        DataManager.DetailModelRpcNoRet(OpenModelInsID.GuildListCtrl, 'm_CreateSociety', {name = guildNameInputText, introduction = describeInputText})
    end
    ct.OpenCtrl("BtnDialogPageCtrl", showData)
end

-- Sliding multiplexing
GuildListCtrl.static.GuildProvideData = function(transform, idx)
    idx = idx + 1
    local transformId = transform:GetInstanceID()
    if GuildListCtrl.static.guildTab[transformId] then
        GuildListCtrl.static.guildTab[transformId]:CloseAvatar()
    end
    GuildListCtrl.static.guildTab[transformId] = GuildItem:new(transform, GuildListCtrl.societyList[idx])
end

GuildListCtrl.static.GuildClearData = function(transform)

end

-- Network callback
function GuildListCtrl:c_OnSocietyList(societyList)
    if societyList.listInfo then
        GuildListPanel.nullImage.localScale = Vector3.zero
        GuildListPanel.listTitleRoot.localScale = Vector3.one
        GuildListCtrl.societyList = societyList.listInfo

        if GuildListCtrl.rankId then
            self:_sort(GuildListCtrl.rankId)
        else
            GuildListPanel.memberNumberBtnOpen.localScale =Vector3.zero
            GuildListPanel.memberNumberBtnClose.localScale =Vector3.zero
            GuildListPanel.memberNumberBtnDefault1.localScale =Vector3.one
            GuildListPanel.memberNumberBtnDefault2.localScale =Vector3.one

            GuildListPanel.timeBtnOpen.localScale =Vector3.zero
            GuildListPanel.timeBtnClose.localScale =Vector3.zero
            GuildListPanel.timeBtnDefault1.localScale =Vector3.one
            GuildListPanel.timeBtnDefault2.localScale =Vector3.one
            GuildListPanel.guildListScroll:ActiveLoopScroll(self.guildSource, #GuildListCtrl.societyList, "View/Guild/GuildItem")
        end
    else
        GuildListPanel.nullImage.localScale = Vector3.one
        GuildListPanel.listTitleRoot.localScale = Vector3.zero
    end
end

-- Create a guild successfully, close the guild list interface, open the guild interface
function GuildListCtrl:c_OnSocietyInfo(societyInfo)
    GuildListPanel.guildNameInput.text = ""
    GuildListPanel.describeInput.text = ""
    Event.Brocast("SmallPop","创建公会成功！",80)
    DataManager.SetGuildID(societyInfo.id)
    DataManager.SetGuildInfo(societyInfo)
    UIPanel.ClosePage()
    ct.OpenCtrl("GuildOwnCtrl")
end

-- Application to join the guild passed
function GuildListCtrl:c_JoinHandle(societyInfo)
    UIPanel.ClosePage()
    ct.OpenCtrl("GuildOwnCtrl")

    --Open box
    local showData = {}
    showData.titleInfo = "提示"
    showData.contentInfo = GetLanguage( 12010013, societyInfo.name)  -- "Apply for Business Alliance Pass"
    showData.tipInfo = ""
    ct.OpenCtrl("BtnDialogPageCtrl", showData)
end

-- Application to join the guild failed
function GuildListCtrl:c_OnJoinSociety()
    Event.Brocast("SmallPop", "申请失败，该联盟已解散！",80)
    DataManager.DetailModelRpcNoRet(OpenModelInsID.GuildListCtrl, 'm_GetSocietyList')
end