---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2019/5/24 11:32
---

EvaCtrl = class("EvaCtrl", UIPanel)
UIPanel:ResgisterOpen(EvaCtrl)

EvaCtrl.static.PropertyTrueItemPath = "View/Eva/PropertyTrueItem"  -- 可升级属性预制路径
EvaCtrl.static.PropertyFalseItemPath = "View/Eva/PropertyFalseItem"  -- 不可升级属性预制路径
EvaCtrl.static.brandIcon = -- icon显示配置
{
    [13] = "Assets/CityGame/Resources/Atlas/Company/SuperMarket_3x3.png",
    [14] = "Assets/CityGame/Resources/Atlas/Company/HomeHouse_3X3.png",
    [1613] = "Assets/CityGame/Resources/Atlas/Company/SuperMarket_3x3.png",
    [1614] = "Assets/CityGame/Resources/Atlas/Company/HomeHouse_3X3.png",
    [1651] = "Assets/CityGame/Resources/Atlas/Eva/icon-food.png",
    [1652] = "Assets/CityGame/Resources/Atlas/Eva/icon-clothes.png",
    [155] = "Assets/CityGame/Resources/Atlas/Eva/icon-Inventingnewgoods.png",
    [156] = "Assets/CityGame/Resources/Atlas/Eva/icon-eva.png",
}

function EvaCtrl:initialize()
    UIPanel.initialize(self, UIType.Normal, UIMode.HideOther, UICollider.None)
end

function EvaCtrl:bundleName()
    return "Assets/CityGame/Resources/View/EvaPanel.prefab"
end

function EvaCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)
end

function EvaCtrl:Awake()
    local luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")

    luaBehaviour:AddClick(EvaPanel.backBtn, self.OnBack, self)
    luaBehaviour:AddClick(EvaPanel.addBtn, self.OnAdd, self)
    luaBehaviour:AddClick(EvaPanel.closeIntroductionBtn.gameObject, self.OnCloseTips, self)
    luaBehaviour:AddClick(EvaPanel.technologyBtn.gameObject, self.OnTechnology, self)
    luaBehaviour:AddClick(EvaPanel.marketBtn.gameObject, self.OnMarket, self)

    -- Eva节点2
    self.evaOptionTwoSource = UnityEngine.UI.LoopScrollDataSource.New()
    self.evaOptionTwoSource.mProvideData = EvaCtrl.static.evaOptionTwoData
    self.evaOptionTwoSource.mClearData = EvaCtrl.static.evaOptionTwoClearData

    -- Eva节点3
    self.evaOptionThereSource = UnityEngine.UI.LoopScrollDataSource.New()
    self.evaOptionThereSource.mProvideData = EvaCtrl.static.evaOptionThereData
    self.evaOptionThereSource.mClearData = EvaCtrl.static.evaOptionThereClearData

    -- 属性节点
    self.propertySource = UnityEngine.UI.LoopScrollDataSource.New()
    self.propertySource.mProvideData = EvaCtrl.static.propertyData
    self.propertySource.mClearData = EvaCtrl.static.propertyClearData

    -- 保存实例
    EvaCtrl.static.evaCtrl = self
    self.resultTab = {EvaPanel.ResultRootO, EvaPanel.ResultRootTwo, EvaPanel.ResultRootThere}
end

function EvaCtrl:Active()
    UIPanel.Active(self)
    self:_addListener()

    -- 多语言适配
    EvaPanel.titleText.text = GetLanguage(31010043)
    EvaPanel.addBtnText.text = GetLanguage(31010013)
    EvaPanel.technologyTitleText.text = "Technology points:"
    EvaPanel.marketTitleText.text = "Market data:"
end

function EvaCtrl:Refresh()
    self:initInsData()
    self:updateData()
end

function EvaCtrl:Hide()
    self:_removeListener()
    -- Eva选择记录的个数
    self.evaRecordData = nil
    -- eva界面上总的eva数据
    self.allEvaData = nil
    -- eva界面上结构数据
    self.allUIData = nil
    -- 当前点数数据
    self.buildingPoint = nil
    -- 加点的点数数据，用于界面上显示
    self.addData = nil
    -- 加点的eva数据，用于给服务器发加点的消息结构
    self.addEvaData = nil
    -- 加点的eva的等级和当前经验数据，用于界面上显示
    self.addEvaLvData = nil
    UIPanel.Hide(self)
end

function EvaCtrl:Close()
    EvaCtrl.static.evaCtrl = nil
    UIPanel.Close(self)
end

-- 初始化基本数据
function EvaCtrl:updateData()
    -- Eva选择记录的个数
    self.evaRecordData = {}
    -- eva界面上总的eva数据
    self.allEvaData = {}
    -- eva界面上结构数据
    self.allUIData = {}
    -- 当前点数数据
    self.buildingPoint = {}
    -- eva界面上总的加点的点数值
    --self.allEvaAddPoint = {}
    -- 加点的点数数据，用于界面上显示
    self.addData = {}
    -- 加点的eva数据，用于给服务器发加点的消息结构
    self.addEvaData = {}
    -- 加点的eva的等级和当前经验数据，用于界面上显示
    self.addEvaLvData = {}
    -- 刷新加点按钮显示
    self:SetAddBtnState(false)
    -- 刷新提示小窗口显示
    self:_showIntroduction( false )

    -- 生成标题item
    if self.evaTitleItem then
        DataManager.DetailModelRpcNoRet(OpenModelInsID.EvaCtrl, 'm_QueryMyEva', 11)
    else
        -- 生成大标题
        self.evaTitleItem = {}
        for i, v in ipairs(EvaConfig) do
            local go = ct.InstantiatePrefab(EvaPanel.evaTitleItem)
            local rect = go.transform:GetComponent("RectTransform")
            go.transform:SetParent(EvaPanel.optionOneScroll)
            rect.transform.localScale = Vector3.one
            rect.transform.localPosition = Vector3.zero
            go:SetActive(true)

            self.evaTitleItem[i] = EvaTitleItemOne:new(go, 1, i)
            if i == #EvaConfig then
                DataManager.DetailModelRpcNoRet(OpenModelInsID.EvaCtrl, 'm_QueryMyEva', 11)
            end
        end
    end
end

-- eva小提示是否显示
function EvaCtrl:_showIntroduction(isShow)
    EvaPanel.introductionImage.localScale = isShow and Vector3.one or Vector3.zero
    EvaPanel.closeIntroductionBtn.localScale = isShow and Vector3.one or Vector3.zero
end

-- 显示建筑的科技点数、市场点数
function EvaCtrl:_showTechnologyAndMarketPoint(index)
    local point = self.buildingPoint[index]
    EvaPanel.technologyText.text = tostring(point.sciencePoint.pointNum)
    if point.promotionPoint then
        EvaPanel.lineImageTF.localScale = Vector3.one
        EvaPanel.marketTitleTextTF.localScale = Vector3.one
        EvaPanel.marketText.text = tostring(point.promotionPoint.pointNum)
    else
        EvaPanel.lineImageTF.localScale = Vector3.zero
        EvaPanel.marketTitleTextTF.localScale = Vector3.zero
    end
end

-- 清理Eva数据以及界面显示
function EvaCtrl:_clearEvaDataAndView()
    -- 数据
    self.addData = {}
    self.addEvaData = {}
    self.addEvaLvData = {}
    --self.allEvaAddPoint = {}

    -- 界面上显示的加点多少
    for _, v in ipairs(self.evaTitleItem) do
        v:_setAddNumber()
        v:_setMarketAddNumber()
    end
    for _, k in pairs(EvaCtrl.optionTwoScript) do
        k:_setAddNumber()
        k:_setMarketAddNumber()
    end
    for _, j in pairs(EvaCtrl.optionThereScript) do
        j:_setAddNumber()
        j:_setMarketAddNumber()
    end

    -- 关闭加点，并清理加点的界面数据
    for _, i in pairs(EvaCtrl.propertyScript) do
        i:_setAddExNumInputField("0")
    end
end
-------------------------------------------------------------- 按钮点击事件 --------------------------------------------------------
-- 关闭Eva界面
function EvaCtrl:OnBack(go)
    PlayMusEff(1002)
    -- 判断有没有加点数据，如果有，则提示，没有则退出
    if go.addEvaData then
        local isHaveEvaAddData
        for _, v in pairs(go.addEvaData) do
            isHaveEvaAddData = true
            break
        end
        if isHaveEvaAddData then
            local data={ReminderType = ReminderType.Common,ReminderSelectType = ReminderSelectType.Select,
                        content = GetLanguage(31010023),func = function()
                    -- 清理eva数据
                    go:_clearEvaDataAndView()
                    UIPanel.ClosePage()
                end  }
            ct.OpenCtrl('NewReminderCtrl',data)
        else
            UIPanel.ClosePage()
        end
    else
        UIPanel.ClosePage()
    end
end

-- 加点，向服务器发起加点消息
function EvaCtrl:OnAdd(go)
    PlayMusEff(1002)
    local evas = {}
    for _, v in pairs(go.addEvaData) do
        table.insert(evas, v)
    end
    if not  next(evas) then
        Event.Brocast("SmallPop",GetLanguage(31010050),70)
        return
    end
    DataManager.DetailModelRpcNoRet(OpenModelInsID.EvaCtrl, 'm_UpdateMyEvas', {evaSummarys = evas})
    go:_clearEvaDataAndView()
end

--显示eva介绍
function EvaCtrl:OnTechnology(go)
    PlayMusEff(1002)
    go:_showIntroduction( true )
    EvaPanel.introductionImage:SetParent(EvaPanel.technologyBtn)
    EvaPanel.introductionImage.localPosition = Vector3.New(0, -20, 0)
    EvaPanel.introductionText.text = "科技点数提示！"
end

--显示eva介绍
function EvaCtrl:OnMarket(go)
    PlayMusEff(1002)
    go:_showIntroduction( true )
    EvaPanel.introductionImage:SetParent(EvaPanel.marketBtn)
    EvaPanel.introductionImage.localPosition = Vector3.New(0, -20, 0)
    EvaPanel.introductionText.text = "市场点数提示！"
end

--关闭eva小提示
function EvaCtrl:OnCloseTips(go)
    PlayMusEff(1002)
    -- 关闭eva小提示
    go:_showIntroduction( false )
end
-------------------------------------------------------------- 网络消息相关 --------------------------------------------------------
-- 打开model
function EvaCtrl:initInsData()
    DataManager.OpenDetailModel(EvaModel, OpenModelInsID.EvaCtrl)
end

-- 监听Model层网络回调
function EvaCtrl:_addListener()
    Event.AddListener("c_OnQueryMyEva", self.c_OnQueryMyEva, self)
    Event.AddListener("c_OnUpdateMyEvas", self.c_OnUpdateMyEvas, self)
end

-- 注销model层网络回调
function EvaCtrl:_removeListener()
    Event.RemoveListener("c_OnQueryMyEva", self.c_OnQueryMyEva, self)
    Event.RemoveListener("c_OnUpdateMyEvas", self.c_OnUpdateMyEvas, self)
end

-- 服务器查询Eva，并把Eva信息保存下來，并默认显示第一项
function EvaCtrl:c_OnQueryMyEva(buildingEva)
    -- 当前点数的Id
    local buildingIndex = buildingEva.buildingType - 10

    -- 当前点数
    self.buildingPoint[buildingIndex] = buildingEva.buildingPoint

    -- eva数据
    self.allEvaData[buildingIndex] = {}
    for _, v in ipairs(buildingEva.eva) do
        if self.allEvaData[buildingIndex][v.at] == nil then
            self.allEvaData[buildingIndex][v.at] = {}
        end
        self.allEvaData[buildingIndex][v.at][v.bt] = v
    end

    -- 实际要显示的数据
    self.allUIData[buildingIndex] = ct.deepCopy(EvaConfig[buildingIndex])
    if buildingIndex == 1 then
        for i = #self.allUIData[buildingIndex].option, 1, -1 do
            if self.allEvaData[buildingIndex][self.allUIData[buildingIndex].option[i].property[1].Atype] == nil then
                table.remove(self.allUIData[buildingIndex].option, i)
            end
        end
    elseif buildingIndex == 2 then
        for _, v in ipairs(self.allUIData[buildingIndex].option) do
            for i = #v.option, 1, -1 do
                if self.allEvaData[buildingIndex][v.option[i].property[1].Atype] == nil then
                    table.remove(v.option, i)
                end
            end
        end
    end

    -- 默认打开第一个选项
    self.evaTitleItem[buildingIndex]:_onClickBtn()
end

-- 服务器返回的Eva加点
function EvaCtrl:c_OnUpdateMyEvas(buildingEvas)
    Event.Brocast("SmallPop", GetLanguage(31010041),80)

    -- 刷新eva的数据
    for i, v in ipairs(buildingEvas.buildingEvas) do
        -- 当前点数的Id
        local buildingIndex = v.buildingType - 10

        -- 当前点数
        self.buildingPoint[buildingIndex] = v.buildingPoint

        for a, b in ipairs(v.eva) do
            self.allEvaData[buildingIndex][b.at][b.bt] = b
        end
    end

    -- 刷新加点的数据
    for _, n in pairs(EvaCtrl.propertyScript) do
        n.data = self.allEvaData[self.evaRecordData[1]][n.data.at][n.data.bt]
    end

    self:_showTechnologyAndMarketPoint(self.evaRecordData[1])
    self:SetAddBtnState(false)
end

-------------------------------------------------------------- 滑动复用相关 --------------------------------------------------------
-- Eva选项2信息显示
EvaCtrl.static.evaOptionTwoData = function(transform, idx)
    idx = idx + 1
    EvaCtrl.optionTwoScript[idx] = EvaTitleItemTwo:new(transform, 2, idx)
end

EvaCtrl.static.evaOptionTwoClearData = function(transform)
end

-- Eva选项3信息显示
EvaCtrl.static.evaOptionThereData = function(transform, idx)
    idx = idx + 1
    EvaCtrl.optionThereScript[idx] = EvaTitleItemThere:new(transform, 3, idx)
end

EvaCtrl.static.evaOptionThereClearData = function(transform)
end

-- 属性信息显示
EvaCtrl.static.propertyData = function(transform, idx)
    idx = idx + 1
    EvaCtrl.propertyScript[idx] = PropertyTrueItem:new(transform, EvaCtrl.propertyAllData[1][idx], EvaCtrl.propertyAllData[2][idx])
end

EvaCtrl.static.propertyClearData = function(transform)
end

-- 刷新Eva滑动选项2的信息
function EvaCtrl:ShowOptionTwo(itemNumber)
    EvaCtrl.optionTwoScript = {}
    EvaPanel.optionTwoScroll:ActiveLoopScroll(self.evaOptionTwoSource, itemNumber, "View/Eva/EvaBtnTwoItem")
    --EvaPanel.optionTwoScroll:RefillCells()
end

-- 刷新Eva滑动选项3的信息
function EvaCtrl:ShowOptionThere(itemNumber)
    EvaCtrl.optionThereScript = {}
    EvaPanel.optionThereScroll:ActiveLoopScroll(self.evaOptionThereSource, itemNumber, "View/Eva/EvaBtnThereItem")
    --EvaPanel.optionThereScroll:RefillCells()
end

-------------------------------------------------------------- 界面显示 --------------------------------------------------------
-- 生成Eva属性item
function EvaCtrl:CreatePropertyItem(propertyTab)
    if not propertyTab then
        return
    end
    EvaCtrl.propertyAllData = {{}, {}}

    -- 获得显示数据
    for _, b in ipairs(propertyTab) do
        table.insert(EvaCtrl.propertyAllData[1], self.allEvaData[self.evaRecordData[1]][b.Atype][b.Btype]) -- 保存实际数据
        table.insert(EvaCtrl.propertyAllData[2], b) -- 保存本地配置
    end

    -- 刷新界面上的数据显示
    EvaPanel.iconImageTF.localScale = Vector3.New(0, 0, 0)
    local imgPath
    if self.evaRecordData[1] == 1 then
        imgPath = Material[propertyTab[1].Atype].img
        EvaPanel.iconTF.localScale = Vector3.New(0.5, 0.5, 1)
    elseif self.evaRecordData[1] == 2 then
        imgPath = Good[propertyTab[1].Atype].img
        EvaPanel.iconTF.localScale = Vector3.New(0.5, 0.5, 1)
    elseif self.evaRecordData[1] == 5 then
        imgPath = ResearchConfig[propertyTab[1].Atype].iconPath
        EvaPanel.iconTF.localScale = Vector3.New(0.6, 0.6, 1)
    elseif self.evaRecordData[1] == 6 then
        imgPath = ResearchConfig[propertyTab[1].Atype].buildingPath
        EvaPanel.iconTF.localScale = Vector3.New(0.6, 0.6, 1)
    else
        imgPath = EvaCtrl.static.brandIcon[propertyTab[1].Atype]
        EvaPanel.iconTF.localScale = Vector3.New(1, 1, 1)
    end
    LoadSprite(imgPath, EvaPanel.iconImage, true)

    local isShowFrist,isShowSecond = false, false
    for m, n in ipairs(EvaCtrl.propertyAllData[2]) do
        local strId = string.format("%d%s", EvaCtrl.propertyAllData[2][m].Atype, EvaCtrl.propertyAllData[2][m].Btype)
        local myLv = EvaCtrl.propertyAllData[1][m].lv
        if EvaCtrl.static.evaCtrl.addEvaLvData[strId] then
            myLv = EvaCtrl.static.evaCtrl.addEvaLvData[strId].myLv
        end
        if n.Btype == "ProduceSpeed"  or n.Btype == "PromotionAbility" or n.Btype == "InventionUpgrade" or n.Btype == "EvaUpgrade" then
            self.resultTab[1]:_initData(EvaCtrl.propertyAllData[1][m], EvaCtrl.propertyAllData[2][m])
            self.resultTab[1]:_showData(myLv)
            isShowFrist = true
        elseif n.Btype == "Quality" then
            self.resultTab[2]:_initData(EvaCtrl.propertyAllData[1][m], EvaCtrl.propertyAllData[2][m])
            self.resultTab[2]:_showData(myLv)
            isShowSecond = true
        elseif n.Btype == "Brand" then
            self.resultTab[3]:_initData(EvaCtrl.propertyAllData[1][m], EvaCtrl.propertyAllData[2][m])
            self.resultTab[3]:_showData(myLv)
        end
    end

    if isShowFrist then
        if isShowSecond then  -- 都有
            self.resultTab[1]:_isShow(true)
            self.resultTab[2]:_isShow(true)
            self.resultTab[2]:SetPosition(Vector3.New(212, 0, 0))
            self.resultTab[3]:_isShow(true)
            self.resultTab[3]:SetPosition(Vector3.New(602, 0, 0))
        else -- 只有第一项
            self.resultTab[1]:_isShow(true)
            self.resultTab[2]:_isShow(false)
            self.resultTab[3]:_isShow(false)
        end
    else -- 没有第一项
        self.resultTab[1]:_isShow(false)
        self.resultTab[2]:_isShow(true)
        self.resultTab[2]:SetPosition(Vector3.New(-402, 0, 0))
        self.resultTab[3]:_isShow(true)
        self.resultTab[3]:SetPosition(Vector3.New(-12, 0, 0))
    end

    -- 生成新的属性显示
    EvaCtrl.propertyScript = {}
    EvaPanel.propertyScroll:ActiveLoopScroll(self.propertySource, #EvaCtrl.propertyAllData[2], EvaCtrl.static.PropertyTrueItemPath)
end

-- 设置Eva选择记录
function EvaCtrl:SetEvaRecord(index, data)
    if index == 1 then
        self.evaRecordData = {data}
    elseif index == 2 then
        self.evaRecordData[index] = data
        self.evaRecordData[3] = nil
    elseif index == 3 then
        self.evaRecordData[index] = data
    end

end

-- 获取Eva选项item的记录
function EvaCtrl:GetEvaRecordData()
    return self.evaRecordData
end

-- 重置按钮的状态
function EvaCtrl:SetBtnState(index)
    if index == 1 then
        for _, v in ipairs(self.evaTitleItem) do
            v:SetSelect(true)
            --v:SetNameTextColor(1)
        end
    elseif index == 2 then
        for _, v in ipairs(EvaCtrl.optionTwoScript) do
            v:SetSelect(true)
        end
    elseif index == 3 then
        for _, v in ipairs(EvaCtrl.optionThereScript) do
            v:SetSelect(true)
        end
    end
end

-- 加点按钮控制
function EvaCtrl:SetAddBtnState(isInteractable)
    EvaPanel.addButton.interactable = isInteractable
end