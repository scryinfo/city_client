---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/2/18/018 12:01
---


AvtarCtrl = class('AvtarCtrl',UIPanel)
UIPanel:ResgisterOpen(AvtarCtrl) --How to open

local panel             --AvtarPanel
local LuaBehaviour      --LuaBehaviour
local this              --self


local fiveItemPath="View/AvtarItems/fiveItem"
local kindItemPath="View/AvtarItems/kindItem"

local pastApperanceID = {}        --Previously selected components
local pool = {}

local mySex                       --My chosen gender
local myCurrentHeadNum            --My choice of headNum

local headPrefab = {}             --Avatar's HeadList
local AvatarOrganImageList = {}   --Image storage of Avatar parts
local my_appearance ={}           --My chosen appearance

local currentHead = nil
FiveType = {
  head=1,
  body=2,
  brow=3,
  eyes=4,
  haircut=5,
  frontHat=6,
  mouth=7,
  nose=8,
  goatee=9,
  decal=10,
}
---==========================================================================================Frame function============================================================================================
--【over】
function  AvtarCtrl:bundleName()
    return "Assets/CityGame/Resources/View/AvtarPanel.prefab"
end

function AvtarCtrl:initialize()
    UIPanel.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None)--You can go back and hide other panels after the UI opens
end

--【over】
function AvtarCtrl:OnCreate(obj)
    UIPanel.OnCreate(self,obj)
end

function AvtarCtrl:Refresh()
    AvtarPanel.InitLanguage()
    DataManager.OpenDetailModel(AvtarModel,OpenModelInsID.AvtarCtrl)
    Event.AddListener("m_AvatarChangeSuccess", self._updateAvatarScore, self)

    self:begin()
end

--【over】
function  AvtarCtrl:Hide()
    UIPanel.Hide(self)
    Event.RemoveListener("m_AvatarChangeSuccess", self._updateAvatarScore, self)

    self:ClearCasch()
end
--
function AvtarCtrl:_updateAvatarScore(value)
    panel.luckyValue.text = value
end

--【over】
function AvtarCtrl:Close()
    UIPanel.Close(self)
    self:ClearCasch()
    pool = {}
end

--【over】
function AvtarCtrl:Awake(go)
    self.gameObject = go
    this = self
    panel = AvtarPanel
    LuaBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    LuaBehaviour:AddClick(panel.backBtn.gameObject,self.c_OnClick_backBtn,self)
    LuaBehaviour:AddClick(panel.cofirmBtn.gameObject,self.c_OnClick_confirm,self)
    LuaBehaviour:AddClick(panel.randomBtn.gameObject,self.c_OnClick_randomChange,self)
    LuaBehaviour:AddClick(panel.maleBtn.gameObject,self.c_OnClick_male,self)
    LuaBehaviour:AddClick(panel.feMaleBtn.gameObject,self.c_OnClick_faMale,self)
    LuaBehaviour:AddClick(panel.luckTipBtn.gameObject, function ()
        panel.luckText01.text = ""
        panel.luckTipText02.text = ""
        panel.luckTipText03.text = ""
        panel.luckTipRoot.localScale = Vector3.zero
    end ,self)
    LuaBehaviour:AddClick(panel.luckInfoBtn.gameObject, function ()
        panel.luckTipRoot.localScale = Vector3.one
        panel.luckText01.text = GetLanguage(17030002)
        panel.luckTipText02.text = GetLanguage(17030003)
        panel.luckTipText03.text = GetLanguage(17030006)
    end ,self)
end

---==========================================================================================Business code===================================================================================================

--Clear cached data
function AvtarCtrl:ClearCasch()
    ct.log("system","清空Avatar缓存数据")
    if headPrefab~= nil then
        for tempSex, table in pairs(headPrefab) do
            for i, v in pairs(table) do
                destroy(v)
            end
        end
    end
    if pastApperanceID ~= nil then
        for key, pastApperance in pairs(pastApperanceID) do
            UnLoadSprite(pastApperance.path)
        end
    end
    mySex = nil
    currentHead = nil
    myCurrentHeadNum = nil
    AvatarOrganImageList = nil
    headPrefab = nil
    --pool = {}
end


--Temporary object pool                 --【over】
local function InsAndObjectPool(config,class,prefabPath,parent,this)
    if nil == pool[class] then
        pool[class] = {}
    end
    local tempList = pool[class]
    local prefab
    --Start traversing
    for i, value in ipairs(config) do
        --The current number of objects in the pool
        if tempList[i] ~= nil then
            value.id = i
            tempList[i]:updateData(value)
            tempList[i].prefab:SetActive(true)
        else
            --Need to generate new pool
            prefab = creatGoods(prefabPath,parent)
            value.id = i
            tempList[i] = class:new(prefab,LuaBehaviour,value,this)
        end
    end
    --More than hidden
    if #config < #tempList then
        for i = #config + 1 , #tempList do
            tempList[i].prefab:SetActive(false)
        end
    end
end


--Traversing the image of the target avatar      --【over】
local function FindOrgan(transform)
    local AvatarImages = {}
    AvatarImages["body"] = transform:Find("body/body"):GetComponent("Image")
    AvatarImages["backHat"] = transform:Find("backHat/backHat"):GetComponent("Image")
    AvatarImages["head"] = transform:Find("head/head"):GetComponent("Image")
    AvatarImages["haircut"] = transform:Find("hair/hair"):GetComponent("Image")
    AvatarImages["nose"] = transform:Find("nose/nose"):GetComponent("Image")
    AvatarImages["brow"] = transform:Find("brow/brow"):GetComponent("Image")
    AvatarImages["frontHat"] = transform:Find("frontHat/frontHat"):GetComponent("Image")
    AvatarImages["eyes"] = transform:Find("eyes/eyes"):GetComponent("Image")
    AvatarImages["mouth"] = transform:Find("mouth/mouth"):GetComponent("Image")

    if transform:Find("decal/decal") ~= nil  then
        AvatarImages["decal"] = transform:Find("decal/decal"):GetComponent("Image")
        AvatarImages["goatee"] = transform:Find("goatee/goatee"):GetComponent("Image")
    end
    return AvatarImages
end

--initialization
function AvtarCtrl:begin()
    --
    AvtarPanel.luckValueText.text = 10
    AvtarPanel.luckTipRoot.localScale = Vector3.zero
    --

    local faceId = DataManager.GetFaceId()
    --initialization
    AvatarOrganImageList = {}
    AvatarOrganImageList[1] = {}
    AvatarOrganImageList[2] = {}
    headPrefab = {}
    headPrefab[1] = {}
    headPrefab[2] = {}
    --Load intermediate instance
    if faceId then --Have ID for the second modification, hide gender options
        local arr = split(faceId,"-")
        if arr[1] == "1" then
            self:switchKinds(AvtarConfig.man[1].kinds)
            --Load the facial features selection button on the left
            InsAndObjectPool(AvtarConfig.man,FiveFaceItem,fiveItemPath,panel.fiveContent,self)
        else
            self:switchKinds(AvtarConfig.woMan[1].kinds)
            --Load the facial features selection button on the left
            InsAndObjectPool(AvtarConfig.woMan,FiveFaceItem,fiveItemPath,panel.fiveContent,self)
        end
        --Select the first one on the left
        this.select.localScale = Vector3.zero
        this.select = pool[FiveFaceItem][1].select
        this.select.localScale = Vector3.one
        --
        GetAvtar(faceId)
        --Hide gender options
        panel.maleBtn.gameObject:SetActive(false)
        panel.feMaleBtn.gameObject:SetActive(false)
        --Open lucky value display
        panel.luckyRoot.localScale = Vector3.one
        panel.luckyValue.text = DataManager.GetMyFlightScore()
        --Determine if there is a button this.cofirmBtn
        if DataManager.GetMyFlightScore() < 10 then
            panel.cofirmBtn.localScale = Vector3.zero
        else
            panel.cofirmBtn.localScale = Vector3.one
        end
    else--No ID, the initial build number
        --Gender defaults to male
        mySex = 1
        myCurrentHeadNum = 1
        --Load the facial features selection button on the left
        InsAndObjectPool(AvtarConfig.man,FiveFaceItem,fiveItemPath,panel.fiveContent,self)
        --Random dress up
        self:randomChange()
        --The first part of the male is selected by default
        self:switchKinds(AvtarConfig.man[1].kinds)
        --Show gender options
        panel.maleBtn.gameObject:SetActive(true)
        panel.feMaleBtn.gameObject:SetActive(true)
        --Hide lucky value display
        panel.luckyRoot.localScale = Vector3.zero
    end
end

--Load the instance on the right
function AvtarCtrl:switchKinds(config)
    InsAndObjectPool(config,KindsItem,kindItemPath,panel.kindsContent,self)
end

--random selection
function AvtarCtrl:randomChange()
    local config
    if mySex == 1 then
        config=AvtarConfig.man
    else
        config=AvtarConfig.woMan
    end
    for i, qiGuan in ipairs(config) do
        local num = math.random(1,#qiGuan.kinds)
        self:changAparance(config[i].kinds[num],num)
    end
end

--Change a part selection of a character
function AvtarCtrl:changAparance(data,rank)
    local path,type
    local arr = split(data.path,",")
    path = arr[1]           --Change path
    type = arr[2]           --Type of replacement
    --Head change needs to be handled separately
    if type == "head" then
        --1.Switch prefab
        --2.Copy oldsprite
        local config
        if mySex == 1 then
            config = HeadConfig.man
        else
            config = HeadConfig.woMan
        end
        --Existing hide
        if currentHead ~= nil then
            currentHead:SetActive(false)
        end
        --Switch the marker to the new one and record the previous Num
        local oldNum = myCurrentHeadNum
        myCurrentHeadNum  = data.id or rank
        --New display
        if headPrefab[mySex][myCurrentHeadNum] == nil then
            headPrefab[mySex][myCurrentHeadNum] = creatGoods( config[myCurrentHeadNum].path , panel.showContent )
            AvatarOrganImageList[mySex][myCurrentHeadNum] =  FindOrgan(headPrefab[mySex][myCurrentHeadNum].transform)
            LoadSprite(path,AvatarOrganImageList[mySex][myCurrentHeadNum][type])
        end
        currentHead = headPrefab[mySex][myCurrentHeadNum]
        currentHead:SetActive(true)
        --
        pastApperanceID[type]= {}
        pastApperanceID[type].path = path
        pastApperanceID[type].rank = myCurrentHeadNum
        pastApperanceID[type].type = type
        --Load original costume
        local tempList = AvatarOrganImageList[mySex][myCurrentHeadNum]
        local tempOldList = AvatarOrganImageList[mySex][oldNum]
        for key, value in pairs(tempList) do
            if key ~= "head" then
                --If there is a sprite before, copy directly, otherwise load/
                if tempOldList ~= nil and tempOldList[key] ~= nil and tempOldList[key].sprite ~= nil and pastApperanceID[key] ~= nil and pastApperanceID[key] ~= {} and pastApperanceID[key].path ~= nil then
                    value.sprite = tempOldList[key].sprite
                    value.transform.localScale = Vector3.one
                    value.gameObject:SetActive(true)
                else
                    ct.log("system","切换人种的时候移植sprite失败")
                    value.gameObject:SetActive(false)
                end
                if key == "frontHat" then
                    if tempOldList ~= nil and tempOldList["backHat"] ~= nil and tempOldList["backHat"].sprite ~= nil and pastApperanceID["backHat"] ~= nil and pastApperanceID["backHat"] ~= {} and pastApperanceID["backHat"].path ~= nil then
                        tempList["backHat"].gameObject:SetActive(true)
                        tempList["backHat"].sprite = tempOldList["backHat"].sprite
                        tempList["backHat"].transform.localScale = Vector3.one
                    else--Unwanted parts
                        tempList["backHat"].gameObject:SetActive(false)
                    end
                end
            end
        end
    --Hair replacement requires additional treatment
    --TODO://y verification
    elseif type == "frontHat" then
        local tempList = AvatarOrganImageList[mySex][myCurrentHeadNum]
        pastApperanceID[type] = {}
        if path =="" then
            tempList[type].gameObject:SetActive(false)
        else
            tempList[type].gameObject:SetActive(true)
            LoadSprite(path,tempList[type])
            pastApperanceID[type].path = path
            pastApperanceID[type].rank = rank
            pastApperanceID[type].type = type
        end
        pastApperanceID["backHat"] = {}
        if arr[3]=="" then
            tempList[arr[4]].gameObject:SetActive(false)
        else
            tempList[arr[4]].gameObject:SetActive(true)
            LoadSprite(arr[3],tempList[arr[4]])
            pastApperanceID["backHat"].path = arr[3]
            pastApperanceID["backHat"].rank = arr[4]
            pastApperanceID["backHat"].type = "backHat"
        end
    else  --Ordinary
        local tempList = AvatarOrganImageList[mySex][myCurrentHeadNum]
        pastApperanceID[type] = {}
        if path =="" then
            tempList[type].gameObject:SetActive(false)
        else
            tempList[type].gameObject:SetActive(true)
            LoadSprite(path,tempList[type])
            pastApperanceID[type].path = path
            pastApperanceID[type].rank = rank
            pastApperanceID[type].type = type
        end
    end
end

--Get the middle Avatar
function GetAvtar(faceId)
    local arr = split(faceId,"-")
    if arr[1] == "1" then--man
        mySex = 1
        myCurrentHeadNum = 1
        local temp = split(arr[2],",")
        for i = 1, #temp ,2 do
            if temp[i] == "1" then
                myCurrentHeadNum = tonumber(temp[i+1])
            end
        end
        --todo：Load villain avatar
        headPrefab[mySex][myCurrentHeadNum] = creatGoods(HeadConfig.man[myCurrentHeadNum].path,panel.showContent)
        AvatarOrganImageList[mySex][myCurrentHeadNum] =  FindOrgan(headPrefab[mySex][myCurrentHeadNum].transform)
        local arr = split(AvtarConfig.man[1].kinds[myCurrentHeadNum].path,",")
        LoadSprite(arr[1],AvatarOrganImageList[mySex][myCurrentHeadNum]["head"])

        for i = 1, #temp ,2 do
            if temp[i] ~= "" and temp[i] == "1" then
                local kind = AvtarConfig.man[tonumber(temp[i])].kinds[tonumber(temp[i+1])]
                this:changAparance(kind, temp[i+1])
            end
        end
        for i = 1, #temp ,2 do
            if temp[i] ~= "" and temp[i] ~= "1" then
                local kind = AvtarConfig.man[tonumber(temp[i])].kinds[tonumber(temp[i+1])]
                this:changAparance(kind, temp[i+1])
            end
        end

    else--woman
        mySex = 2
        myCurrentHeadNum = 1
        local temp = split(arr[2],",")
        for i = 1, #temp ,2 do
            if temp[i] == "1" then
                myCurrentHeadNum = tonumber(temp[i+1])
            end
        end
        --todo：Load villain avatar
        headPrefab[mySex][myCurrentHeadNum] = creatGoods(HeadConfig.woMan[myCurrentHeadNum].path,panel.showContent)
        AvatarOrganImageList[mySex][myCurrentHeadNum] =  FindOrgan(headPrefab[mySex][myCurrentHeadNum].transform)
        local arr = split(AvtarConfig.woMan[1].kinds[myCurrentHeadNum].path,",")
        LoadSprite(arr[1],AvatarOrganImageList[mySex][myCurrentHeadNum]["head"])

        for i = 1, #temp ,2 do
            if temp[i] ~= "" and temp[i] == "1" then
                local kind = AvtarConfig.woMan[tonumber(temp[i])].kinds[tonumber(temp[i+1])]
                this:changAparance(kind,temp[i+1])
            end
        end
        for i = 1, #temp ,2 do
            if temp[i] ~= "" and temp[i] ~= "1" then
                local kind = AvtarConfig.woMan[tonumber(temp[i])].kinds[tonumber(temp[i+1])]
                this:changAparance(kind,temp[i+1])
            end
        end
    end
    return headPrefab[mySex][myCurrentHeadNum]
end

---========================================================================================== Click function ===================================================================================================
--return
function AvtarCtrl:c_OnClick_backBtn(ins)
    PlayMusEff(1002)
    if DataManager.GetFaceId() then
        UIPanel.ClosePage()
    else
        --ins:Hide()
        CityEngineLua.LoginOut()
    end
end

--determine TODO://
function AvtarCtrl:c_OnClick_confirm()

    PlayMusEff(1002)
    local faceId,type,rankID=""

    for key, value in pairs(pastApperanceID) do
        if value.type ~= nil and value.type ~= "backHat"  then
            type = tostring(FiveType[value.type])
            rankID = tostring(value.rank)
            if rankID == nil then
                rankID = ""
            end
            faceId = faceId..type..","..rankID..","
        end
    end
    --[[
    for key, value in pairs(appearance) do
        if value.typeId then
            type = tostring(FiveType[key])
            typeId = tostring(value.typeId)
            faceId = faceId..type..","..typeId..","
        end
    end--]]
    faceId = tostring(mySex).."-"..faceId
    local temp={}
    temp.faceId = faceId

    for key, pastApperance in pairs(pastApperanceID) do
        UnLoadSprite(pastApperance.path)
    end

    if DataManager.GetFaceId() then
        if faceId ~= DataManager.GetFaceId() then
            --Open prompt popup
            local data={ReminderType = ReminderType.Common,ReminderSelectType = ReminderSelectType.Select,
                        content = GetLanguage(17030004,10),func = function()
                    Event.Brocast("m_setRoleFaceId",faceId)
                    DataManager.SetFaceId(faceId)
                    --UIPanel.ClosePage()
                end  }
            ct.OpenCtrl('NewReminderCtrl',data)
        else
            UIPanel.ClosePage()
        end
    else
        if mySex == 1 then
            temp.gender = true
        else
            temp.gender = false
        end
        ct.OpenCtrl("CreateRoleCtrl",temp)
    end
end

--random
function AvtarCtrl:c_OnClick_randomChange(ins)
    PlayMusEff(1002)
    ins:randomChange()
end

--Switch to male
function AvtarCtrl:c_OnClick_male(ins)
    PlayMusEff(1002)
    pastApperanceID = {}
    if mySex == 2 then
        mySex = 1
        panel.feMaleSelect.localScale=Vector3.zero
        panel.maleSelect.localScale=Vector3.one
        InsAndObjectPool(AvtarConfig.man,FiveFaceItem,fiveItemPath,panel.fiveContent,self)
        ins:randomChange()
        ins:switchKinds(AvtarConfig.man[1].kinds)
        this.select.localScale = Vector3.zero
        this.select = pool[FiveFaceItem][1].select
        this.select.localScale = Vector3.one
    end
end

--Switch to female
function AvtarCtrl:c_OnClick_faMale(ins)
    PlayMusEff(1002)
    pastApperanceID = {}
    if mySex == 1 then
        mySex = 2
        panel.feMaleSelect.localScale=Vector3.one
        panel.maleSelect.localScale=Vector3.zero
        InsAndObjectPool(AvtarConfig.woMan,FiveFaceItem,fiveItemPath,panel.fiveContent,self)
        ins:randomChange()
        ins:switchKinds(AvtarConfig.woMan[1].kinds)
        this.select.localScale = Vector3.zero
        this.select = pool[FiveFaceItem][1].select
        this.select.localScale = Vector3.one
    end
end
