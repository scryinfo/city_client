---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2019/1/15 15:28
---

CompanyCtrl = class("CompanyCtrl", UIPage)
UIPage:ResgisterOpen(CompanyCtrl)

function CompanyCtrl:initialize()
    ct.log("tina_w22_friends", "CompanyCtrl:initialize()")
    UIPage.initialize(self, UIType.PopUp, UIMode.DoNothing, UICollider.Normal)
end

function CompanyCtrl:bundleName()
    ct.log("tina_w22_friends", "CompanyCtrl:bundleName()")
    return "Assets/CityGame/Resources/View/CompanyPanel.prefab"
end

function CompanyCtrl:OnCreate(obj)
    ct.log("tina_w22_friends", "CompanyCtrl:OnCreate()")
    UIPage.OnCreate(self, obj)
end

function CompanyCtrl:Awake()
    ct.log("tina_w22_friends", "CompanyCtrl:Awake()")
    local luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")

    luaBehaviour:AddClick(CompanyPanel.backBtn, self.OnBack, self)

    self.businessRecordsSource = UnityEngine.UI.LoopScrollDataSource.New()  --行情
    self.businessRecordsSource.mProvideData = CompanyCtrl.static.businessRecordsData
    self.businessRecordsSource.mClearData = CompanyCtrl.static.businessRecordsClearData

    self:_allItemType()

    --this._networkInterface:connectTo(this.ip, this.port, this.onConnectTo_loginapp_callback, nil)
end

function CompanyCtrl:_allItemType()
    CompanyCtrl.static.AllItem = {}
    for _, v in pairs(Material) do
        table.insert(CompanyCtrl.static.AllItem, v)
    end
    for _, k in pairs(Good) do
        table.insert(CompanyCtrl.static.AllItem, k)
    end

    table.insert(CompanyCtrl.static.AllItem, {itemId = 1000, income = "0", expenses = "0"})
    table.insert(CompanyCtrl.static.AllItem, {itemId = 1001, income = "0", expenses = "0"})
    table.insert(CompanyCtrl.static.AllItem, {itemId = 1002, income = "0"})
    table.insert(CompanyCtrl.static.AllItem, {itemId = 1003, expenses = "0"})
    table.insert(CompanyCtrl.static.AllItem, {itemId = 1004, expenses = "0"})
end

function CompanyCtrl:OnBack(go)
    go:_removeListener()
    go:Hide()
end

function CompanyCtrl:Refresh()
    self:_addListener()
    self:_updateData()
end

-- 监听Model层网络回调
function CompanyCtrl:_addListener()
    Event.AddListener("c_OnReceivePlayerEconomy", self.c_OnReceivePlayerEconomy, self)
end

--注销model层网络回调h
function CompanyCtrl:_removeListener()
    Event.RemoveListener("c_OnReceivePlayerEconomy", self.c_OnReceivePlayerEconomy, self)
end

function CompanyCtrl:initInsData()
    DataManager.OpenDetailModel(CompanyModel, OpenModelInsID.CompanyCtrl)
    DataManager.DetailModelRpcNoRet(OpenModelInsID.CompanyCtrl, 'm_QueryPlayerEconomy', self.m_data.id)--获取自己的建筑详情
end

function CompanyCtrl:_updateData()
    if self.m_data.id == DataManager.GetMyOwnerID() then
        CompanyPanel.titleText.text = "MY COMPANY"
        CompanyPanel.coinBg:SetActive(true)
        CompanyPanel.coinText.text = DataManager.GetMoney()
    else
        CompanyPanel.titleText.text = "COMPANY"
        CompanyPanel.coinBg:SetActive(false)
    end
    CompanyPanel.companyText.text = self.m_data.companyName
    CompanyPanel.nameText.text = self.m_data.name

    CompanyPanel.businessRecordsScroll:RefillCells()
    CompanyPanel.businessRecordsScroll:ActiveLoopScroll(self.businessRecordsSource, #CompanyCtrl.static.AllItem)

    self:initInsData()
end

function CompanyCtrl:_showAllItem()

end

-- 交易记录
CompanyCtrl.static.businessRecordsData = function(transform, idx)
    idx = idx + 1
    local item = BusinessRecordsItem:new(transform, CompanyCtrl.static.AllItem[idx])
    --ExchangeCtrl.quoteItems[idx] = item
end

CompanyCtrl.static.businessRecordsClearData = function(transform)
end

-- 网络回调
function CompanyCtrl:c_OnReceivePlayerEconomy(economyInfos)
end