---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/10/31 19:12
---临时记录玩家信息
PlayerTempModel = {}
local this = PlayerTempModel
local pbl = pbl

--构建函数--
function PlayerTempModel.New()
    return this
end

function PlayerTempModel.Awake()
    UpdateBeat:Add(this.Update, this)
    this:OnCreate()
end

function PlayerTempModel.Update()
    if UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode.Space) then
        PlayerTempModel.m_ReqBuildApartment(1100001)
    end
end

--启动事件--
function PlayerTempModel.OnCreate()
    --网络回调注册 网络回调用n开头
    CityEngineLua.Message:registerNetMsg(pbl.enum("gscode.OpCode","unitCreate"), PlayerTempModel.n_OnReceiveUnitCreate)

    --本地的回调注册
    Event.AddListener("m_RoleLoginInExchangeModel", this.n_OnReceiveRoleLogin)
end

--关闭事件--
function PlayerTempModel.Close()
    --Event.RemoveListener("m_PlayerBidGround", this.m_BidGround)
end

---temp 记录role信息
function PlayerTempModel.n_OnReceiveRoleLogin(stream)
    local roleData = assert(pbl.decode("gs.Role", stream), "PlayerTempModel.n_OnReceiveExchangeDeal: stream == nil")
    PlayerTempModel.roleData = roleData
    PlayerTempModel.storeList = this._getStore(roleData)
end
--创建同步
function PlayerTempModel.n_OnReceiveUnitCreate(stream)
    local buildingInfo = assert(pbl.decode("gs.UnitCreate", stream), "PlayerTempModel.n_OnReceiveExchangeDeal: stream == nil")
    if not PlayerTempModel.buildingsInfo then
        PlayerTempModel.buildingsInfo = {}
    end
    PlayerTempModel.buildingsInfo[#PlayerTempModel.buildingsInfo + 1] = buildingInfo
end
--add building
function PlayerTempModel.m_ReqBuildApartment(id)
    local msgId = pbl.enum("gscode.OpCode", "addBuilding")
    local lMsg = {id = id, pos = {x = 10, y = 10}}
    local pMsg = assert(pbl.encode("gs.AddBuilding", lMsg))
    CityEngineLua.Bundle:newAndSendMsg(msgId, pMsg)
end

---
function PlayerTempModel._getStore(roleData)
    local buyStore = {}
    if roleData.buys then
        buyStore = this._getCollectStore(roleData.buys)
    end

    local rentStore = {}
    if roleData.rents then
        rentStore = this._getCollectStore(roleData.rents)
    end

    for i, data in ipairs(rentStore) do
        table.insert(buyStore, data)
    end
    return buyStore
end
--获取所有带仓库的建筑的building id
function PlayerTempModel._getCollectStore(datas)
    local storeList = {}
    local materialFactory = datas.materialFactory
    local produceDepartment = datas.produceDepartment

    for i, value in ipairs(materialFactory) do
        storeList[#storeList + 1] = value
    end
    for i, value in ipairs(produceDepartment) do
        storeList[#storeList + 1] = value
    end
    return storeList
end