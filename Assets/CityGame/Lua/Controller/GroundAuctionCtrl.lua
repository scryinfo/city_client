---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/8/31 10:55
---
GroundAuctionCtrl = class('GroundAuctionCtrl',UIPanel)
UIPanel:ResgisterOpen(GroundAuctionCtrl)

GroundAuctionCtrl.static.GAucHistoryPath = "View/Items/GAucHistoryItem"  --历史记录

function GroundAuctionCtrl:initialize()
    UIPanel.initialize(self, UIType.Normal, UIMode.DoNothing, UICollider.None)
end

function GroundAuctionCtrl:bundleName()
    return "Assets/CityGame/Resources/View/GroundAuctionPanel.prefab"
end

function GroundAuctionCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)

    local groundAuctionBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    groundAuctionBehaviour:AddClick(GroundAuctionPanel.bidBtn.gameObject, self.BidGround, self)
    groundAuctionBehaviour:AddClick(GroundAuctionPanel.backBtn.gameObject, self.UnRegistGroundBid, self)
end

function GroundAuctionCtrl:Awake(go)
    self.gameObject = go
    self.m_Timer = Timer.New(slot(self._itemTimer, self), 1, -1, true)
end

function GroundAuctionCtrl:Active()
    UIPanel.Active(self)
    GroundAuctionPanel.personFlowText01.text = GetLanguage(22010004)
    GroundAuctionPanel.soonFloorText02.text = GetLanguage(22010002)
    GroundAuctionPanel.soonFloorText02.text = GetLanguage(22010002)
    GroundAuctionPanel.soonFloorText02.text = GetLanguage(22010002)
    GroundAuctionPanel.nowFloorPriceText05.text = GetLanguage(22010002)
end

function GroundAuctionCtrl:Refresh()
    Event.AddListener("c_BidInfoUpdate", self._bidInfoUpdate, self)  --拍卖信息更新
    Event.AddListener("c_BidEnd", self._bidEnd, self)  --拍卖结束
    Event.AddListener("c_BidStart", self._bidStart, self)  --拍卖开始
    Event.AddListener("c_ReturnGAucHistoryObj", self._returnHistoryObj, self)  --回收历史记录item

    self:_initPanelData()
end

function GroundAuctionCtrl:Hide()
    Event.Brocast("c_ShowGroundBubble")

    if self.m_Timer ~= nil then
        self.m_Timer:Stop()
    end

    self.startTimeDownForStart = false
    self.startTimeDownForFinish = false
    self.highestPrice = nil
    self.bidHistory = {}
    self:_cleanHistoryObj()

    Event.RemoveListener("c_BidInfoUpdate", self._bidInfoUpdate, self)
    Event.RemoveListener("c_BidEnd", self._bidEnd, self)
    Event.RemoveListener("c_BidStart", self._bidStart, self)
    Event.RemoveListener("c_ReturnGAucHistoryObj", self._returnHistoryObj, self)
    UIPanel.Hide(self)
end

function GroundAuctionCtrl:Close()
    UIPanel.Close(self)
end

function GroundAuctionCtrl:_itemTimer()
    self:SoonTimeDownFunc()
    self:NowTimeDownFunc()
end

---初始化界面
function GroundAuctionCtrl:_initPanelData()
    Event.Brocast("c_HideGroundBubble")
    if self.m_data == nil then
        return
    end

    self.m_Timer:Start()
    self.id = self.m_data.id
    GroundAuctionPanel.bidInput.text = ""
    GroundAuctionPanel.averageRangeText.text = 0
    local groundInfo = GroundAucConfig[self.m_data.id]
    --如果开始拍卖，还需判断是否有人出价
    if self.m_data.isStartAuc then
        GroundAuctionPanel.setSoonAndNow(true)
        --判断是否有人出价
        if self.m_data.endTs == nil or self.m_data.endTs == 0 then
            GroundAuctionPanel.setBidState(false)
            GroundAuctionPanel.nowFloorPriceText.text = getPriceString(GetClientPriceString(groundInfo.basePrice), 30, 24)
        else
            GroundAuctionPanel.setBidState(true)
            self.bidHistory = ct.deepCopy(self.m_data.bidHistory)
            self:_createHistory()
            self.highestPrice = GetClientPriceString(self.bidHistory[1].price)

            self.startTimeDownForFinish = true  --拍卖结束倒计时
        end
        Event.Brocast("m_RegistGroundBidInfor")
    else
        GroundAuctionPanel.setSoonAndNow(false)

        GroundAuctionPanel.floorPriceText.text = getPriceString(GetClientPriceString(groundInfo.basePrice), 30, 24)
        local timeData = getFormatUnixTime(groundInfo.beginTime)
        GroundAuctionPanel.startTimeText.text = timeData.hour..":"..timeData.minute..":"..timeData.second
        self.startTimeDownForStart = true  --即将拍卖倒计时
    end
end

--历史记录简易池
function GroundAuctionCtrl:_createHistory()
    self:_cleanHistory()  --清除history item

    table.sort(self.bidHistory, function (m, n) return m.ts > n.ts end)
    for i, value in ipairs(self.bidHistory) do
        if i == 1 then
            value.isFirst = true
        else
            value.isFirst = false
        end
        local go = self:_getValuableHistoryObj()
        go.transform:SetParent(GroundAuctionPanel.historyContent.transform)
        go.transform.localScale = Vector3.one
        self.historyLuaItems[i] = GAucHistoryItem:new(value, go.transform)
    end
end
--获取一个有效的item
function GroundAuctionCtrl:_getValuableHistoryObj()
    if self.historyObjs == nil or #self.historyObjs == 0 then
        local go = UnityEngine.GameObject.Instantiate(GroundAuctionPanel.historyItemPrefab)
        --go.transform.localScale = Vector3.one
        return go
    else
        local go = self.historyObjs[1]
        --go.transform.localScale = Vector3.one
        table.remove(self.historyObjs, 1)
        return go
    end
end
--回收obj
function GroundAuctionCtrl:_returnHistoryObj(go)
    if self.historyObjs == nil then
        self.historyObjs = {}
    end
    go.transform:SetParent(GroundAuctionPanel.historyRoot.transform)
    go.transform.localScale = Vector3.zero
    table.insert(self.historyObjs, 1, go)
end
--隐藏界面时，清掉记录
function GroundAuctionCtrl:_cleanHistoryObj()
    if self.historyObjs == nil then
        return
    end
    for i, go in pairs(self.historyObjs) do
        go.transform:SetParent(GroundAuctionPanel.historyRoot.transform)
        go.transform.localScale = Vector3.zero
    end
end

---倒计时---
--即将拍卖倒计时
function GroundAuctionCtrl:SoonTimeDownFunc()
    if self.startTimeDownForStart == true then
        local startAucTime = GroundAucConfig[self.m_data.id].beginTime * 1000
        local remainTime = startAucTime - TimeSynchronized.GetTheCurrentServerTime()
        if remainTime <= 0 then
            self.startTimeDownForStart = false
            return
        end

        local timeTable = getFormatUnixTime(remainTime / 1000)
        local timeStr = timeTable.minute..":"..timeTable.second
        GroundAuctionPanel.soonTimeDownText.text = timeStr
    end
end
--拍卖结束倒计时
function GroundAuctionCtrl:NowTimeDownFunc()
    if self.startTimeDownForFinish == true then
        if self.m_data.endTs == nil then
            return
        end
        local finishTime = self.m_data.endTs
        local remainTime = finishTime - TimeSynchronized.GetTheCurrentServerTime()
        if remainTime < 0 then
            self.startTimeDownForFinish = false
            return
        end

        local timeTable = getFormatUnixTime(remainTime / 1000)
        local timeStr = timeTable.minute..":"..timeTable.second
        GroundAuctionPanel.nowTimeDownText.text = timeStr
    end
end

--出价
function GroundAuctionCtrl:BidGround(ins)
    PlayMusEff(1005)
    local bidPrice = GroundAuctionPanel.bidInput.text
    if bidPrice == "" then
        --打开弹框
        local showData = {}
        showData.titleInfo = GetLanguage(40010008)
        showData.contentInfo = GetLanguage(24070001)
        showData.tipInfo = ""
        ct.OpenCtrl("BtnDialogPageCtrl", showData)
        return
    end

    local mMoney = tonumber(GetClientPriceString(DataManager.GetMoney()))
    if tonumber(bidPrice) > mMoney  then
        Event.Brocast("SmallPop", GetLanguage(22010003), 300)
        return
    end

    if ins.highestPrice == nil then
        ins.highestPrice = tonumber(GetClientPriceString(GroundAucConfig[ins.m_data.id].basePrice))
    end
    if tonumber(bidPrice) > tonumber(ins.highestPrice) then
        Event.Brocast("m_PlayerBidGround", ins.m_data.id, GetServerPriceNumber(bidPrice))
    else
        --打开弹框
        local showData = {}
        showData.titleInfo = GetLanguage(40010008)
        showData.contentInfo = GetLanguage(22030002)
        showData.tipInfo = ""
        ct.OpenCtrl("BtnDialogPageCtrl", showData)
    end

end

---正在拍卖中的地块关闭了界面 --停止接收拍卖价格的更新
function GroundAuctionCtrl:UnRegistGroundBid(ins)
    PlayMusEff(1002)
    UIPanel.ClosePage()
end

---拍卖信息更新
function GroundAuctionCtrl:_bidInfoUpdate(data)
    if data.id ~= self.m_data.id then
        return
    end

    GroundAuctionPanel.setBidState(true)
    self.highestPrice = GetClientPriceString(data.price)
    if self.bidHistory == nil then
        self.bidHistory = {}
    end
    self:_cleanHistory()  --清除history item
    self.m_data.endTs = data.ts + GAucModel.BidTime
    local temp = {biderId = data.biderId, price = data.price, ts = data.ts}
    table.insert(self.bidHistory, 1, temp)
    self:_createHistory()
    self.startTimeDownForFinish = true
end
--清除历史item
function GroundAuctionCtrl:_cleanHistory()
    if self.historyLuaItems ~= nil and #self.historyLuaItems ~= 0 then
        for i, value in pairs(self.historyLuaItems) do
            value:close()
            value = nil
        end
    end
    self.historyLuaItems = {}
end

--拍卖结束
function GroundAuctionCtrl:_bidEnd(id)
    if id == self.id then
        self.biderInfo = nil
        self.highestPrice = nil
        UIPanel.CloseAllPageExceptMain()
    end
end
--开始拍卖
function GroundAuctionCtrl:_bidStart(groundData)
    if groundData.id ~= self.m_data.id then
        return
    end
    --Event.Brocast("m_RegistGroundBidInfor")

    GroundAuctionPanel.bidInput.text = ""
    GroundAuctionPanel.setSoonAndNow(true)
    GroundAuctionPanel.setBidState(false)
    GroundAuctionPanel.nowFloorPriceText.text = getPriceString(GetClientPriceString(GroundAucConfig[self.m_data.id].basePrice), 30, 24)
    --self.m_data = groundData
end
