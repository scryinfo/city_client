---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/19 15:20
---
LabInventionLineItem = class('LabInventionLineItem')
LabInventionLineItem.static.NoRollColor = Vector3.New(22, 38, 94)  --没有成果时候的颜色
LabInventionLineItem.static.FinishBulbHight = 176  --进度完成时灯泡背景的最高高度

function LabInventionLineItem:initialize(data, viewRect)
    self.viewRect = viewRect

    local viewTrans = self.viewRect
    self.nameText = viewTrans:Find("topRoot/nameText"):GetComponent("Text")
    self.itemBtn = viewTrans:Find("itemBtn"):GetComponent("Button")
    self.closeBtn = viewTrans:Find("itemBtn"):GetComponent("Button")
    self.iconImg = viewTrans:Find("mainRoot/iconImg"):GetComponent("Image")
    self.staffText = viewTrans:Find("mainRoot/staffRoot/staffText"):GetComponent("Text")
    self.staffSlider = viewTrans:Find("mainRoot/staffRoot/staffSlider"):GetComponent("Slider")

    self.progressImgRect = viewTrans:Find("mainRoot/progressRoot/progressImg")
    self.bulbImg = viewTrans:Find("mainRoot/progressRoot/bulbImg"):GetComponent("Image")
    self.timeDownText = viewTrans:Find("mainRoot/progressRoot/timeDownText"):GetComponent("Text")
    self.progressCountText = viewTrans:Find("mainRoot/progressRoot/bulbImg/progressCountText"):GetComponent("Text")
    self.phaseItems = LabInventionItemPhaseItems:new(viewTrans:Find("mainRoot/successItems"))

    self:_initData(data)
    UpdateBeat:Add(self._update, self)

    self.itemBtn.onClick:RemoveAllListeners()
    self.itemBtn.onClick:AddListener(function ()

    end)
    self.closeBtn.onClick:RemoveAllListeners()
    self.closeBtn.onClick:AddListener(function ()
        self:_clickDeleteBtn()
    end)
    self.staffSlider.onValueChanged:RemoveAllListeners()
    self.staffSlider.onValueChanged:AddListener(function()

    end)
    Event.AddListener("c_LabLineInfoUpdate", function (data)
        self:_updateInfo(data)
    end)
end

--初始化界面
function LabInventionLineItem:_initData(data)
    self.data = data
    local itemInfo = Material[data.itemId]
    if not itemInfo then
        itemInfo = Good[data.itemId]
    end
    if not itemInfo.name then
        ct.log("", "找不到itemId对应的数据"..self.itemId)
        return
    end
    self.data.itemInfo = itemInfo
    self.nameText.text = itemInfo.name
    --self.iconImg.sprite =
    self.staffText.text = tostring(data.workerNum)
    self.formularData = FormularConfig[data.itemId]
    --self.staffSlider.maxValue = self.formularData.phaseSec
    self.progressImgRect.sizeDelta = Vector2.New(self.progressImgRect.sizeDelta.x, 0)
    if not data.roll or data.roll <= 0 then
        self.bulbImg.color = getColorByVector3(LabInventionLineItem.static.NoRollColor)
        self.progressCountText.transform.localScale = Vector3.zero
    else
        self.bulbImg.color = Color.white
        self.progressCountText.text = tostring(data.roll)
    end

    --显示阶段状态
    self.data.phaseStates = {}
    for i = 1, self.formularData.phase do
        self.data.phaseStates[i] = LabInventionItemPhaseState.Null
    end
    if data.rollTarget then
        for i = 1, data.rollTarget do
            self.data.phaseStates[i] = LabInventionItemPhaseState.WillTo
        end
    end
    if data.phase then
        for i = 1, data.phase do
            self.data.phaseStates[i] = LabInventionItemPhaseState.Finish
        end
    end
    self.phaseItems:showState(self.data.phaseStates)  --显示5个阶段的状态
    self.startTimeDown = true
    self.timeDownText.transform.localScale = Vector3.one
    if not self.data.run then
        self.startTimeDown = false
        self.timeDownText.transform.localScale = Vector3.zero
    end
end
--刷新数据
function LabInventionLineItem:_updateInfo(data)
    if data.id ~= self.data.id then
        return
    end
    --成果展示
    self.data.roll = data.roll
    self.data.leftSec = data.leftSec
    self.data.run = data.run
    if data.roll > 0 then
        self.bulbImg.color = Color.white
        self.progressCountText.text = tostring(data.roll)
    else
        self.bulbImg.color = getColorByVector3(LabInventionLineItem.static.NoRollColor)
        self.progressCountText.transform.localScale = Vector3.zero
    end
    --阶段显示
    for i = 1, data.phase do
        self.phaseStates[i] = LabInventionItemPhaseState.Finish
    end
    self.startTimeDown = true
    self.timeDownText.transform.localScale = Vector3.one
    if not self.data.run then
        self.startTimeDown = false
        self.timeDownText.transform.localScale = Vector3.zero
    end
end

--点击删除按钮
function LabInventionLineItem:_clickDeleteBtn()
    local info = {}
    info.titleInfo = "WARNING"
    info.contentInfo = "Delete the advertisment?"
    info.tipInfo = "(The statistical data of brand will be reset!)"
    info.btnCallBack = function ()
        Event.Brocast("")
    end
    ct.OpenCtrl("BtnDialogPageCtrl", info)
end
--倒计时
function LabInventionLineItem:_update()
    if self.startTimeDown then
        self.data.leftSec = self.data.leftSec - UnityEngine.Time.unscaledDeltaTime
        if self.data.leftSec < 0 then
            self.startTimeDown = false
            self.progressImgRect.sizeDelta = Vector2.New(self.progressImgRect.sizeDelta.x, LabInventionLineItem.static.FinishBulbHight)
            return
        end
        local timeTable = getTimeBySec(self.data.leftSec)
        local timeStr = timeTable.hour..":"..timeTable.minute..":"..timeTable.second
        self.timeDownText.text = timeStr
        local height = (self.formularData.phaseSec - self.data.leftSec) / self.formularData.phaseSec * LabInventionLineItem.static.FinishBulbHight
        self.progressImgRect.sizeDelta = Vector2.New(self.progressImgRect.sizeDelta.x, height)
    end
end