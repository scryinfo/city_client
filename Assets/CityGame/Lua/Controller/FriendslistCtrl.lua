---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tina.
--- DateTime: 2018/11/30 15:16
---

FriendslistCtrl = class('FriendslistCtrl', UIPanel)
UIPanel:ResgisterOpen(FriendslistCtrl)

function FriendslistCtrl:initialize()
    ct.log("tina_w7_friends", "FriendslistCtrl:initialize")
    UIPanel.initialize(self, UIType.Normal, UIMode.NeedBack, UICollider.None)
end

function FriendslistCtrl:bundleName()
    ct.log("tina_w7_friends", "FriendslistCtrl:bundleName")
    return "Assets/CityGame/Resources/View/FriendslistPanel.prefab"
end

function FriendslistCtrl:Awake(go)
    FriendslistCtrl.static.friendsListItemTab = {}
    ct.log("tina_w7_friends", "FriendslistCtrl:Awake")
    self.friendsSource = UnityEngine.UI.LoopScrollDataSource.New()  
    self.friendsSource.mProvideData = FriendslistCtrl.static.FriendsProvideData
    self.friendsSource.mClearData = FriendslistCtrl.static.FriendsClearData
end

function FriendslistCtrl:OnCreate(go)
    ct.log("tina_w7_friends", "FriendslistCtrl:OnCreate")
    --Call the base class method to process the instance data
    UIPanel.OnCreate(self, go)
    FriendslistCtrl.static.isAddfriends = false

    --Add UI event click listener
    FriendslistCtrl.luaBehaviour = self.gameObject:GetComponent("LuaBehaviour")
    FriendslistCtrl.luaBehaviour:AddClick(FriendslistPanel.backBtn, function ()
        PlayMusEff(1002)
        UIPanel.ClosePage()
    end)

    FriendslistCtrl.luaBehaviour:AddClick(FriendslistPanel.searchBtn, self.OnSearch, self)
end

-- Register to listen to events
function FriendslistCtrl:Active()
    UIPanel.Active(self)
    self:_addListener()
end

-- Refresh
function FriendslistCtrl:Refresh()
    --self:_addListener()
    self:_initState()
end

function FriendslistCtrl:_addListener()
    --Listen to the model layer network callback
    Event.AddListener("c_OnReceiveSearchPlayerInfo", self.c_OnReceiveSearchPlayerInfo, self)
    Event.AddListener("c_OnReceiveDeleteFriend", self.c_OnReceiveDeleteFriend, self)
    Event.AddListener("c_DeleteBlacklist", self.c_DeleteBlacklist, self)
    Event.AddListener("c_OnReceiveAddFriendReq", self.c_OnReceiveAddFriendReq, self)

    --self:_initState()
end

function FriendslistCtrl:Hide()
    self:_removeListener()
    --UIPage.Hide(self)
    self.gameObject:SetActive(false)
    self.isActived = false
end

function FriendslistCtrl:_removeListener()
    -- Listen to the model layer network callback
    Event.RemoveListener("c_OnReceiveSearchPlayerInfo", self.c_OnReceiveSearchPlayerInfo, self)
    Event.RemoveListener("c_OnReceiveDeleteFriend", self.c_OnReceiveDeleteFriend, self)
    Event.RemoveListener("c_DeleteBlacklist", self.c_DeleteBlacklist, self)
    Event.RemoveListener("c_OnReceiveAddFriendReq", self.c_OnReceiveAddFriendReq, self)
end

--Required data for initial first entry
function FriendslistCtrl:_initState()
    local type = self.m_data.type
    FriendslistCtrl.type = self.m_data.type
    --Friend interface data refresh
    FriendslistCtrl.friendInfo = {}

    if type == 2 then
        FriendslistPanel.nullImageText.text = GetLanguage(13020005)
        FriendslistPanel.panelNameText.text = GetLanguage(13020001) --"MANAGE"
        FriendslistPanel.blacklistNumberImage:SetActive(false)
        FriendslistPanel.blacklistNumberText.text = ""
        FriendslistPanel.searchInputField:SetActive(false)
        FriendslistPanel.listScrollView.offsetMax = Vector2.New(0,-60)

        if FriendsCtrl.friendInfo then
            FriendslistCtrl.friendInfo = FriendsCtrl.friendInfo
            self:_showNullImageByData()
            FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
        else
            self:_showNullImage(true)
            FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, 0)
        end
    elseif type == 3 then
        FriendslistPanel.nullImageText.text = GetLanguage(13030005)
        FriendslistPanel.panelNameText.text = GetLanguage(13030001) --"BLACK LIST"
        FriendslistPanel.blacklistNumberImage:SetActive(false)
        FriendslistPanel.searchInputField:SetActive(false)
        FriendslistPanel.listScrollView.offsetMax = Vector2.New(0,-30) -- -88
        --self:_showBlacklistNum()

        local blacklist = DataManager.GetMyBlacklist()
        if blacklist[1] then
            FriendslistCtrl.friendInfo = blacklist
            self:_showNullImage(false)
            FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
        else
            self:_showNullImage(true)
            FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, 0)
        end
    elseif type == 4 then
        if FriendslistCtrl.static.isAddfriends then
            FriendslistCtrl.static.isAddfriends = false
        else
            FriendslistPanel.searchInputFieldPlaceholder.text = GetLanguage(13040008)
            FriendslistPanel.panelNameText.text = GetLanguage(13040001) --"ADD NEW FRIENDS"
            FriendslistPanel.blacklistNumberImage:SetActive(false)
            FriendslistPanel.blacklistNumberText.text = ""
            --Display and clear the search box
            FriendslistPanel.searchInputField:SetActive(true)
            FriendslistPanel.searchInputField:GetComponent("InputField").text = ""
            FriendslistPanel.listScrollView.offsetMax = Vector2.New(0,-120)

            FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, 0)
            self:_showNullImage(false)
        end
    elseif type == 5 then
        FriendslistPanel.nullImageText.text = GetLanguage(13050004)
        FriendslistPanel.panelNameText.text = GetLanguage(13050001) --"APPLICATION LIST"
        FriendslistPanel.blacklistNumberImage:SetActive(false)
        FriendslistPanel.blacklistNumberText.text = ""
        FriendslistPanel.searchInputField:SetActive(false)
        FriendslistPanel.listScrollView.offsetMax = Vector2.New(0,-30)

        FriendslistCtrl.friendInfo = DataManager.GetMyFriendsApply()
        FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
        self:_showNullImageByData()
    end
end

function FriendslistCtrl:OnSearch(go)
    PlayMusEff(1002)
    local text = FriendslistPanel.searchInputField:GetComponent("InputField").text
    if text == "" then
        return
    end
    Event.Brocast("m_SearchPlayer", text)
end

-- Set up a blank display
function FriendslistCtrl:_showNullImage(isShow)
    FriendslistPanel.nullImage.localScale = isShow and Vector3.one or Vector3.zero
end

-- Show blank according to data
function FriendslistCtrl:_showNullImageByData()
    if #FriendslistCtrl.friendInfo == 0 then
        self:_showNullImage(true)
    else
        self:_showNullImage(false)
    end
end

FriendslistCtrl.static.FriendsProvideData = function(transform, idx)
    idx = idx + 1
    local transformId = transform:GetInstanceID()
    if FriendslistCtrl.static.friendsListItemTab[transformId] then
        FriendslistCtrl.static.friendsListItemTab[transformId]:CloseAvatar()
    end
    FriendslistCtrl.static.friendsListItemTab[transformId] = FriendsItem:new(idx, FriendslistCtrl.type, FriendslistCtrl.luaBehaviour, transform, FriendslistCtrl.friendInfo[idx])
end

FriendslistCtrl.static.FriendsClearData = function(transform)
end

function FriendslistCtrl:_refreshItem(data)
    self:_showNullImageByData()
    FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, data)
end

function FriendslistCtrl:_showBlacklistNum()
    local blacklistNum = DataManager.GetMyBlacklist()
    FriendslistPanel.blacklistNumberText.text = #blacklistNum > 0 and #blacklistNum or "0"
end

-- Network callback
function FriendslistCtrl:c_OnReceiveSearchPlayerInfo(friendsData)
    if friendsData and friendsData.info then
        FriendslistCtrl.friendInfo = friendsData.info
        self:_showNullImage(false)
        FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
    else
        FriendslistCtrl.friendInfo = {}

        FriendslistPanel.nullImageText.text = GetLanguage(13040005)
        self:_showNullImage(true)
        FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, 0)
    end
end

function FriendslistCtrl:c_OnReceiveDeleteFriend(friendsId)
    -- delete data
    for i, v in ipairs(FriendslistCtrl.friendInfo) do
        if v.id == friendsId.fId then
            table.remove(FriendslistCtrl.friendInfo, i)
            break
        end
    end

    --Refresh the interface
    self:_showNullImageByData()
    FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)

    -- Multilingual prompt to delete friend
    if friendsId.id == DataManager.GetMyOwnerID() then
        Event.Brocast("SmallPop",GetLanguage(13020004),60)
    end
end

function FriendslistCtrl:c_DeleteBlacklist(friendsId)
    if friendsId.id then
        self:_showBlacklistNum()
        self:_showNullImageByData()
        FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
        Event.Brocast("SmallPop",GetLanguage(13030004),60)
    end
end

function FriendslistCtrl:c_OnReceiveAddFriendReq(requestFriend)
    if self.m_data.type == 5 then
        FriendslistCtrl.friendInfo = DataManager.GetMyFriendsApply()
        self:_showNullImageByData()
        FriendslistPanel.friendsView:ActiveLoopScroll(self.friendsSource, #FriendslistCtrl.friendInfo)
    end
end
