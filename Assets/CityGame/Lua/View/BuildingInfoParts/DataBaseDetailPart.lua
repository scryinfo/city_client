---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2019/7/25 15:05
--- 市场数据DetailPart
DataBaseDetailPart = class('DataBaseDetailPart', BasePartDetail)
--
function DataBaseDetailPart:PrefabName()
    return "DataBaseDetailPart"
end
--
function  DataBaseDetailPart:_InitEvent()
    Event.AddListener("part_UserData",self.UserData,self)
end
--
function DataBaseDetailPart:_InitClick(mainPanelLuaBehaviour)
    self.m_LuaBehaviour = mainPanelLuaBehaviour
end
--
function DataBaseDetailPart:_ResetTransform()
    if self.dataBaseItem then
        for i, v in pairs(self.dataBaseItem) do
            destroy(v.prefab.gameObject)
        end
    end
    self.dataBaseItem = {}
end
--
function DataBaseDetailPart:_RemoveEvent()
    Event.RemoveListener("part_UserData",self.UserData,self)
    Event.RemoveListener("c_DataBase",self.n_OnDataBase,self)
end
--
function DataBaseDetailPart:_RemoveClick()
end

function DataBaseDetailPart:Show(data)
    BasePartDetail.Show(self,data)
    Event.AddListener("part_SurveyLineUpData",self.SurveyLineUpData,self)
    Event.AddListener("c_DataBase",self.n_OnDataBase,self)
    DataManager.ModelSendNetMes("gscode.OpCode", "getScienceStorageData","gs.Id",{id = data.info.id})
end

function DataBaseDetailPart:Hide()
    BasePartDetail.Hide(self)
    Event.RemoveListener("part_SurveyLineUpData",self.SurveyLineUpData,self)
    Event.RemoveListener("c_DataBase",self.n_OnDataBase,self)
    self.scrollView.gameObject:SetActive(false)
    if self.dataBaseItem then
        for i, v in pairs(self.dataBaseItem) do
            destroy(v.prefab.gameObject)
        end
    end
    self.dataBaseItem = {}
end
--
function DataBaseDetailPart:RefreshData(data)
    if data == nil then
        return
    end
    self.m_data = data

    --多語言
    self.emptyText.text = GetLanguage(27040001)
end

--
function DataBaseDetailPart:_InitTransform()
    self:_getComponent(self.transform)

end
--
function DataBaseDetailPart:_getComponent(transform)
    self.empty = transform:Find("contentRoot/empty")
    self.emptyText = transform:Find("contentRoot/empty/Image/Text"):GetComponent("Text")
    self.scrollView = transform:Find("contentRoot/Scroll View")
    self.content = transform:Find("contentRoot/Scroll View/Viewport/Content"):GetComponent("RectTransform")
    self.dataBaseCardItem = transform:Find("contentRoot/Scroll View/Viewport/Content/DataBaseCardItem").gameObject
end
--
function DataBaseDetailPart:_initFunc()

end

--服务器回调
function DataBaseDetailPart:n_OnDataBase(info)
    if info.store == nil then
        self.empty.localScale = Vector3.one
        self.scrollView.gameObject:SetActive(false)
    else
        self.empty.localScale = Vector3.zero
        self.scrollView.gameObject:SetActive(true)
        if info.store then
            self.dataBaseItem = {}
            for i, v in ipairs(info.store) do
               local prefab = self:createPrefab(self.dataBaseCardItem,self.content)
                self.dataBaseItem[i] = DataBaseCardItem:new(self.m_LuaBehaviour,prefab,v,info.buildingId,DataType.DataBase)
            end
        end
    end
end

--调查线变换回调
function DataBaseDetailPart:SurveyLineUpData(info)
    if self.dataBaseItem and next(self.dataBaseItem) ~=nil then
        local newStore = true
        for i, v in pairs(self.dataBaseItem) do
            if v.type == info.iKey.id then
                newStore = false
                v.storeNum = info.nowCountInStore
                v.lockedNum = info.nowCountInLocked
                v.num.text = "x" .. info.nowCountInStore + info.nowCountInLocked
            end
        end
        if newStore then
            local data = {itemKey = {id = info.iKey.id},storeNum = info.nowCountInStore,lockedNum = info.nowCountInLocked,}
            local prefab = self:createPrefab(self.dataBaseCardItem,self.content)
            local temp = DataBaseCardItem:new(self.m_LuaBehaviour,prefab,data,info.buildingId,DataType.DataBase)
            table.insert(self.dataBaseItem,temp)
        end
    else
        self.empty.localScale = Vector3.zero
        self.scrollView.gameObject:SetActive(true)
        local data = {itemKey = {id = info.iKey.id},storeNum = info.nowCountInStore,lockedNum = info.nowCountInLocked,}
        self.dataBaseItem = {}
        local prefab = self:createPrefab(self.dataBaseCardItem,self.content)
        local temp = DataBaseCardItem:new(self.m_LuaBehaviour,prefab,data,info.buildingId,DataType.DataBase)
        table.insert(self.dataBaseItem,temp)
    end
end

--使用点数回调
function DataBaseDetailPart:UserData(info)
    local del
    local index
    for i, v in pairs(self.dataBaseItem) do
        if v.type == info.itemId then
            v.storeNum = v.storeNum - info.num
            v.num.text = "x" .. (v.storeNum + v.lockedNum)
            if v.storeNum + v.lockedNum == 0 then
                del = true
                index = i
                destroy(self.dataBaseItem[i].prefab.gameObject)
            end
            break
        end
    end
    if del then
        table.remove(self.dataBaseItem,index)
    end
    if next(self.dataBaseItem) == nil then
        self.empty.localScale = Vector3.one
        self.scrollView.gameObject:SetActive(false)
    end
end

function DataBaseDetailPart:createPrefab(prefab,itemRoot)
    local obj = UnityEngine.GameObject.Instantiate(prefab)
    local objRect = obj.transform:GetComponent("RectTransform")
    obj.transform:SetParent(itemRoot.transform)
    objRect.transform.localScale = Vector3.one
    objRect.transform.localPosition = Vector3.zero
    obj:SetActive(true)
    return obj
end