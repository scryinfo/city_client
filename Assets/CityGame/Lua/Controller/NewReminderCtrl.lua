---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by password.
--- DateTime: 2019/5/22 10:32
---New version prompt box Ctrl
NewReminderCtrl = class('NewReminderCtrl',UIPanel)
UIPanel:ResgisterOpen(NewReminderCtrl)

local reminderBehaviour;

function  NewReminderCtrl:bundleName()
    return "Assets/CityGame/Resources/View/NewReminderPanel.prefab"
end

function NewReminderCtrl:initialize()
    --UIPanel.initialize(self,UIType.Normal,UIMode.HideOther,UICollider.None)--You can go back and hide other panels after the UI opens
    UIPanel.initialize(self,UIType.PopUp,UIMode.NeedBack,UICollider.None)--Can go back, after the UI is opened, other UI is not hidden
end

function NewReminderCtrl:OnCreate(obj)
    UIPanel.OnCreate(self,obj)

end

function NewReminderCtrl:Awake()
    reminderBehaviour = self.gameObject:GetComponent('LuaBehaviour');
    reminderBehaviour:AddClick(NewReminderPanel.close,self.OnClose,self)
    reminderBehaviour:AddClick(NewReminderPanel.selectConfirm,self.OnSelectConfirm,self)
    reminderBehaviour:AddClick(NewReminderPanel.notConfirm,self.OnNotConfirm,self)
end

function NewReminderCtrl:Active()
    UIPanel.Active(self)
end

function NewReminderCtrl:Refresh()
    if self.m_data ~= nil then
        if self.m_data.ReminderType == ReminderType.Common then
            if self.m_data.name then
                NewReminderPanel.name.text = GetLanguage(self.m_data.name)
            else
                NewReminderPanel.name.text = GetLanguage(10040004)
            end
            NewReminderPanel.poptitle.color = getColorByInt(84,107,203,255)
        elseif self.m_data.ReminderType == ReminderType.Warning then
            if self.m_data.name then
                NewReminderPanel.name.text = GetLanguage(self.m_data.name)
            else
                NewReminderPanel.name.text = GetLanguage(10040004)
            end
            NewReminderPanel.poptitle.color = getColorByInt(197,67,67,255)
        elseif self.m_data.ReminderType == ReminderType.Succeed then
            if self.m_data.name then
                NewReminderPanel.name.text = GetLanguage(self.m_data.name)
            else
                NewReminderPanel.name.text = GetLanguage(28040022)
            end
            NewReminderPanel.poptitle.color = getColorByInt(225,158,29,255)
        end
        if self.m_data.ReminderSelectType == ReminderSelectType.Select then
            NewReminderPanel.select.localScale = Vector3.one
            NewReminderPanel.notChoose.localScale = Vector3.zero
        elseif self.m_data.ReminderSelectType == ReminderSelectType.NotChoose then
            NewReminderPanel.select.localScale = Vector3.zero
            NewReminderPanel.notChoose.localScale = Vector3.one
        end
        NewReminderPanel.content.text = self.m_data.content
    end
end

function NewReminderCtrl:Hide()
    UIPanel.Hide(self)
end

--return
function NewReminderCtrl:OnClose(go)
    PlayMusEff(1002)
    UIPanel.ClosePage()
    if go.m_data.close then
        go.m_data:close()
        go.m_data.close = nil
    end
end

--Click on the selective OK (with cancel button)
function NewReminderCtrl:OnSelectConfirm(go)
    PlayMusEff(1002)
    UIPanel.ClosePage()
    if go.m_data.func then
        go.m_data:func()
        go.m_data.func = nil
    end
end

--Click on non-selective OK (no cancel button)
function NewReminderCtrl:OnNotConfirm(go)
    PlayMusEff(1002)
    UIPanel.ClosePage()
    if go.m_data.func then
        go.m_data:func()
        go.m_data.func = nil
    end
end