---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2019/3/5 15:26
---
MapModel = {}
local pbl = pbl

--启动事件--
function MapModel.registerNetMsg()
    --网络回调注册
    CityEngineLua.Message:registerNetMsg(pbl.enum("gscode.OpCode","queryMarketSummary"), MapModel.n_OnReceiveQueryMarketSummary)
    CityEngineLua.Message:registerNetMsg(pbl.enum("gscode.OpCode","queryGroundSummary"), MapModel.n_OnReceiveGroundTransSummary)
    CityEngineLua.Message:registerNetMsg(pbl.enum("gscode.OpCode","queryMarketDetail"), MapModel.n_OnReceiveQueryMarketDetail)
end


--- 客户端请求 ---
--请求原料商品搜索摘要
function MapModel.m_ReqQueryMarketSummary(itemId)
    if itemId ~= nil then
        DataManager.ModelSendNetMes("gscode.OpCode", "queryMarketSummary","gs.Num",{ num = itemId})
    end
end
--请求土地交易搜索摘要
function MapModel.m_ReqGroundTransSummary()
    local msgId = pbl.enum("gscode.OpCode", "queryGroundSummary")
    CityEngineLua.Bundle:newAndSendMsg(msgId, nil)
end

--请求原料商品搜索详情
function MapModel.m_ReqMarketDetail(gridIndexPos, itemId)
    local data = { centerIdx = {x = gridIndexPos.x, y = gridIndexPos.y}, itemId = itemId}
    DataManager.ModelSendNetMes("gscode.OpCode", "queryMarketDetail","gs.QueryMarketDetail", data)
end

--- 回调 ---
--原料商品搜索摘要
function MapModel.n_OnReceiveQueryMarketSummary(stream)
    if stream == nil or stream == "" then
        return
    end
    local data = assert(pbl.decode("gs.MarketSummary", stream), "MapModel.n_OnReceiveQueryMarketSummary: stream == nil")
    MapCtrl._receiveMarketSummary(MapCtrl, data)
end
--土地交易搜索摘要
function MapModel.n_OnReceiveGroundTransSummary(stream)
    if stream == nil or stream == "" then
        return
    end
    local data = assert(pbl.decode("gs.GroundSummary", stream), "MapModel.n_OnReceiveGroundTransSummary: stream == nil")
    MapCtrl._receiveGroundTransSummary(MapCtrl, data)
end
--原料商品搜索详情
function MapModel.n_OnReceiveQueryMarketDetail(stream)
    if stream == nil or stream == "" then
        return
    end
    local data = assert(pbl.decode("gs.MarketDetail", stream), "MapModel.n_OnReceiveQueryMarketDetail: stream == nil")
    MapCtrl._receiveMarketDetail(MapCtrl, data)
end