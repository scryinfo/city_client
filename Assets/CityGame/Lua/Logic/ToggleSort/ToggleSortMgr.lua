---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/20 9:58

---排序类型，每个界面可能不同，需要添加
SortEventType =
{
    ExchangeSort = 0,
}
SortToggleType =
{
    Default = 0,
    ToggleType01 = 1,
    ToggleType02 = 2,
    ToggleType03 = 3,
    ToggleType04 = 4,
    ToggleType05 = 5,
    ToggleType06 = 6,
    ToggleType07 = 7,
    ToggleType08 = 8,
}

ToggleSortMgr = class('ToggleSortMgr')

--第二个参数是对应传进来的哪个界面，需要在上面的SortEventType中定义
--第三个是默认选择哪个排序，传入int值，从1开始
function ToggleSortMgr:initialize(transform, sortEventType, defaultSortType)
    self.sortEventType = sortEventType
    self.defaultSortType = defaultSortType

    self.toggleSortItems = {}
    self.toggleObjs = {}
    local childCount = transform.childCount
    for i = 1, childCount do
        local tempToggleObj = transform:Find("toggle0"..i):GetComponent("Toggle")
        local tempSortItem = ToggleSortItem:new(tempToggleObj.transform)

        tempToggleObj.onValueChanged:AddListener(function (isOn)
            self:_toggleValueChange(isOn, i, tempSortItem, self.sortEventType)
        end)

        self.toggleObjs[i] = tempToggleObj
        self.toggleSortItems[i] = tempSortItem
    end
    self.sortData = {}
end
--重置为默认排序
function ToggleSortMgr:_reSetSortData()
    self.sortData.sortItemType = SortToggleType.Default
    self.toggleObjs[self.defaultSortType].isOn = false

    for i, toggleItem in ipairs(self.toggleSortItems) do
        if i ~= self.defaultSortType then
            self:_toggleValueChange(false, i, toggleItem, self.sortEventType)
        end
    end

    self.toggleObjs[self.defaultSortType].isOn = true
end

--根据界面类型选择触发的事件
function ToggleSortMgr:_switchEvent(sortEventType)
    if sortEventType == SortEventType.ExchangeSort then
        Event.Brocast("c_onExchangeSort", self.sortData)
    else

    end
end

function ToggleSortMgr:_toggleValueChange(isOn, index, sortItem, sortEventType)
    if isOn then
        if self.sortData.sortItemType ~= index then
            sortItem:BiggerShow()
            self.sortData.isSmaller = true
            self.sortData.sortItemType = index
            self:_switchEvent(sortEventType)
        else
            if self.sortData.isSmaller then
                sortItem:SmallerShow()
            else
                sortItem:BiggerShow()
            end
            self.sortData.isSmaller = not self.sortData.isSmaller
            self:_switchEvent(sortEventType)
        end
    else
        sortItem:CommonShow()
    end
end
