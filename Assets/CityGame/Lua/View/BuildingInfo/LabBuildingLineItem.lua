---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/28 16:55
---
LabBuildingLineItem = class('LabBuildingLineItem')
LabBuildingLineItem.static.TOTAL_H = 815  --The height of the entire Item
LabBuildingLineItem.static.CONTENT_H = 740  --Display height
LabBuildingLineItem.static.TOP_H = 100  --the height of the top bar

LabBuildingLineItem.static.LabBuildingInventionItemPath = "View/Items/LaboratoryItems/LabBuildingInventionItem"  --invention
LabBuildingLineItem.static.LabBuildingResearchItemPath = "View/Items/LaboratoryItems/LabBuildingResearchItem"  --the study

function LabBuildingLineItem:initialize(data, viewRect, mainPanelLuaBehaviour, toggleData)
    self.viewRect = viewRect
    self.mainPanelLuaBehaviour = mainPanelLuaBehaviour
    self.data = data
    self.toggleData = toggleData  --Located in the first few of toggle, left or right

    self.contentRoot = self.viewRect.transform:Find("contentRoot"):GetComponent("RectTransform")  --Content Rect
    self.loopScroll = self.viewRect.transform:Find("contentRoot/scroll"):GetComponent("ActiveLoopScrollRect")  --Sliding multiplexing component
    self.openStateTran = self.viewRect.transform:Find("topRoot/open")
    self.openBtn = self.viewRect.transform:Find("topRoot/open/openBtn"):GetComponent("Button")
    self.doSthImg = self.viewRect.transform:Find("topRoot/open/openBtn/doSthImg")
    self.otherOpenImg = self.viewRect.transform:Find("topRoot/open/openBtn/otherOpenImg")

    if self.data.isOther then
        self.openBtn.transform.localScale = Vector3.zero
    else
        self.openBtn.transform.localScale = Vector3.one
    end

    --Sliding multiplexing section
    self.itemSource = UnityEngine.UI.LoopScrollDataSource.New()  --the study
    self.itemSource.mProvideData = LabBuildingLineItem.static.provideData
    self.itemSource.mClearData = LabBuildingLineItem.static.clearData
    self:_initData()
end
--Initialization data
function LabBuildingLineItem:_initData()
    LabBuildingLineItem.static.items = {}
    local prefabList = {}
    for i, dataItem in ipairs(self.data.lines) do
        if dataItem.type == 0 then
            prefabList[#prefabList + 1] = LabBuildingLineItem.static.LabBuildingResearchItemPath
        elseif dataItem.type == 1 then
            prefabList[#prefabList + 1] = LabBuildingLineItem.static.LabBuildingInventionItemPath
        end
    end
    LabBuildingLineItem.static.lineInfoData = self.data.lines
    self.loopScroll:ActiveDiffItemLoop(self.itemSource, prefabList)  --Sliding part

    if self.data.isOther then
        self.doSthImg.localScale = Vector3.zero
        self.otherOpenImg.localScale = Vector3.one
    else
        self.doSthImg.localScale = Vector3.one
        self.otherOpenImg.localScale = Vector3.zero
    end
    self.mainPanelLuaBehaviour:AddClick(self.openBtn.gameObject, function()
        ct.OpenCtrl("LabScientificLineCtrl", {insId = self.data.insId})  --Open the technology line interface and pass in the instance id
    end, self)
end

---Static method
LabBuildingLineItem.static.provideData = function(transform, idx)
    idx = idx + 1
    local data = LabBuildingLineItem.static.lineInfoData[idx]
    if data.type == 0 then
        LabBuildingLineItem.static.items[#LabBuildingLineItem.static.items + 1] = LabBuildingResearchItem:new(LabBuildingLineItem.static.lineInfoData[idx], transform)
    elseif data.type == 1 then
        LabBuildingLineItem.static.items[#LabBuildingLineItem.static.items + 1] = LabBuildingInventionItem:new(LabBuildingLineItem.static.lineInfoData[idx], transform)
    end
end
LabBuildingLineItem.static.clearData = function(transform)
end
---

--Get the number of clicks
function LabBuildingLineItem:getToggleIndex()
    return self.toggleData.index
end

--turn on
function LabBuildingLineItem:openToggleItem(targetMovePos)
    self.buildingInfoToggleState = BuildingInfoToggleState.Open
    self.viewRect:DOAnchorPos(targetMovePos, BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic)
    self.contentRoot:DOSizeDelta(Vector2.New(self.contentRoot.sizeDelta.x, LabBuildingLineItem.static.CONTENT_H), BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic)

    return Vector2.New(targetMovePos.x, targetMovePos.y - LabBuildingLineItem.static.TOTAL_H)
end

--shut down
function LabBuildingLineItem:closeToggleItem(targetMovePos)

    self.buildingInfoToggleState = BuildingInfoToggleState.Close
    self.contentRoot:DOSizeDelta(Vector2.New(self.contentRoot.sizeDelta.x, 0), BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic)
    self.viewRect:DOAnchorPos(targetMovePos, BuildingInfoToggleGroupMgr.static.ITEM_MOVE_TIME):SetEase(DG.Tweening.Ease.OutCubic)

    return Vector2.New(targetMovePos.x, targetMovePos.y - LabBuildingLineItem.static.TOP_H)
end

--Refresh data
function LabBuildingLineItem:updateInfo(data)
    self.data.lines = data.lines
    self:_initData()
end

function LabBuildingLineItem:destory()
    destroy(self.viewRect.gameObject)
end