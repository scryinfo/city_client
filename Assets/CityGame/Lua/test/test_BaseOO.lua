---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by cyz_scry.
--- DateTime: 2018/8/20 18:08
---

local class = require 'Framework/class'

Person = class('Person') --this is the same as class('Person', Object) or Object:subclass('Person') 没有基类的类，默认基类是Object，不需要写而已
function Person:initialize(name)
    self.name = name
end
function Person:speak()
    print('Hi, I am ' .. self.name ..'.')
end

AgedPerson = class('AgedPerson', Person) -- or Person:subclass('AgedPerson') 派生新的类
AgedPerson.static.ADULT_AGE = 18 --this is a class variable 支持类的静态成员变量
function AgedPerson:initialize(name, age)
    Person.initialize(self, name) -- this calls the parent's constructor (Person.initialize) on self 这里相当于super方法的调用 ，把自己作为参数传递给基类的方法，复用基类的 speak
    self.age = age
end
function AgedPerson:speak()
    Person.speak(self) -- prints "Hi, I am xx."
    if(self.age < AgedPerson.ADULT_AGE) then --accessing a class variable from an instance method 在实例中访问静态成员
        print('I am underaged.')
    else
        print('I am an adult.')
    end
end