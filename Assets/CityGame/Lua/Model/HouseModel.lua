---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/9/21 11:23
---
HouseModel  = class('HouseModel',ModelBase)
local pbl = pbl

function HouseModel:initialize(insId)
    self.insId = insId
    self:OnCreate()
end


--启动事件--
function HouseModel:OnCreate()
    --网络回调注册
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","detailApartment","gs.Apartment",self.n_OnReceiveHouseDetailInfo)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","setRent","gs.SetRent",self.n_OnReceiveHouseRentChange)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","setSalary","gs.SetSalary",self.n_OnReceiveHouseSalaryChange)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","startBusiness","gs.Id",self.n_OnReceiveOpenBusiness)
    --
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","closeContract","gs.Id",self.n_OnReceiveCloseContract)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","settingContract","gs.ContractSetting",self.n_OnReceiveChangeContract)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","cancelContract","gs.Id",self.n_OnReceiveCancelContract)
    DataManager.ModelRegisterNetMsg(self.insId,"gscode.OpCode","signContract","gs.Contract",self.n_OnReceiveSignContract)

    --本地的回调注册
    Event.AddListener("m_ReqHouseChangeRent", self.m_ReqHouseChangeRent, self)
    Event.AddListener("m_ReqHouseSetSalary", self.m_ReqHouseSetSalary, self)
end


--- 客户端请求 ---
--获取建筑详情
function HouseModel:m_ReqHouseDetailInfo(buildingId)
    DataManager.ModelSendNetMes("gscode.OpCode", "detailApartment","gs.Id",{ id = buildingId})
end
--改变建筑名字
function HouseModel:m_ReqChangeHouseName(id, name)
    DataManager.ModelSendNetMes("gscode.OpCode", "setBuildingInfo","gs.SetBuildingInfo",{ id = id, name = name})
end

--- 回调 ---
--住宅详情
function HouseModel:n_OnReceiveHouseDetailInfo(houseDetailInfo)
    DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_receiveHouseDetailInfo',houseDetailInfo)
end
--房租改变
function HouseModel:n_OnReceiveHouseRentChange(data)
    DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_refreshRent', data)
end
--员工工资改变
function HouseModel:n_OnReceiveHouseSalaryChange(data)
    DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_refreshSalary', data)
end
--开业成功，再次请求建筑详情
function HouseModel:n_OnReceiveOpenBusiness(data)
    if data ~= nil and data.id == self.insId then
        self:m_ReqHouseDetailInfo(self.insId)
        Event.Brocast("SmallPop", GetLanguage(40010020), 300)  --开业成功提示
    end
end
--
function HouseModel:n_OnReceiveCloseContract(data)
    if data ~= nil and data.id == self.insId then
        DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_selfCloseSign', data)
    end
end
--
function HouseModel:n_OnReceiveChangeContract(data)
    if data ~= nil and data.buildingId == self.insId then
        DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_changeSignInfo', data)
    end
end
--
function HouseModel:n_OnReceiveCancelContract(data)
    if data ~= nil and data.id == self.insId then
        DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_selfCancelSign', data)
    end
end
--签约成功
function HouseModel:n_OnReceiveSignContract(data)
    if data ~= nil and data.buildingId == self.insId then
        DataManager.ControllerRpcNoRet(self.insId,"HouseCtrl", '_signSuccess', data)
    end
end