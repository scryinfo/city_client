---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2019/1/16 10:03
---
UIBubbleTransAndBuildingItem = class('UIBubbleTransAndBuildingItem')
local selfBoxwidth = 200    --给出200像素的富裕空间  其实只需要最大宽高的一半
local minAnchorX = nil
local maxAnchorX = nil
local minAnchorY = nil
local maxAnchorY = nil
function UIBubbleTransAndBuildingItem:initialize(data, obj)
    self.data = data
    self.gameObject = obj
    self.rect = obj.transform:GetComponent("RectTransform")

    self.groundSell = obj.transform:Find("groundSell")
    self.groundRent = obj.transform:Find("groundRent")
    self.selfBuilding = obj.transform:Find("selfBuilding")

    self.sellBtn = obj.transform:Find("groundSell/sellBtn"):GetComponent("Button")
    self.sellText01 = obj.transform:Find("groundSell/sellBtn/Text"):GetComponent("Text")
    self.rentBtn = obj.transform:Find("groundRent/rentBtn"):GetComponent("Button")
    self.rentText02 = obj.transform:Find("groundRent/rentBtn/Text"):GetComponent("Text")

    self.sellBtn.onClick:RemoveAllListeners()
    self.rentBtn.onClick:RemoveAllListeners()
    self.sellBtn.onClick:AddListener(function ()
        self:_openBubbleFunc()
    end)
    self.rentBtn.onClick:AddListener(function ()
        self:_openBubbleFunc()
    end)

    self:_initFunc(data)
    Event.AddListener("c_RefreshLateUpdate", self.LateUpdate, self)
    Event.AddListener("c_BubbleAllHide", self._hideFunc, self)
    Event.AddListener("c_BubbleAllShow", self._showFunc, self)
    Event.AddListener("c_ChangeLanguage", self._changeLanguageFunc, self)
    --显示范围内才显示
    if minAnchorX == nil then
        minAnchorX = - selfBoxwidth
        maxAnchorX = UnityEngine.Screen.width * Game.ScreenRatio + selfBoxwidth
        minAnchorY = - selfBoxwidth
        maxAnchorY = UnityEngine.Screen.height * Game.ScreenRatio + selfBoxwidth
    end
    if self.pos ~= nil and self.data ~= nil then
        self.rect.anchoredPosition = ScreenPosTurnActualPos(UnityEngine.Camera.main:WorldToScreenPoint(self.pos + self.data.uiCenterPos))
    end
    self.m_anchoredPos =  self.rect.anchoredPosition
    self:ShowOrHideSelf(self:JudgeSelfIsShow())
end


--判断是否在屏幕内
function UIBubbleTransAndBuildingItem:JudgeSelfIsShow()
    if  self.m_anchoredPos ~= nil then
        if self.m_anchoredPos.x >= minAnchorX and  self.m_anchoredPos.x <= maxAnchorX and self.m_anchoredPos.y >= minAnchorY and  self.m_anchoredPos.y <= maxAnchorY  then
            return true
        end
    end
    return false
end

--判断是否在屏幕内
function UIBubbleTransAndBuildingItem:IsMove()
    --先判断是否是在屏幕显示范围内，做显示/隐藏处理
    self:ShowOrHideSelf(self:JudgeSelfIsShow())
    --根据是否在屏幕范围内显示隐藏自身
    if self.IsShow then
        self.rect.anchoredPosition = self.m_anchoredPos
    end
end

function UIBubbleTransAndBuildingItem:ShowOrHideSelf(tempBool)
    if type(tempBool) == "boolean" and tempBool ~= self.IsShow then
        self.IsShow = tempBool
        self.gameObject:SetActive(self.IsShow)
    end
end

function UIBubbleTransAndBuildingItem:_initFunc(data)
    --如果是交易气泡
    if data.bubbleType == UIBubbleType.GroundTrans then
        self:_setBubbleState(data.groundState)
    elseif data.bubbleType == UIBubbleType.BuildingSelf then
        self:_setBubbleState(data.bubbleType)
    end
    self.pos = TerrainManager.BlockIDTurnPosition(data.blockId)
    if data.uiCenterPos == nil then
        self.data.uiCenterPos = Vector3.New(0.5, 0, 0.5)
    else
        self.data.uiCenterPos = Vector3.New(self.data.uiCenterPos[1], self.data.uiCenterPos[2], self.data.uiCenterPos[3])
    end
end
--外部获取有效的信息
function UIBubbleTransAndBuildingItem:getValuableData()
    if self.data.bubbleType == UIBubbleType.GroundTrans then
        local data = {blockId = self.data.blockId, groundState = self.data.groundState}
        return data
    end
end

function UIBubbleTransAndBuildingItem:_hideFunc()
    if self.gameObject ~= nil then
        self.gameObject.transform.localScale = Vector3.zero
    end
end
function UIBubbleTransAndBuildingItem:_showFunc()
    if self.gameObject ~= nil then
        self.gameObject.transform.localScale = Vector3.one
    end
end
function UIBubbleTransAndBuildingItem:_changeLanguageFunc()
    if self.data.groundState == GroundTransState.Sell then
        self.sellText01.text = GetLanguage(11020004)
    elseif self.data.groundState == GroundTransState.Rent then
        self.rentText02.text = GetLanguage(11020003)
    end
end

function UIBubbleTransAndBuildingItem:_setBubbleState(state)
    if state == GroundTransState.Sell then
        --self.groundSell.localScale = Vector3.one
        --self.groundRent.localScale = Vector3.zero
        --self.selfBuilding.localScale = Vector3.zero
        self.groundSell.gameObject:SetActive(true)
        self.groundRent.gameObject:SetActive(false)
        self.selfBuilding.gameObject:SetActive(false)
        self.sellText01.text = GetLanguage(11020004)
    elseif state == GroundTransState.Rent then
        --self.groundRent.localScale = Vector3.one
        --self.groundSell.localScale = Vector3.zero
        --self.selfBuilding.localScale = Vector3.zero
        self.groundRent.gameObject:SetActive(true)
        self.groundSell.gameObject:SetActive(false)
        self.selfBuilding.gameObject:SetActive(false)
        self.rentText02.text = GetLanguage(11020003)
    elseif state == UIBubbleType.BuildingSelf then
        --self.selfBuilding.localScale = Vector3.one
        --self.groundRent.localScale = Vector3.zero
        --self.groundSell.localScale = Vector3.zero
        self.selfBuilding.gameObject:SetActive(true)
        self.groundRent.gameObject:SetActive(false)
        self.groundSell.gameObject:SetActive(false)
    end
end

--点击气泡
function UIBubbleTransAndBuildingItem:_openBubbleFunc()
    ct.OpenCtrl("GroundTransDetailCtrl", {blockId = self.data.blockId})
end

function UIBubbleTransAndBuildingItem:Close()
    Event.RemoveListener("c_RefreshLateUpdate", self.LateUpdate, self)
    Event.RemoveListener("c_BubbleAllHide", self._hideFunc, self)
    Event.RemoveListener("c_BubbleAllShow", self._showFunc, self)
    Event.RemoveListener("c_ChangeLanguage", self._changeLanguageFunc, self)

    --将obj放入对象池
    if self.gameObject ~= nil then
        destroyImmediate(self.gameObject)
    end
    self.gameObject = nil
    self.pos = nil
    self = nil
end

function UIBubbleTransAndBuildingItem:LateUpdate()
    if self.pos ~= nil and self.gameObject ~= nil then
        self.m_anchoredPos  = ScreenPosTurnActualPos(UnityEngine.Camera.main:WorldToScreenPoint(self.pos + self.data.uiCenterPos))
        self:IsMove()
    end
end