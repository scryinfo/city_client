---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljw.
--- DateTime: 2019/4/12 16:37
---

--local this

BuidingWareHouseCtrl = class('BuidingWareHouseCtrl',UIPanel)
UIPanel:ResgisterOpen(BuidingWareHouseCtrl)

--
function BuidingWareHouseCtrl:initialize()
    UIPanel.initialize(self, UIType.Normal, UIMode.HideOther, UICollider.None)
end

--
function BuidingWareHouseCtrl:bundleName()
    return "Assets/CityGame/Resources/View/BuidingWareHousePanel.prefab"
end

--
function BuidingWareHouseCtrl:OnCreate(obj)
    UIPanel.OnCreate(self, obj)
end

--
function BuidingWareHouseCtrl:Awake(go)
    self.gameObject = go
    self.houseBehaviour = self.gameObject:GetComponent('LuaBehaviour')
    self.houseBehaviour:AddClick(BuidingWareHousePanel.closeBtn.gameObject, self._backFunc, self)
    self.houseBehaviour:AddClick(BuidingWareHousePanel.sentspaceBtn.gameObject, self._openFunc, self)
end

--
function BuidingWareHouseCtrl:Refresh()
    if self.m_data.insId then
        self.insId=self.m_data.insId
        DataManager.OpenDetailModel(BuidingWareHouseModel,self.m_data.insId)
        DataManager.DetailModelRpcNoRet(self.m_data.insId, 'm_ReqHouseDetailInfo',self.m_data.insId)
    end
end

--
function BuidingWareHouseCtrl:Active()
    UIPanel.Active(self)
    Event.AddListener("c_BuildingTopChangeData",self._changeItemData,self)
end


--General parts of distribution center
function BuidingWareHouseCtrl:_initData(houseDetailInfo)
    BuidingWareHouseCtrl.static.insId = houseDetailInfo.insId
    if BuidingWareHousePanel.topItem ~= nil then
        BuidingWareHousePanel.topItem:refreshData(houseDetailInfo.info, function ()
            self:_clickCloseBtn(self)
        end)
    end

    local insId = self.m_data.insId
    self.m_data = houseDetailInfo
    self.m_data.insId = insId  --temp
    self.m_data.buildingType = BuildingType.WareHouse

    BuidingWareHousePanel.openBusinessItem:initData(houseDetailInfo.info, BuildingType.WareHouse)  --initialization
    if houseDetailInfo.rentCapacity ~= 0 then
        BuidingWareHousePanel.spaceText.text = houseDetailInfo.rentCapacity - houseDetailInfo.rentUsedCapacity
        BuidingWareHousePanel.timeText.text  = houseDetailInfo.maxHourToRent
        BuidingWareHousePanel.priceText.text = houseDetailInfo.rent
    else
        BuidingWareHousePanel.spaceText.text = houseDetailInfo.rentCapacity
        BuidingWareHousePanel.priceText.text = houseDetailInfo.rent
        BuidingWareHousePanel.timeText.text  = houseDetailInfo.maxHourToRent
    end

    if houseDetailInfo.info.ownerId ~= DataManager.GetMyOwnerID() then  --Determine if you or someone else has opened the interface
        self.m_data.isOther = true
        if self.groupMgr == nil then                                    --Not opened by me
            self.groupMgr = BuildingInfoMainGroupMgr:new(BuidingWareHousePanel.groupTrans, self.houseBehaviour)
            self.groupMgr:AddParts(BuildingSalaryPart,0)
            self.groupMgr:AddParts(BuildingShelfPart, 0.33)
            self.groupMgr:AddParts(TurnoverPart, 0.33)
            self.groupMgr:AddParts(BuildingRentWarehousePart, 0.34)
            --DataManager.DetailModelRpcNoRet(self.m_data.insId, 'm_ReqrentInfo',houseDetailInfo)
            self.groupMgr:RefreshData(self.m_data)
            self.groupMgr:TurnOffAllOptions()
        else
            self.groupMgr:RefreshData(self.m_data)
        end
    else
        self.m_data.isOther = false                                      
            self.groupMgr = BuildingInfoMainGroupMgr:new(BuidingWareHousePanel.groupTrans, self.houseBehaviour)
            self.groupMgr:AddParts(BuildingShelfPart, 0.25)
            self.groupMgr:AddParts(TurnoverPart, 0.25)
            self.groupMgr:AddParts(BuildingSalaryPart, 0.25)
            self.groupMgr:AddParts(BuildingRentWarehousePart, 0.25)
            self.groupMgr:RefreshData(self.m_data)
            self.groupMgr:TurnOffAllOptions()

            self.groupMgr:RefreshData(self.m_data)

    end
end

--
function BuidingWareHouseCtrl:Hide()
    UIPanel.Hide(self)
    Event.RemoveListener("c_BuildingTopChangeData",self._changeItemData,self)
    if self.groupMgr ~= nil then
        self.groupMgr:Destroy()
        self.groupMgr = nil
    end
end

--Close the interface
function BuidingWareHouseCtrl:_backFunc()
    UIPanel.ClosePage()
end

--Change basic building information
function BuidingWareHouseCtrl:_changeItemData(data)
    if data ~= nil and BuidingWareHousePanel.topItem ~= nil then
        BuidingWareHousePanel.topItem:changeItemData(data)
    end
end


--Click the Open button method
function HouseCtrl:_openBuildingBtnFunc(ins)
    PlayMusEff(1002)
    if ins.m_data then
        Event.Brocast("c_beginBuildingInfo", ins.m_data.info, ins.Refresh)
    end
end
--

function BuidingWareHouseCtrl:_refreshlary(data)
    if self.m_data ~= nil then
        if self.m_data.info.state == "OPERATE" then
            Event.Brocast("SmallPop", "设置工资成功", 300)
        end
        self.m_data.info.salary = data.Salary
        self.m_data.info.setSalaryTs = data.ts
        self.groupMgr:RefreshData(self.m_data)
    end
end

function BuidingWareHouseCtrl:_openFunc(data)
    local go =  BuidingWareHousePanel.spaceText.text
    if data.m_data.info.ownerId ~= DataManager.GetMyOwnerID() then
        ct.OpenCtrl("RenTableWareHouseCtrl",data.m_data)
    elseif data.m_data.info.ownerId == DataManager.GetMyOwnerID() and go ~= 0 then
        ct.OpenCtrl("MainRenTableWarehouseCtrl",data.m_data)
    elseif data.m_data.info.ownerId == DataManager.GetMyOwnerID() and go == 0 then
         ct.OpenCtrl("SetRenTableWareHouseCtrl",data.m_data)
    end

end

--Update UI display data
function BuidingWareHouseCtrl:_refreshRentInfo (rentWareHouseInfo)
    BuidingWareHousePanel.spaceText.text = self.m_data.rentCapacity - self.m_data.rentUsedCapacity
    BuidingWareHousePanel.priceText.text = self.m_data.rent
    BuidingWareHousePanel.timeText.text  = self.m_data.maxHourToRent

    --MainRenTableWarehousePanel.spaceText.text = self.m_data.rentCapacity - self.m_data.rentUsedCapacity
    --MainRenTableWarehousePanel.priceText.text = self.m_data.rent
    --MainRenTableWarehousePanel.timeText.text  = self.m_data.maxHourToRent
end




























