---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2019/2/27 18:13
---自己的建筑
MapRightSelfBuildingPage = class('MapRightSelfBuildingPage', MapRightPageBase)
MapRightSelfBuildingPage.moneyColor = "#F4AD07FF"

--初始化方法
function MapRightSelfBuildingPage:initialize(viewRect)
    self.viewRect = viewRect:GetComponent("RectTransform")

    self.closeBtn = self.viewRect.transform:Find("closeBtn"):GetComponent("Button")
    self.goHereBtn = self.viewRect.transform:Find("goHereBtn"):GetComponent("Button")
    self.buildingNameText = self.viewRect.transform:Find("buildingNameText"):GetComponent("Text")
    self.showRoot = self.viewRect.transform:Find("showRoot")

    self.closeBtn.onClick:AddListener(function ()
        self:close()
    end)
    self.goHereBtn.onClick:AddListener(function ()
        self:_goHereBtn()
    end)
    --
    self.goHereText01 = self.viewRect.transform:Find("goHereBtn/Text"):GetComponent("Text")
end
-- old
--function MapRightSelfBuildingPage:refreshData(data)
--    self.viewRect.anchoredPosition = Vector2.zero
--    self.data = data
--
--    local buildingDetail = DataManager.GetSelfBuildingDetailByBlockId(data.buildingId).info
--    self.data.pos = buildingDetail.pos
--    local playerInfo = DataManager.GetMyPersonalHomepageInfo()
--    if playerInfo ~= nil then
--        self.nameText.text = playerInfo.name
--        self.companyText.text = playerInfo.companyName
--        if playerInfo.male == true then
--            self.manIconTran.localScale = Vector3.one
--            self.femaleIconTran.localScale = Vector3.zero
--        else
--            self.manIconTran.localScale = Vector3.zero
--            self.femaleIconTran.localScale = Vector3.one
--        end
--        self.avatar = AvatarManger.GetSmallAvatar(playerInfo.faceId, self.protaitImg.transform,0.2)
--    end
--    self.buildingNameText.text = buildingDetail.name
--    self:openShow()
--end

--
function MapRightSelfBuildingPage:refreshData(data)
    self.viewRect.anchoredPosition = Vector2.zero
    self:_cleanItems()

    local buildingDetail = DataManager.GetSelfBuildingDetailByBlockId(data.buildingId)
    self.data = buildingDetail
    self.buildingNameText.text = buildingDetail.info.name
    local buildingType = GetBuildingTypeById(buildingDetail.info.mId)
    self:_createInfoByType(buildingType)
    self:_sortInfoItems()

    self:openShow()
end
--
function MapRightSelfBuildingPage:_sortInfoItems()
    if self.items == nil or #self.items == 0 then
        return
    end
    local pos = Vector3.zero
    for i, item in ipairs(self.items) do
        item:setPos(pos)
        pos.y = pos.y - 66  --66是item的高度+间隔得来的
    end
end
--
function MapRightSelfBuildingPage:_createInfoByType(buildingType)
    local revenueData = {infoTypeStr = "Revenue", value = ""}  --今日营收
    self.items[#self.items + 1] = self:_createShowItem(revenueData)

    local salaryData = {infoTypeStr = "Salary", value = self.data.info.salary}  --工资
    self.items[#self.items + 1] = self:_createShowItem(salaryData)

    if buildingType == BuildingType.House then
        self:_createHouse()
    elseif buildingType == BuildingType.MaterialFactory then
        self:_createMaterial()
    end
end
--住宅
function MapRightSelfBuildingPage:_createHouse()
    local occStr = string.format("%d/%d", self.data.renter, PlayerBuildingBaseData[self.data.info.mId].npc)
    local occData = {infoTypeStr = "HouseOccupancy", value = occStr}  --入住率
    self.items[#self.items + 1] = self:_createShowItem(occData)

    local rentStr = string.format("<color=%s>E%s</color>/D", MapRightSelfBuildingPage.moneyColor, GetClientPriceString(self.data.rent))
    local rentData = {infoTypeStr = "HouseRent", value = rentStr}  --租金
    self.items[#self.items + 1] = self:_createShowItem(rentData)
end
--原料厂
function MapRightSelfBuildingPage:_createMaterial()
    local used = self:_getWarehouseCapacity(self.data.store)
    local str1 = string.format("%d/%d", used, PlayerBuildingBaseData[self.data.info.mId].storeCapacity)
    local data1 = {infoTypeStr = "Warehouse", value = str1}  --仓库容量
    self.items[#self.items + 1] = self:_createShowItem(data1)

    if self.data.line == nil then  --生产线
        local str2 = GetLanguage(12345678)
        local data2 = {infoTypeStr = "Production", value = str2}
        self.items[#self.items + 1] = self:_createShowItem(data2)
    else
        local detailImgPath = Material[self.data.line[1].itemId].img
        local data2 = {infoTypeStr = "Production", value = GetLanguage(12345678), detailImgPath = detailImgPath}
        self.items[#self.items + 1] = self:_createShowItem(data2, true)
    end
end
--计算仓库容量
function MapRightSelfBuildingPage:_getWarehouseCapacity(store)
    local warehouseNowCount = 0
    local lockedNowCount = 0
    if store.inHand == nil then
        warehouseNowCount = 0
    else
        for key,value in pairs(store.inHand) do
            warehouseNowCount = warehouseNowCount + value.n
        end
    end
    if store.locked == nil then
        lockedNowCount = 0
    else
        for key,value in pairs(store.locked) do
            lockedNowCount = lockedNowCount + value.n
        end
    end
    return warehouseNowCount + lockedNowCount
end
--
function MapRightSelfBuildingPage:_createShowItem(data, hasDetail)
    local obj
    if hasDetail == true then
        obj = MapPanel.prefabPools[MapPanel.MapShowInfoHasImgPoolName]:GetAvailableGameObject()
    else
        obj = MapPanel.prefabPools[MapPanel.MapShowInfoPoolName]:GetAvailableGameObject()
    end
    obj.transform:SetParent(self.showRoot)
    obj.transform.localScale = Vector3.one
    local item = MapRightShowInfoItem:new(obj)
    item:initData(data)
    return item
end
--
function MapRightSelfBuildingPage:_cleanItems()
    if self.items == nil then
        self.items = {}
        return
    end
    for i, item in pairs(self.items) do
        if item:getIsDetail() == true then
            MapPanel.prefabPools[MapPanel.MapShowInfoHasImgPoolName]:RecyclingGameObjectToPool(item.viewRect.gameObject)
        else
            MapPanel.prefabPools[MapPanel.MapShowInfoPoolName]:RecyclingGameObjectToPool(item.viewRect.gameObject)
        end
        item = nil
    end
    self.items = {}
end


--重置状态
function MapRightSelfBuildingPage:openShow()
    self:_language()
    self.viewRect.anchoredPosition = Vector2.zero
end
--多语言
function MapRightSelfBuildingPage:_language()
    --正式代码
    --self.goHereText01.text = GetLanguage()
    self.goHereText01.text = "Go here"
end
--关闭
function MapRightSelfBuildingPage:close()
    self.viewRect.anchoredPosition = Vector2.New(506, 0)
    self:_cleanItems()
end
--去地图上的一个建筑
function MapRightSelfBuildingPage:_goHereBtn()
    MapBubbleManager.GoHereFunc(self.data.info)
    local blockId = TerrainManager.GridIndexTurnBlockID(self.data.info.pos)
    local tempValue = DataManager.GetBaseBuildDataByID(blockId)
    if tempValue ~= nil then
        tempValue:OpenPanel()
        CameraMove.MoveIntoUILayer(blockId)
    end
end