---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuyafang.
--- DateTime: 2018/11/21 15:47
---土地拍卖即将开始气泡
UIBubbleGroundAucSoonItem = class('UIBubbleGroundAucSoonItem')
function UIBubbleGroundAucSoonItem:initialize(data)
    self.data = data
    self.bubbleRect = data.bubbleRect

    local viewTrans = self.bubbleRect.transform
    self.soonTimeText = viewTrans:Find("bgBtn/timeDownRoot/soonTimeText"):GetComponent("Text")
    self.bgBtn = viewTrans:Find("bgBtn"):GetComponent("Button")

    self.bgBtn.onClick:RemoveAllListeners()
    self.bgBtn.onClick:AddListener(function ()
        self:_openGroundAucFunc()
    end)

    self.currentTime = TimeSynchronized.GetTheCurrentTime()
    self.startTimeDown = true
    self.timeDown = true
    Event.AddListener("c_RefreshLateUpdate", self.LateUpdate, self)
    --UpdateBeat:Add(self.Update, self)
    --LateUpdateBeat:Add(self.LateUpdate, self)
end

--打开拍卖界面，即将拍卖
function UIBubbleGroundAucSoonItem:_openGroundAucFunc()
    --self.soonTimeText.text
    ct.OpenCtrl("GroundAuctionCtrl", self.data)
end

function UIBubbleGroundAucSoonItem:Close()
    self.timeDown = false
    Event.RemoveListener("c_RefreshLateUpdate", self.LateUpdate, self)
    destroyImmediate(self.bubbleRect.gameObject)
    self.data.groundObj.transform.localScale = Vector3.zero
    self.bubbleRect = nil
    self = nil
end

function UIBubbleGroundAucSoonItem:LateUpdate()
    if not self.timeDown then
        return
    end
    if self.data.groundObj and self.bubbleRect then
        --update 预制与ui item 之间的位置
        self.bubbleRect.anchoredPosition = UnityEngine.Camera.main:WorldToScreenPoint(self.data.groundObj.transform.position + Vector3.New(0.5, 0.5, 0.05))
    else
        ct.log("cycle_w6_GroundAuc", "---------------")
    end

    if self.startTimeDown then
        --即将拍卖倒计时
        local finishTime = self.data.beginTime
        self.currentTime = self.currentTime + UnityEngine.Time.unscaledDeltaTime

        local remainTime = finishTime - self.currentTime
        if remainTime < 0 then
            self.startTimeDown = false
            --Event.Brocast("m_GroundAucStateChange", self.data.id)
            return
        end

        local timeTable = getFormatUnixTime(remainTime)
        local timeStr = timeTable.minute..":"..timeTable.second
        self.soonTimeText.text = timeStr

        if self.currentTime >= finishTime then
            self.startTimeDown = false
            --Event.Brocast("m_GroundAucStateChange", self.data.id)
            return
        end
    end

end